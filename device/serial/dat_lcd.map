Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o (exit)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
                              main.o (__iob)

Allocating common symbols
Common symbol       size              file

__iob               0x6               /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800100         0x0000ff00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD display.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x52c
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_22
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_30
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_21
                0x000000ca                __vector_15
                0x000000ca                __vector_29
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
                0x000000ca                __vector_20
 .text          0x000000ce       0xce main.o
                0x000000ce                USARTgetchar
                0x000000de                USARTputchar
                0x000000f0                __vector_28
                0x0000015e                InitUSART
 .text          0x0000019c      0x37a display.o
                0x0000019c                datarw
                0x000001ae                letterwrite
                0x000001ee                lcd_cursor
                0x0000034c                instruction_read
                0x00000426                get_current_address
                0x00000434                write_db74
                0x0000045e                data_write
                0x000004b6                char_write
                0x000004ba                string_write
 .text          0x00000516        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text          0x00000516        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text          0x00000516        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x00000516        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
                0x00000516                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x00000516       0x12 main.o
                0x00000516                main
 .text.libgcc.mul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
                0x00000528                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000528        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
                0x00000528                exit
                0x00000528                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000528        0x4 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000052c                _etext = .

.data           0x00800100       0x10 load address 0x0000052c
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100        0xf main.o
                0x00800100                empty
 .data          0x0080010f        0x0 display.o
 .data          0x0080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .data          0x0080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0080010f        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0080010f        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800110                . = ALIGN (0x2)
 *fill*         0x0080010f        0x1 00
                0x00800110                _edata = .
                0x00800110                PROVIDE (__data_end, .)

.bss            0x00800110       0x18
                0x00800110                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800110        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800110       0x12 main.o
                0x00800110                c
                0x00800120                count
 .bss           0x00800122        0x0 display.o
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_exit.o)
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.7.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00800122        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800122        0x6 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
                0x00800122                __iob
                0x00800128                PROVIDE (__bss_end, .)
                0x0000052c                __data_load_start = LOADADDR (.data)
                0x0000053c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800128        0x0
                0x00800128                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800128                PROVIDE (__noinit_end, .)
                0x00800128                _end = .
                0x00800128                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1de8
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o
 .stab          0x000006cc      0x660 main.o
                                0x66c (size before relaxing)
 .stab          0x00000d2c      0xdbc display.o
                                0xfd8 (size before relaxing)
 .stab          0x00001ae8      0x300 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
                                0x30c (size before relaxing)

.stabstr        0x00000000     0x11cc
 *(.stabstr)
 .stabstr       0x00000000     0x11cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/crtm1284p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x22
 *(.comment)
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 display.o
 .comment       0x00000011       0x11 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr51/libc.a(iob.o)
                                 0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(dat_lcd.elf elf32-avr)
LOAD linker stubs
