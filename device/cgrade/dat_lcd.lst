
dat_lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00001cf4  00001d88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000227  00800146  00800146  00001dce  2**0
                  ALLOC
  3 .stab         00008460  00000000  00000000  00001dd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002160  00000000  00000000  0000a230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000c390  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       8:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
       c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      10:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      14:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      18:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      1c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      20:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      24:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      28:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      2c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      30:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      34:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      38:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      3c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      40:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      44:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      48:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      4c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      50:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      54:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      58:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      5c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      60:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      64:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      68:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      6c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      70:	0c 94 ef 00 	jmp	0x1de	; 0x1de <__vector_28>
      74:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      78:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      7c:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      80:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      84:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      88:	0c 94 a6 00 	jmp	0x14c	; 0x14c <__bad_interrupt>
      8c:	08 00       	.word	0x0008	; ????
      8e:	00 00       	nop
      90:	be 92       	st	-X, r11
      92:	24 49       	sbci	r18, 0x94	; 148
      94:	12 3e       	cpi	r17, 0xE2	; 226
      96:	ab aa       	std	Y+51, r10	; 0x33
      98:	aa 2a       	or	r10, r26
      9a:	be cd       	rjmp	.-1156   	; 0xfffffc18 <__eeprom_end+0xff7efc18>
      9c:	cc cc       	rjmp	.-1640   	; 0xfffffa36 <__eeprom_end+0xff7efa36>
      9e:	4c 3e       	cpi	r20, 0xEC	; 236
      a0:	00 00       	nop
      a2:	00 80       	ld	r0, Z
      a4:	be ab       	std	Y+54, r27	; 0x36
      a6:	aa aa       	std	Y+50, r10	; 0x32
      a8:	aa 3e       	cpi	r26, 0xEA	; 234
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 08       	sbc	r0, r0
      ba:	41 78       	andi	r20, 0x81	; 129
      bc:	d3 bb       	out	0x13, r29	; 19
      be:	43 87       	std	Z+11, r20	; 0x0b
      c0:	d1 13       	cpse	r29, r17
      c2:	3d 19       	sub	r19, r13
      c4:	0e 3c       	cpi	r16, 0xCE	; 206
      c6:	c3 bd       	out	0x23, r28	; 35
      c8:	42 82       	std	Z+2, r4	; 0x02
      ca:	ad 2b       	or	r26, r29
      cc:	3e 68       	ori	r19, 0x8E	; 142
      ce:	ec 82       	std	Y+4, r14	; 0x04
      d0:	76 be       	out	0x36, r7	; 54
      d2:	d9 8f       	std	Y+25, r29	; 0x19
      d4:	e1 a9       	ldd	r30, Z+49	; 0x31
      d6:	3e 4c       	sbci	r19, 0xCE	; 206
      d8:	80 ef       	ldi	r24, 0xF0	; 240
      da:	ff be       	out	0x3f, r15	; 63
      dc:	01 c4       	rjmp	.+2050   	; 0x8e0 <instruction_read+0xc0>
      de:	ff 7f       	andi	r31, 0xFF	; 255
      e0:	3f 00       	.word	0x003f	; ????
      e2:	00 00       	nop
      e4:	00 00       	nop
      e6:	07 63       	ori	r16, 0x37	; 55
      e8:	42 36       	cpi	r20, 0x62	; 98
      ea:	b7 9b       	sbis	0x16, 7	; 22
      ec:	d8 a7       	std	Y+40, r29	; 0x28
      ee:	1a 39       	cpi	r17, 0x9A	; 154
      f0:	68 56       	subi	r22, 0x68	; 104
      f2:	18 ae       	std	Y+56, r1	; 0x38
      f4:	ba ab       	std	Y+50, r27	; 0x32
      f6:	55 8c       	ldd	r5, Z+29	; 0x1d
      f8:	1d 3c       	cpi	r17, 0xCD	; 205
      fa:	b7 cc       	rjmp	.-1682   	; 0xfffffa6a <__eeprom_end+0xff7efa6a>
      fc:	57 63       	ori	r21, 0x37	; 55
      fe:	bd 6d       	ori	r27, 0xDD	; 221
     100:	ed fd       	.word	0xfded	; ????
     102:	75 3e       	cpi	r23, 0xE5	; 229
     104:	f6 17       	cp	r31, r22
     106:	72 31       	cpi	r23, 0x12	; 18
     108:	bf 00       	.word	0x00bf	; ????
     10a:	00 00       	nop
     10c:	80 3f       	cpi	r24, 0xF0	; 240

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e4       	ldi	r29, 0x40	; 64
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e4 ef       	ldi	r30, 0xF4	; 244
     122:	fc e1       	ldi	r31, 0x1C	; 28
     124:	00 e0       	ldi	r16, 0x00	; 0
     126:	0b bf       	out	0x3b, r16	; 59
     128:	02 c0       	rjmp	.+4      	; 0x12e <__do_copy_data+0x14>
     12a:	07 90       	elpm	r0, Z+
     12c:	0d 92       	st	X+, r0
     12e:	a6 34       	cpi	r26, 0x46	; 70
     130:	b1 07       	cpc	r27, r17
     132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x10>

00000134 <__do_clear_bss>:
     134:	13 e0       	ldi	r17, 0x03	; 3
     136:	a6 e4       	ldi	r26, 0x46	; 70
     138:	b1 e0       	ldi	r27, 0x01	; 1
     13a:	01 c0       	rjmp	.+2      	; 0x13e <.do_clear_bss_start>

0000013c <.do_clear_bss_loop>:
     13c:	1d 92       	st	X+, r1

0000013e <.do_clear_bss_start>:
     13e:	ad 36       	cpi	r26, 0x6D	; 109
     140:	b1 07       	cpc	r27, r17
     142:	e1 f7       	brne	.-8      	; 0x13c <.do_clear_bss_loop>
     144:	0e 94 45 05 	call	0xa8a	; 0xa8a <main>
     148:	0c 94 78 0e 	jmp	0x1cf0	; 0x1cf0 <_exit>

0000014c <__bad_interrupt>:
     14c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000150 <InitUSART>:

// Initialize USART
void InitUSART(void)
{
    // Set the Baud Rate to 9600 for 1 MHz system clock
    UBRR1H = 0;
     150:	10 92 cd 00 	sts	0x00CD, r1
    UBRR1L = 12;
     154:	8c e0       	ldi	r24, 0x0C	; 12
     156:	80 93 cc 00 	sts	0x00CC, r24
    
    // Enable The Receiver and Transmitter
    UCSR1B |= (1 << RXCIE1) | (1 << TXCIE1) | (1 << RXEN1) | (1 << TXEN1);
     15a:	e9 ec       	ldi	r30, 0xC9	; 201
     15c:	f0 e0       	ldi	r31, 0x00	; 0
     15e:	80 81       	ld	r24, Z
     160:	88 6d       	ori	r24, 0xD8	; 216
     162:	80 83       	st	Z, r24
    
    // Set U2X0 to reduce the Baud Rate error
    UCSR1A |= (1 << U2X1 );
     164:	e8 ec       	ldi	r30, 0xC8	; 200
     166:	f0 e0       	ldi	r31, 0x00	; 0
     168:	80 81       	ld	r24, Z
     16a:	82 60       	ori	r24, 0x02	; 2
     16c:	80 83       	st	Z, r24
    
    // Set the Frame Format to 8
    // Set the Parity to No Parity
    // Set the Stop Bits to 2
    UCSR1C |= (1 << UCSZ11) | (1 << UCSZ10) | (1 << USBS1);
     16e:	ea ec       	ldi	r30, 0xCA	; 202
     170:	f0 e0       	ldi	r31, 0x00	; 0
     172:	80 81       	ld	r24, Z
     174:	8e 60       	ori	r24, 0x0E	; 14
     176:	80 83       	st	Z, r24
     178:	08 95       	ret

0000017a <peekChar>:

char peekChar(void)
{
    char ret = '\0';
     
    if(rxReadPos != rxWritePos)
     17a:	e0 91 52 01 	lds	r30, 0x0152
     17e:	80 91 51 01 	lds	r24, 0x0151
     182:	e8 17       	cp	r30, r24
     184:	29 f0       	breq	.+10     	; 0x190 <peekChar+0x16>
    {
        ret = rxBuffer[rxReadPos];
     186:	f0 e0       	ldi	r31, 0x00	; 0
     188:	e7 51       	subi	r30, 0x17	; 23
     18a:	fd 4f       	sbci	r31, 0xFD	; 253
     18c:	80 81       	ld	r24, Z
     18e:	08 95       	ret
    //stdout= &my_stream;
}

char peekChar(void)
{
    char ret = '\0';
     190:	80 e0       	ldi	r24, 0x00	; 0
    {
        ret = rxBuffer[rxReadPos];
    }
     
    return ret;
}
     192:	08 95       	ret

00000194 <getChar>:

char getChar(void)
{
    char ret = '\0';
    
    ret = rxBuffer[rxReadPos];
     194:	90 91 52 01 	lds	r25, 0x0152
     198:	e9 2f       	mov	r30, r25
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	e7 51       	subi	r30, 0x17	; 23
     19e:	fd 4f       	sbci	r31, 0xFD	; 253
     1a0:	80 81       	ld	r24, Z
     
    rxReadPos++;
     1a2:	9f 5f       	subi	r25, 0xFF	; 255
     
    if(rxReadPos >= RX_BUFFER_SIZE)
     1a4:	97 fd       	sbrc	r25, 7
     1a6:	03 c0       	rjmp	.+6      	; 0x1ae <getChar+0x1a>
{
    char ret = '\0';
    
    ret = rxBuffer[rxReadPos];
     
    rxReadPos++;
     1a8:	90 93 52 01 	sts	0x0152, r25
     1ac:	08 95       	ret
     
    if(rxReadPos >= RX_BUFFER_SIZE)
    {
        rxReadPos = 0;
     1ae:	10 92 52 01 	sts	0x0152, r1
    }
    
    return ret;
}
     1b2:	08 95       	ret

000001b4 <serialStart>:

int serialStart(void)
{
    if ((serial_history[0]==serialStartChar)&&(serial_history[1]==serialStartChar)&&(serial_history[2]==serialStartChar))
     1b4:	80 91 4e 01 	lds	r24, 0x014E
     1b8:	90 91 01 01 	lds	r25, 0x0101
     1bc:	89 13       	cpse	r24, r25
     1be:	0c c0       	rjmp	.+24     	; 0x1d8 <serialStart+0x24>
     1c0:	20 91 4f 01 	lds	r18, 0x014F
     1c4:	28 13       	cpse	r18, r24
     1c6:	08 c0       	rjmp	.+16     	; 0x1d8 <serialStart+0x24>
     1c8:	30 91 50 01 	lds	r19, 0x0150
     1cc:	81 e0       	ldi	r24, 0x01	; 1
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	32 17       	cp	r19, r18
     1d2:	21 f0       	breq	.+8      	; 0x1dc <serialStart+0x28>
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	08 95       	ret
        return 1;
    else
        return 0;
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	90 e0       	ldi	r25, 0x00	; 0
}
     1dc:	08 95       	ret

000001de <__vector_28>:
union float2bytes { 
    float f; 
    char b[sizeof(float)];
};

ISR(USART1_RX_vect){
     1de:	1f 92       	push	r1
     1e0:	0f 92       	push	r0
     1e2:	0f b6       	in	r0, 0x3f	; 63
     1e4:	0f 92       	push	r0
     1e6:	11 24       	eor	r1, r1
     1e8:	0b b6       	in	r0, 0x3b	; 59
     1ea:	0f 92       	push	r0
     1ec:	2f 93       	push	r18
     1ee:	3f 93       	push	r19
     1f0:	4f 93       	push	r20
     1f2:	5f 93       	push	r21
     1f4:	6f 93       	push	r22
     1f6:	7f 93       	push	r23
     1f8:	8f 93       	push	r24
     1fa:	9f 93       	push	r25
     1fc:	af 93       	push	r26
     1fe:	bf 93       	push	r27
     200:	ef 93       	push	r30
     202:	ff 93       	push	r31
    

    //shift serial history back one
    serial_history[2] = serial_history[1];
     204:	80 91 4f 01 	lds	r24, 0x014F
     208:	80 93 50 01 	sts	0x0150, r24
    serial_history[1] = serial_history[0];
     20c:	80 91 4e 01 	lds	r24, 0x014E
     210:	80 93 4f 01 	sts	0x014F, r24
    //Read value out of the UART buffer
    serial_history[0] = UDR1;
     214:	80 91 ce 00 	lds	r24, 0x00CE
     218:	80 93 4e 01 	sts	0x014E, r24

    if (update_progress==1)
     21c:	80 91 4c 01 	lds	r24, 0x014C
     220:	90 91 4d 01 	lds	r25, 0x014D
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	61 f4       	brne	.+24     	; 0x240 <__vector_28+0x62>
    {
        rxBuffer[rxWritePos] = serial_history[0];
     228:	80 91 51 01 	lds	r24, 0x0151
     22c:	90 91 4e 01 	lds	r25, 0x014E
     230:	e8 2f       	mov	r30, r24
     232:	f0 e0       	ldi	r31, 0x00	; 0
     234:	e7 51       	subi	r30, 0x17	; 23
     236:	fd 4f       	sbci	r31, 0xFD	; 253
     238:	90 83       	st	Z, r25
        rxWritePos++;
     23a:	8f 5f       	subi	r24, 0xFF	; 255
     23c:	80 93 51 01 	sts	0x0151, r24
    }   

    if(serialStart()){
     240:	0e 94 da 00 	call	0x1b4	; 0x1b4 <serialStart>
     244:	89 2b       	or	r24, r25
     246:	31 f0       	breq	.+12     	; 0x254 <__vector_28+0x76>
        update_progress = 1;
     248:	81 e0       	ldi	r24, 0x01	; 1
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	90 93 4d 01 	sts	0x014D, r25
     250:	80 93 4c 01 	sts	0x014C, r24
        //lcd_cursor();
        //eeprom_index = 0;
        //string_write("1");
    } 

    if(rxWritePos >= RX_BUFFER_SIZE)
     254:	80 91 51 01 	lds	r24, 0x0151
     258:	87 fd       	sbrc	r24, 7
    {
        rxWritePos = 0;
     25a:	10 92 51 01 	sts	0x0151, r1
    }

}
     25e:	ff 91       	pop	r31
     260:	ef 91       	pop	r30
     262:	bf 91       	pop	r27
     264:	af 91       	pop	r26
     266:	9f 91       	pop	r25
     268:	8f 91       	pop	r24
     26a:	7f 91       	pop	r23
     26c:	6f 91       	pop	r22
     26e:	5f 91       	pop	r21
     270:	4f 91       	pop	r20
     272:	3f 91       	pop	r19
     274:	2f 91       	pop	r18
     276:	0f 90       	pop	r0
     278:	0b be       	out	0x3b, r0	; 59
     27a:	0f 90       	pop	r0
     27c:	0f be       	out	0x3f, r0	; 63
     27e:	0f 90       	pop	r0
     280:	1f 90       	pop	r1
     282:	18 95       	reti

00000284 <serialEnd>:
        return 0;
}

int serialEnd(void)
{
    if ((serial_history[0]==serialEndChar)&&(serial_history[1]==serialEndChar)&&(serial_history[2]==serialEndChar))
     284:	80 91 4e 01 	lds	r24, 0x014E
     288:	90 91 00 01 	lds	r25, 0x0100
     28c:	89 13       	cpse	r24, r25
     28e:	0c c0       	rjmp	.+24     	; 0x2a8 <serialEnd+0x24>
     290:	20 91 4f 01 	lds	r18, 0x014F
     294:	28 13       	cpse	r18, r24
     296:	08 c0       	rjmp	.+16     	; 0x2a8 <serialEnd+0x24>
     298:	30 91 50 01 	lds	r19, 0x0150
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	32 17       	cp	r19, r18
     2a2:	21 f0       	breq	.+8      	; 0x2ac <serialEnd+0x28>
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	08 95       	ret
        return 1;
    else
        return 0;
     2a8:	80 e0       	ldi	r24, 0x00	; 0
     2aa:	90 e0       	ldi	r25, 0x00	; 0
}
     2ac:	08 95       	ret

000002ae <my_eeprom_read_int>:

int my_eeprom_read_int(int address)
{
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	1f 92       	push	r1
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
    char temp_num = ((char)eeprom_read_byte((int *)address));
     2b8:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <__eerd_byte_m1284p>
     2bc:	89 83       	std	Y+1, r24	; 0x01
    return (atoi(&temp_num));
     2be:	ce 01       	movw	r24, r28
     2c0:	01 96       	adiw	r24, 0x01	; 1
     2c2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <atoi>
}
     2c6:	0f 90       	pop	r0
     2c8:	df 91       	pop	r29
     2ca:	cf 91       	pop	r28
     2cc:	08 95       	ret

000002ce <my_eeprom_read_char>:

char my_eeprom_read_char(int address)
{
    return (char)eeprom_read_byte((int *)address);
     2ce:	0c 94 b6 0d 	jmp	0x1b6c	; 0x1b6c <__eerd_byte_m1284p>

000002d2 <my_eeprom_read_float>:
}

float my_eeprom_read_float(int address)
{
    return (float)(eeprom_read_float((const float *)address));
     2d2:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>

000002d6 <my_eeprom_read_string>:
}

void my_eeprom_read_string(char *dest, int address, int num_chars)
{
    eeprom_read_block((void *)dest,(const void *)address,num_chars);
     2d6:	0c 94 a6 0d 	jmp	0x1b4c	; 0x1b4c <__eerd_block_m1284p>

000002da <string_write_int>:
}

void string_write_int(int num, int num_digits)
{
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	18 2f       	mov	r17, r24
     2e4:	09 2f       	mov	r16, r25
    char *temp = (char *)malloc(num_digits*sizeof(char));
     2e6:	cb 01       	movw	r24, r22
     2e8:	0e 94 2f 0a 	call	0x145e	; 0x145e <malloc>
     2ec:	d8 2f       	mov	r29, r24
     2ee:	c9 2f       	mov	r28, r25
    sprintf(temp,"%d",num);
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	2b e0       	ldi	r18, 0x0B	; 11
     2f6:	31 e0       	ldi	r19, 0x01	; 1
     2f8:	3f 93       	push	r19
     2fa:	2f 93       	push	r18
     2fc:	9f 93       	push	r25
     2fe:	8f 93       	push	r24
     300:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <sprintf>
    string_write(temp);
     304:	8d 2f       	mov	r24, r29
     306:	9c 2f       	mov	r25, r28
     308:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    free(temp);
     30c:	0f 90       	pop	r0
     30e:	0f 90       	pop	r0
     310:	0f 90       	pop	r0
     312:	0f 90       	pop	r0
     314:	0f 90       	pop	r0
     316:	0f 90       	pop	r0
     318:	8d 2f       	mov	r24, r29
     31a:	9c 2f       	mov	r25, r28
}
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	1f 91       	pop	r17
     322:	0f 91       	pop	r16
void string_write_int(int num, int num_digits)
{
    char *temp = (char *)malloc(num_digits*sizeof(char));
    sprintf(temp,"%d",num);
    string_write(temp);
    free(temp);
     324:	0c 94 c7 0a 	jmp	0x158e	; 0x158e <free>

00000328 <string_write_float>:
}

void string_write_float(float num, int dec_digits)
{
     328:	cf 92       	push	r12
     32a:	df 92       	push	r13
     32c:	ef 92       	push	r14
     32e:	ff 92       	push	r15
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	00 d0       	rcall	.+0      	; 0x33a <string_write_float+0x12>
     33a:	00 d0       	rcall	.+0      	; 0x33c <string_write_float+0x14>
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	8a 01       	movw	r16, r20
    double intpart, fractpart;
    fractpart = modf(num, &intpart);
     342:	ae 01       	movw	r20, r28
     344:	4f 5f       	subi	r20, 0xFF	; 255
     346:	5f 4f       	sbci	r21, 0xFF	; 255
     348:	0e 94 32 08 	call	0x1064	; 0x1064 <modf>
     34c:	6b 01       	movw	r12, r22
     34e:	7c 01       	movw	r14, r24

    string_write_int((int)intpart,4); string_write("."); 
     350:	69 81       	ldd	r22, Y+1	; 0x01
     352:	7a 81       	ldd	r23, Y+2	; 0x02
     354:	8b 81       	ldd	r24, Y+3	; 0x03
     356:	9c 81       	ldd	r25, Y+4	; 0x04
     358:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__fixsfsi>
     35c:	dc 01       	movw	r26, r24
     35e:	cb 01       	movw	r24, r22
     360:	64 e0       	ldi	r22, 0x04	; 4
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	0e 94 6d 01 	call	0x2da	; 0x2da <string_write_int>
     368:	84 e4       	ldi	r24, 0x44	; 68
     36a:	91 e0       	ldi	r25, 0x01	; 1
     36c:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>

    int temp = (int)(abs((round((fractpart*pow(10,dec_digits))))));
     370:	b8 01       	movw	r22, r16
     372:	88 27       	eor	r24, r24
     374:	77 fd       	sbrc	r23, 7
     376:	80 95       	com	r24
     378:	98 2f       	mov	r25, r24
     37a:	0e 94 08 07 	call	0xe10	; 0xe10 <__floatsisf>
     37e:	9b 01       	movw	r18, r22
     380:	ac 01       	movw	r20, r24
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	70 e0       	ldi	r23, 0x00	; 0
     386:	80 e2       	ldi	r24, 0x20	; 32
     388:	91 e4       	ldi	r25, 0x41	; 65
     38a:	0e 94 c8 08 	call	0x1190	; 0x1190 <pow>
     38e:	9b 01       	movw	r18, r22
     390:	ac 01       	movw	r20, r24
     392:	c7 01       	movw	r24, r14
     394:	b6 01       	movw	r22, r12
     396:	0e 94 65 08 	call	0x10ca	; 0x10ca <__mulsf3>
     39a:	0e 94 14 09 	call	0x1228	; 0x1228 <round>
     39e:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__fixsfsi>
     3a2:	7b 01       	movw	r14, r22
     3a4:	77 ff       	sbrs	r23, 7
     3a6:	04 c0       	rjmp	.+8      	; 0x3b0 <string_write_float+0x88>
     3a8:	ee 24       	eor	r14, r14
     3aa:	ff 24       	eor	r15, r15
     3ac:	e6 1a       	sub	r14, r22
     3ae:	f7 0a       	sbc	r15, r23
    int digits = 0;

    if (temp!=0)
     3b0:	e1 14       	cp	r14, r1
     3b2:	f1 04       	cpc	r15, r1
     3b4:	a1 f0       	breq	.+40     	; 0x3de <string_write_float+0xb6>
    {
        digits = floor(log10(abs(temp)))+1;
     3b6:	b7 01       	movw	r22, r14
     3b8:	88 27       	eor	r24, r24
     3ba:	77 fd       	sbrc	r23, 7
     3bc:	80 95       	com	r24
     3be:	98 2f       	mov	r25, r24
     3c0:	0e 94 08 07 	call	0xe10	; 0xe10 <__floatsisf>
     3c4:	0e 94 e7 07 	call	0xfce	; 0xfce <log10>
     3c8:	0e 94 43 07 	call	0xe86	; 0xe86 <floor>
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	40 e8       	ldi	r20, 0x80	; 128
     3d2:	5f e3       	ldi	r21, 0x3F	; 63
     3d4:	0e 94 71 06 	call	0xce2	; 0xce2 <__addsf3>
     3d8:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__fixsfsi>
     3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <string_write_float+0xba>
    } else {
        digits = 0;
     3de:	60 e0       	ldi	r22, 0x00	; 0
     3e0:	70 e0       	ldi	r23, 0x00	; 0
    }

    int i=0;
    for (i=0; i<(dec_digits-digits); i++)
     3e2:	c1 2c       	mov	r12, r1
     3e4:	d1 2c       	mov	r13, r1
     3e6:	06 1b       	sub	r16, r22
     3e8:	17 0b       	sbc	r17, r23
     3ea:	c0 16       	cp	r12, r16
     3ec:	d1 06       	cpc	r13, r17
     3ee:	44 f4       	brge	.+16     	; 0x400 <string_write_float+0xd8>
    {
        string_write("0");
     3f0:	8e e0       	ldi	r24, 0x0E	; 14
     3f2:	91 e0       	ldi	r25, 0x01	; 1
     3f4:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    } else {
        digits = 0;
    }

    int i=0;
    for (i=0; i<(dec_digits-digits); i++)
     3f8:	8f ef       	ldi	r24, 0xFF	; 255
     3fa:	c8 1a       	sub	r12, r24
     3fc:	d8 0a       	sbc	r13, r24
     3fe:	f5 cf       	rjmp	.-22     	; 0x3ea <string_write_float+0xc2>
    {
        string_write("0");
    }

    string_write_int(temp,4);
     400:	64 e0       	ldi	r22, 0x04	; 4
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	c7 01       	movw	r24, r14
}
     406:	0f 90       	pop	r0
     408:	0f 90       	pop	r0
     40a:	0f 90       	pop	r0
     40c:	0f 90       	pop	r0
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	1f 91       	pop	r17
     414:	0f 91       	pop	r16
     416:	ff 90       	pop	r15
     418:	ef 90       	pop	r14
     41a:	df 90       	pop	r13
     41c:	cf 90       	pop	r12
    for (i=0; i<(dec_digits-digits); i++)
    {
        string_write("0");
    }

    string_write_int(temp,4);
     41e:	0c 94 6d 01 	jmp	0x2da	; 0x2da <string_write_int>

00000422 <print_eeprom_contents>:
}

void print_eeprom_contents()
{
     422:	1f 93       	push	r17
     424:	cf 93       	push	r28
     426:	df 93       	push	r29
    int i=0;
    char one_byte;

    for (i=0; i<1+NUM_GRID_CELLS+num_stations*STATION_BLOCKSIZE; i++)
     428:	c0 e0       	ldi	r28, 0x00	; 0
     42a:	d0 e0       	ldi	r29, 0x00	; 0
     42c:	1c e1       	ldi	r17, 0x1C	; 28
     42e:	20 91 e3 02 	lds	r18, 0x02E3
     432:	30 91 e4 02 	lds	r19, 0x02E4
     436:	12 9f       	mul	r17, r18
     438:	c0 01       	movw	r24, r0
     43a:	13 9f       	mul	r17, r19
     43c:	90 0d       	add	r25, r0
     43e:	11 24       	eor	r1, r1
     440:	8c 59       	subi	r24, 0x9C	; 156
     442:	9f 4f       	sbci	r25, 0xFF	; 255
     444:	8c 17       	cp	r24, r28
     446:	9d 07       	cpc	r25, r29
     448:	84 f0       	brlt	.+32     	; 0x46a <print_eeprom_contents+0x48>
    return (atoi(&temp_num));
}

char my_eeprom_read_char(int address)
{
    return (char)eeprom_read_byte((int *)address);
     44a:	ce 01       	movw	r24, r28
     44c:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <__eerd_byte_m1284p>
    char one_byte;

    for (i=0; i<1+NUM_GRID_CELLS+num_stations*STATION_BLOCKSIZE; i++)
    {
        one_byte = my_eeprom_read_char(i);
        if (one_byte == '\0')
     450:	81 11       	cpse	r24, r1
     452:	01 c0       	rjmp	.+2      	; 0x456 <print_eeprom_contents+0x34>
            one_byte = '?';
     454:	8f e3       	ldi	r24, 0x3F	; 63
        char_write(one_byte);
     456:	0e 94 ef 04 	call	0x9de	; 0x9de <char_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     45a:	87 ea       	ldi	r24, 0xA7	; 167
     45c:	91 e6       	ldi	r25, 0x61	; 97
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	f1 f7       	brne	.-4      	; 0x45e <print_eeprom_contents+0x3c>
     462:	00 c0       	rjmp	.+0      	; 0x464 <print_eeprom_contents+0x42>
     464:	00 00       	nop
void print_eeprom_contents()
{
    int i=0;
    char one_byte;

    for (i=0; i<1+NUM_GRID_CELLS+num_stations*STATION_BLOCKSIZE; i++)
     466:	21 96       	adiw	r28, 0x01	; 1
     468:	e2 cf       	rjmp	.-60     	; 0x42e <print_eeprom_contents+0xc>
        if (one_byte == '\0')
            one_byte = '?';
        char_write(one_byte);
        _delay_ms(100);
    }
}
     46a:	df 91       	pop	r29
     46c:	cf 91       	pop	r28
     46e:	1f 91       	pop	r17
     470:	08 95       	ret

00000472 <print_eeprom_station_contents>:

void print_eeprom_station_contents()
{
     472:	1f 93       	push	r17
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
    int start = FIRST_STATION_OFFSET;
    int i=0;
    char one_byte;

    for (i=0; i<STATION_BLOCKSIZE*num_stations; i++)
     478:	c0 e0       	ldi	r28, 0x00	; 0
     47a:	d0 e0       	ldi	r29, 0x00	; 0
     47c:	1c e1       	ldi	r17, 0x1C	; 28
     47e:	20 91 e3 02 	lds	r18, 0x02E3
     482:	30 91 e4 02 	lds	r19, 0x02E4
     486:	12 9f       	mul	r17, r18
     488:	c0 01       	movw	r24, r0
     48a:	13 9f       	mul	r17, r19
     48c:	90 0d       	add	r25, r0
     48e:	11 24       	eor	r1, r1
     490:	c8 17       	cp	r28, r24
     492:	d9 07       	cpc	r29, r25
     494:	94 f4       	brge	.+36     	; 0x4ba <print_eeprom_station_contents+0x48>
    return (atoi(&temp_num));
}

char my_eeprom_read_char(int address)
{
    return (char)eeprom_read_byte((int *)address);
     496:	ce 01       	movw	r24, r28
     498:	8b 59       	subi	r24, 0x9B	; 155
     49a:	9f 4f       	sbci	r25, 0xFF	; 255
     49c:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <__eerd_byte_m1284p>
    char one_byte;

    for (i=0; i<STATION_BLOCKSIZE*num_stations; i++)
    {
        one_byte = my_eeprom_read_char(start+i);
        if (one_byte == '\0')
     4a0:	81 11       	cpse	r24, r1
     4a2:	01 c0       	rjmp	.+2      	; 0x4a6 <print_eeprom_station_contents+0x34>
            one_byte = '?';
     4a4:	8f e3       	ldi	r24, 0x3F	; 63
        char_write(one_byte);
     4a6:	0e 94 ef 04 	call	0x9de	; 0x9de <char_write>
     4aa:	87 ea       	ldi	r24, 0xA7	; 167
     4ac:	91 e6       	ldi	r25, 0x61	; 97
     4ae:	01 97       	sbiw	r24, 0x01	; 1
     4b0:	f1 f7       	brne	.-4      	; 0x4ae <print_eeprom_station_contents+0x3c>
     4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <print_eeprom_station_contents+0x42>
     4b4:	00 00       	nop
{
    int start = FIRST_STATION_OFFSET;
    int i=0;
    char one_byte;

    for (i=0; i<STATION_BLOCKSIZE*num_stations; i++)
     4b6:	21 96       	adiw	r28, 0x01	; 1
     4b8:	e2 cf       	rjmp	.-60     	; 0x47e <print_eeprom_station_contents+0xc>
        if (one_byte == '\0')
            one_byte = '?';
        char_write(one_byte);
        _delay_ms(100);
    }
}
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	08 95       	ret

000004c2 <print_station>:

void print_station(int index)
{
     4c2:	0f 93       	push	r16
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	8c 01       	movw	r16, r24
    int i;
    string_write("call: "); for (i=0; i<8; i++) char_write(all_stations[index].callsign[i]); _delay_ms(1000); string_write("\n"); 
     4cc:	80 e1       	ldi	r24, 0x10	; 16
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     4d4:	8c e1       	ldi	r24, 0x1C	; 28
     4d6:	80 9f       	mul	r24, r16
     4d8:	e0 01       	movw	r28, r0
     4da:	81 9f       	mul	r24, r17
     4dc:	d0 0d       	add	r29, r0
     4de:	11 24       	eor	r1, r1
     4e0:	00 e0       	ldi	r16, 0x00	; 0
     4e2:	10 e0       	ldi	r17, 0x00	; 0
     4e4:	e0 91 e7 02 	lds	r30, 0x02E7
     4e8:	f0 91 e8 02 	lds	r31, 0x02E8
     4ec:	ec 0f       	add	r30, r28
     4ee:	fd 1f       	adc	r31, r29
     4f0:	e0 0f       	add	r30, r16
     4f2:	f1 1f       	adc	r31, r17
     4f4:	80 81       	ld	r24, Z
     4f6:	0e 94 ef 04 	call	0x9de	; 0x9de <char_write>
     4fa:	0f 5f       	subi	r16, 0xFF	; 255
     4fc:	1f 4f       	sbci	r17, 0xFF	; 255
     4fe:	08 30       	cpi	r16, 0x08	; 8
     500:	11 05       	cpc	r17, r1
     502:	81 f7       	brne	.-32     	; 0x4e4 <print_station+0x22>
     504:	2f e3       	ldi	r18, 0x3F	; 63
     506:	8d e0       	ldi	r24, 0x0D	; 13
     508:	93 e0       	ldi	r25, 0x03	; 3
     50a:	21 50       	subi	r18, 0x01	; 1
     50c:	80 40       	sbci	r24, 0x00	; 0
     50e:	90 40       	sbci	r25, 0x00	; 0
     510:	e1 f7       	brne	.-8      	; 0x50a <print_station+0x48>
     512:	00 c0       	rjmp	.+0      	; 0x514 <print_station+0x52>
     514:	00 00       	nop
     516:	87 e1       	ldi	r24, 0x17	; 23
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    string_write("freq: "); string_write_float(all_stations[index].freq,1); _delay_ms(1000); string_write("\n");
     51e:	89 e1       	ldi	r24, 0x19	; 25
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     526:	e0 91 e7 02 	lds	r30, 0x02E7
     52a:	f0 91 e8 02 	lds	r31, 0x02E8
     52e:	ec 0f       	add	r30, r28
     530:	fd 1f       	adc	r31, r29
     532:	60 85       	ldd	r22, Z+8	; 0x08
     534:	71 85       	ldd	r23, Z+9	; 0x09
     536:	82 85       	ldd	r24, Z+10	; 0x0a
     538:	93 85       	ldd	r25, Z+11	; 0x0b
     53a:	41 e0       	ldi	r20, 0x01	; 1
     53c:	50 e0       	ldi	r21, 0x00	; 0
     53e:	0e 94 94 01 	call	0x328	; 0x328 <string_write_float>
     542:	2f e3       	ldi	r18, 0x3F	; 63
     544:	8d e0       	ldi	r24, 0x0D	; 13
     546:	93 e0       	ldi	r25, 0x03	; 3
     548:	21 50       	subi	r18, 0x01	; 1
     54a:	80 40       	sbci	r24, 0x00	; 0
     54c:	90 40       	sbci	r25, 0x00	; 0
     54e:	e1 f7       	brne	.-8      	; 0x548 <print_station+0x86>
     550:	00 c0       	rjmp	.+0      	; 0x552 <print_station+0x90>
     552:	00 00       	nop
     554:	87 e1       	ldi	r24, 0x17	; 23
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    string_write("lat: "); string_write_float(all_stations[index].lat,4); _delay_ms(1000); string_write("\n");
     55c:	80 e2       	ldi	r24, 0x20	; 32
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     564:	e0 91 e7 02 	lds	r30, 0x02E7
     568:	f0 91 e8 02 	lds	r31, 0x02E8
     56c:	ec 0f       	add	r30, r28
     56e:	fd 1f       	adc	r31, r29
     570:	64 85       	ldd	r22, Z+12	; 0x0c
     572:	75 85       	ldd	r23, Z+13	; 0x0d
     574:	86 85       	ldd	r24, Z+14	; 0x0e
     576:	97 85       	ldd	r25, Z+15	; 0x0f
     578:	44 e0       	ldi	r20, 0x04	; 4
     57a:	50 e0       	ldi	r21, 0x00	; 0
     57c:	0e 94 94 01 	call	0x328	; 0x328 <string_write_float>
     580:	2f e3       	ldi	r18, 0x3F	; 63
     582:	8d e0       	ldi	r24, 0x0D	; 13
     584:	93 e0       	ldi	r25, 0x03	; 3
     586:	21 50       	subi	r18, 0x01	; 1
     588:	80 40       	sbci	r24, 0x00	; 0
     58a:	90 40       	sbci	r25, 0x00	; 0
     58c:	e1 f7       	brne	.-8      	; 0x586 <print_station+0xc4>
     58e:	00 c0       	rjmp	.+0      	; 0x590 <print_station+0xce>
     590:	00 00       	nop
     592:	87 e1       	ldi	r24, 0x17	; 23
     594:	91 e0       	ldi	r25, 0x01	; 1
     596:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    string_write("lon: "); string_write_float(all_stations[index].lon,4); _delay_ms(1000); string_write("\n");
     59a:	86 e2       	ldi	r24, 0x26	; 38
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     5a2:	e0 91 e7 02 	lds	r30, 0x02E7
     5a6:	f0 91 e8 02 	lds	r31, 0x02E8
     5aa:	ec 0f       	add	r30, r28
     5ac:	fd 1f       	adc	r31, r29
     5ae:	60 89       	ldd	r22, Z+16	; 0x10
     5b0:	71 89       	ldd	r23, Z+17	; 0x11
     5b2:	82 89       	ldd	r24, Z+18	; 0x12
     5b4:	93 89       	ldd	r25, Z+19	; 0x13
     5b6:	44 e0       	ldi	r20, 0x04	; 4
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	0e 94 94 01 	call	0x328	; 0x328 <string_write_float>
     5be:	2f e3       	ldi	r18, 0x3F	; 63
     5c0:	8d e0       	ldi	r24, 0x0D	; 13
     5c2:	93 e0       	ldi	r25, 0x03	; 3
     5c4:	21 50       	subi	r18, 0x01	; 1
     5c6:	80 40       	sbci	r24, 0x00	; 0
     5c8:	90 40       	sbci	r25, 0x00	; 0
     5ca:	e1 f7       	brne	.-8      	; 0x5c4 <print_station+0x102>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <print_station+0x10c>
     5ce:	00 00       	nop
     5d0:	87 e1       	ldi	r24, 0x17	; 23
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    string_write("erp: "); string_write_float(all_stations[index].erp,1); _delay_ms(1000); string_write("\n");
     5d8:	8c e2       	ldi	r24, 0x2C	; 44
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     5e0:	e0 91 e7 02 	lds	r30, 0x02E7
     5e4:	f0 91 e8 02 	lds	r31, 0x02E8
     5e8:	ec 0f       	add	r30, r28
     5ea:	fd 1f       	adc	r31, r29
     5ec:	64 89       	ldd	r22, Z+20	; 0x14
     5ee:	75 89       	ldd	r23, Z+21	; 0x15
     5f0:	86 89       	ldd	r24, Z+22	; 0x16
     5f2:	97 89       	ldd	r25, Z+23	; 0x17
     5f4:	41 e0       	ldi	r20, 0x01	; 1
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	0e 94 94 01 	call	0x328	; 0x328 <string_write_float>
     5fc:	2f e3       	ldi	r18, 0x3F	; 63
     5fe:	8d e0       	ldi	r24, 0x0D	; 13
     600:	93 e0       	ldi	r25, 0x03	; 3
     602:	21 50       	subi	r18, 0x01	; 1
     604:	80 40       	sbci	r24, 0x00	; 0
     606:	90 40       	sbci	r25, 0x00	; 0
     608:	e1 f7       	brne	.-8      	; 0x602 <print_station+0x140>
     60a:	00 c0       	rjmp	.+0      	; 0x60c <print_station+0x14a>
     60c:	00 00       	nop
     60e:	87 e1       	ldi	r24, 0x17	; 23
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
    string_write("haat: "); string_write_float(all_stations[index].haat,0); _delay_ms(1000); string_write("\n");
     616:	82 e3       	ldi	r24, 0x32	; 50
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     61e:	e0 91 e7 02 	lds	r30, 0x02E7
     622:	f0 91 e8 02 	lds	r31, 0x02E8
     626:	ec 0f       	add	r30, r28
     628:	fd 1f       	adc	r31, r29
     62a:	60 8d       	ldd	r22, Z+24	; 0x18
     62c:	71 8d       	ldd	r23, Z+25	; 0x19
     62e:	82 8d       	ldd	r24, Z+26	; 0x1a
     630:	93 8d       	ldd	r25, Z+27	; 0x1b
     632:	40 e0       	ldi	r20, 0x00	; 0
     634:	50 e0       	ldi	r21, 0x00	; 0
     636:	0e 94 94 01 	call	0x328	; 0x328 <string_write_float>
     63a:	2f e3       	ldi	r18, 0x3F	; 63
     63c:	8d e0       	ldi	r24, 0x0D	; 13
     63e:	93 e0       	ldi	r25, 0x03	; 3
     640:	21 50       	subi	r18, 0x01	; 1
     642:	80 40       	sbci	r24, 0x00	; 0
     644:	90 40       	sbci	r25, 0x00	; 0
     646:	e1 f7       	brne	.-8      	; 0x640 <print_station+0x17e>
     648:	00 c0       	rjmp	.+0      	; 0x64a <print_station+0x188>
     64a:	00 00       	nop
     64c:	87 e1       	ldi	r24, 0x17	; 23
     64e:	91 e0       	ldi	r25, 0x01	; 1
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	1f 91       	pop	r17
     656:	0f 91       	pop	r16
    string_write("call: "); for (i=0; i<8; i++) char_write(all_stations[index].callsign[i]); _delay_ms(1000); string_write("\n"); 
    string_write("freq: "); string_write_float(all_stations[index].freq,1); _delay_ms(1000); string_write("\n");
    string_write("lat: "); string_write_float(all_stations[index].lat,4); _delay_ms(1000); string_write("\n");
    string_write("lon: "); string_write_float(all_stations[index].lon,4); _delay_ms(1000); string_write("\n");
    string_write("erp: "); string_write_float(all_stations[index].erp,1); _delay_ms(1000); string_write("\n");
    string_write("haat: "); string_write_float(all_stations[index].haat,0); _delay_ms(1000); string_write("\n");
     658:	0c 94 23 05 	jmp	0xa46	; 0xa46 <string_write>

0000065c <datarw>:
}

void datarw(){
	//Set Enable bit high, wait, set enable bit low
	//writes out data on other bits.
    PORTA |= _BV(E);
     65c:	12 9a       	sbi	0x02, 2	; 2
     65e:	81 ee       	ldi	r24, 0xE1	; 225
     660:	94 e0       	ldi	r25, 0x04	; 4
     662:	01 97       	sbiw	r24, 0x01	; 1
     664:	f1 f7       	brne	.-4      	; 0x662 <datarw+0x6>
     666:	00 c0       	rjmp	.+0      	; 0x668 <datarw+0xc>
     668:	00 00       	nop
	_delay_ms(5);
	PORTA &= ~_BV(E);
     66a:	12 98       	cbi	0x02, 2	; 2
     66c:	08 95       	ret

0000066e <lcd_init>:
int chars_written = 0;
int line_num = 1;

int lcd_init()
{
    chars_written = 0;
     66e:	10 92 e6 02 	sts	0x02E6, r1
     672:	10 92 e5 02 	sts	0x02E5, r1
    line_num = 1;
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	90 93 04 01 	sts	0x0104, r25
     67e:	80 93 03 01 	sts	0x0103, r24
	//Power Port D as outputs.
	DDRA |= 0xFF;
     682:	81 b1       	in	r24, 0x01	; 1
     684:	8f ef       	ldi	r24, 0xFF	; 255
     686:	81 b9       	out	0x01, r24	; 1
     688:	87 e8       	ldi	r24, 0x87	; 135
     68a:	93 e1       	ldi	r25, 0x13	; 19
     68c:	01 97       	sbiw	r24, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <lcd_init+0x1e>
     690:	00 c0       	rjmp	.+0      	; 0x692 <lcd_init+0x24>
     692:	00 00       	nop

	//Wait more than 15ms after Vcc = 4.5V
	_delay_ms(20);

	//Function Set Command: 8-Bit interface
    PORTA &= ~_BV(E);
     694:	12 98       	cbi	0x02, 2	; 2
    PORTA &= ~_BV(RS);
     696:	10 98       	cbi	0x02, 0	; 2
    PORTA &= ~_BV(RW);
     698:	11 98       	cbi	0x02, 1	; 2
    PORTA &= ~_BV(DB7);
     69a:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     69c:	15 98       	cbi	0x02, 5	; 2
    PORTA |= _BV(DB5);
     69e:	14 9a       	sbi	0x02, 4	; 2
    PORTA |= _BV(DB4);
     6a0:	13 9a       	sbi	0x02, 3	; 2
    datarw();
     6a2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     6a6:	81 ee       	ldi	r24, 0xE1	; 225
     6a8:	94 e0       	ldi	r25, 0x04	; 4
     6aa:	01 97       	sbiw	r24, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <lcd_init+0x3c>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <lcd_init+0x42>
     6b0:	00 00       	nop

	//Wait more than 4.1 ms
	_delay_ms(5);

	//Function Set Command: 8-Bit interface. Part 2
    datarw();
     6b2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     6b6:	89 ef       	ldi	r24, 0xF9	; 249
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	01 97       	sbiw	r24, 0x01	; 1
     6bc:	f1 f7       	brne	.-4      	; 0x6ba <lcd_init+0x4c>
     6be:	00 c0       	rjmp	.+0      	; 0x6c0 <lcd_init+0x52>
     6c0:	00 00       	nop
	
	//Wait more than 100 us.
	_delay_ms(1);
	
	//Function Set Command 8-Bit interface. Part 3
	datarw();
     6c2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     6c6:	89 ef       	ldi	r24, 0xF9	; 249
     6c8:	90 e0       	ldi	r25, 0x00	; 0
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <lcd_init+0x5c>
     6ce:	00 c0       	rjmp	.+0      	; 0x6d0 <lcd_init+0x62>
     6d0:	00 00       	nop
	_delay_ms(1);

	//Now that this command is written, BF (busy flag) can be checked.

	//Function Set: Sets interface to 4-bit.
	PORTA &= ~_BV(DB7);
     6d2:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     6d4:	15 98       	cbi	0x02, 5	; 2
    PORTA |= _BV(DB5);
     6d6:	14 9a       	sbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     6d8:	13 98       	cbi	0x02, 3	; 2
    datarw();
     6da:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     6de:	89 ef       	ldi	r24, 0xF9	; 249
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	01 97       	sbiw	r24, 0x01	; 1
     6e4:	f1 f7       	brne	.-4      	; 0x6e2 <lcd_init+0x74>
     6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <lcd_init+0x7a>
     6e8:	00 00       	nop
    _delay_ms(1);

	//Need to change how we send data at this point to accomodate 4-bit mode.

    //Function Set: Interface
    PORTA &= ~_BV(DB7);
     6ea:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     6ec:	15 98       	cbi	0x02, 5	; 2
    PORTA |= _BV(DB5);
     6ee:	14 9a       	sbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     6f0:	13 98       	cbi	0x02, 3	; 2
    datarw();
     6f2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     6f6:	89 ef       	ldi	r24, 0xF9	; 249
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <lcd_init+0x8c>
     6fe:	00 c0       	rjmp	.+0      	; 0x700 <lcd_init+0x92>
     700:	00 00       	nop
    _delay_ms(1);


    PORTA |= _BV(DB7); //diff
     702:	16 9a       	sbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     704:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     706:	14 98       	cbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     708:	13 98       	cbi	0x02, 3	; 2
    datarw();
     70a:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     70e:	89 ef       	ldi	r24, 0xF9	; 249
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	01 97       	sbiw	r24, 0x01	; 1
     714:	f1 f7       	brne	.-4      	; 0x712 <lcd_init+0xa4>
     716:	00 c0       	rjmp	.+0      	; 0x718 <lcd_init+0xaa>
     718:	00 00       	nop
    _delay_ms(1);

    //Display OFF
    PORTA &= ~_BV(DB7);
     71a:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     71c:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     71e:	14 98       	cbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     720:	13 98       	cbi	0x02, 3	; 2
    datarw();
     722:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     726:	89 ef       	ldi	r24, 0xF9	; 249
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	01 97       	sbiw	r24, 0x01	; 1
     72c:	f1 f7       	brne	.-4      	; 0x72a <lcd_init+0xbc>
     72e:	00 c0       	rjmp	.+0      	; 0x730 <lcd_init+0xc2>
     730:	00 00       	nop
    _delay_ms(1);

    PORTA |= _BV(DB7);
     732:	16 9a       	sbi	0x02, 6	; 2
    PORTA |= _BV(DB6);//diff
     734:	15 9a       	sbi	0x02, 5	; 2
    PORTA |= _BV(DB5); //diff
     736:	14 9a       	sbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     738:	13 98       	cbi	0x02, 3	; 2
    datarw();
     73a:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     73e:	89 ef       	ldi	r24, 0xF9	; 249
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	01 97       	sbiw	r24, 0x01	; 1
     744:	f1 f7       	brne	.-4      	; 0x742 <lcd_init+0xd4>
     746:	00 c0       	rjmp	.+0      	; 0x748 <lcd_init+0xda>
     748:	00 00       	nop
    _delay_ms(1);

    //Clear Display
    PORTA &= ~_BV(DB7);
     74a:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     74c:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     74e:	14 98       	cbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     750:	13 98       	cbi	0x02, 3	; 2
    datarw();
     752:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     756:	89 ef       	ldi	r24, 0xF9	; 249
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	01 97       	sbiw	r24, 0x01	; 1
     75c:	f1 f7       	brne	.-4      	; 0x75a <lcd_init+0xec>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <lcd_init+0xf2>
     760:	00 00       	nop
    _delay_ms(1);
    
    PORTA &= ~_BV(DB7);
     762:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     764:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     766:	14 98       	cbi	0x02, 4	; 2
    PORTA |= _BV(DB4);
     768:	13 9a       	sbi	0x02, 3	; 2
    datarw();
     76a:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     76e:	89 ef       	ldi	r24, 0xF9	; 249
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	01 97       	sbiw	r24, 0x01	; 1
     774:	f1 f7       	brne	.-4      	; 0x772 <lcd_init+0x104>
     776:	00 c0       	rjmp	.+0      	; 0x778 <lcd_init+0x10a>
     778:	00 00       	nop
    _delay_ms(1);
	
    //Entry Mode Set
    PORTA &= ~_BV(DB7);
     77a:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     77c:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     77e:	14 98       	cbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     780:	13 98       	cbi	0x02, 3	; 2
    datarw();
     782:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     786:	89 ef       	ldi	r24, 0xF9	; 249
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	f1 f7       	brne	.-4      	; 0x78a <lcd_init+0x11c>
     78e:	00 c0       	rjmp	.+0      	; 0x790 <lcd_init+0x122>
     790:	00 00       	nop
    _delay_ms(1);

    PORTA &= ~_BV(DB7);
     792:	16 98       	cbi	0x02, 6	; 2
    PORTA |= _BV(DB6);
     794:	15 9a       	sbi	0x02, 5	; 2
    PORTA |= _BV(DB5);
     796:	14 9a       	sbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);//diff
     798:	13 98       	cbi	0x02, 3	; 2
    datarw();
     79a:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     79e:	89 ef       	ldi	r24, 0xF9	; 249
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	01 97       	sbiw	r24, 0x01	; 1
     7a4:	f1 f7       	brne	.-4      	; 0x7a2 <lcd_init+0x134>
     7a6:	00 c0       	rjmp	.+0      	; 0x7a8 <lcd_init+0x13a>
     7a8:	00 00       	nop
    _delay_ms(1);

    //Display On. Cursor and Blink on.
    PORTA &= ~_BV(DB7);
     7aa:	16 98       	cbi	0x02, 6	; 2
    PORTA &= ~_BV(DB6);
     7ac:	15 98       	cbi	0x02, 5	; 2
    PORTA &= ~_BV(DB5);
     7ae:	14 98       	cbi	0x02, 4	; 2
    PORTA &= ~_BV(DB4);
     7b0:	13 98       	cbi	0x02, 3	; 2
    datarw();
     7b2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     7b6:	89 ef       	ldi	r24, 0xF9	; 249
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	f1 f7       	brne	.-4      	; 0x7ba <lcd_init+0x14c>
     7be:	00 c0       	rjmp	.+0      	; 0x7c0 <lcd_init+0x152>
     7c0:	00 00       	nop
    _delay_ms(1);

    PORTA |= _BV(DB7);
     7c2:	16 9a       	sbi	0x02, 6	; 2
    PORTA |= _BV(DB6);
     7c4:	15 9a       	sbi	0x02, 5	; 2
    PORTA |= _BV(DB5);
     7c6:	14 9a       	sbi	0x02, 4	; 2
    PORTA |= _BV(DB4);
     7c8:	13 9a       	sbi	0x02, 3	; 2
    datarw();
     7ca:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     7ce:	89 ef       	ldi	r24, 0xF9	; 249
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	01 97       	sbiw	r24, 0x01	; 1
     7d4:	f1 f7       	brne	.-4      	; 0x7d2 <lcd_init+0x164>
     7d6:	00 c0       	rjmp	.+0      	; 0x7d8 <lcd_init+0x16a>
     7d8:	00 00       	nop
    _delay_ms(1);

	return 0;
}
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	08 95       	ret

000007e0 <letterwrite>:

void letterwrite(int a, int b, int c, int d){
	
	if(a==1) PORTA |= _BV(DB7);
     7e0:	01 97       	sbiw	r24, 0x01	; 1
     7e2:	11 f4       	brne	.+4      	; 0x7e8 <letterwrite+0x8>
     7e4:	16 9a       	sbi	0x02, 6	; 2
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <letterwrite+0xa>
	else   PORTA &= ~_BV(DB7);
     7e8:	16 98       	cbi	0x02, 6	; 2

	if (b==1) PORTA |= _BV(DB6);
     7ea:	61 30       	cpi	r22, 0x01	; 1
     7ec:	71 05       	cpc	r23, r1
     7ee:	11 f4       	brne	.+4      	; 0x7f4 <letterwrite+0x14>
     7f0:	15 9a       	sbi	0x02, 5	; 2
     7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <letterwrite+0x16>
	else PORTA &= ~_BV(DB6);
     7f4:	15 98       	cbi	0x02, 5	; 2
    
    	if(c==1) PORTA |= _BV(DB5);
     7f6:	41 30       	cpi	r20, 0x01	; 1
     7f8:	51 05       	cpc	r21, r1
     7fa:	11 f4       	brne	.+4      	; 0x800 <letterwrite+0x20>
     7fc:	14 9a       	sbi	0x02, 4	; 2
     7fe:	01 c0       	rjmp	.+2      	; 0x802 <letterwrite+0x22>
	else PORTA &= ~_BV(DB5);
     800:	14 98       	cbi	0x02, 4	; 2
	
	if (d==1) PORTA |= _BV(DB4);
     802:	21 30       	cpi	r18, 0x01	; 1
     804:	31 05       	cpc	r19, r1
     806:	11 f4       	brne	.+4      	; 0x80c <letterwrite+0x2c>
     808:	13 9a       	sbi	0x02, 3	; 2
     80a:	01 c0       	rjmp	.+2      	; 0x80e <letterwrite+0x2e>
    	else PORTA &= ~_BV(DB4);
     80c:	13 98       	cbi	0x02, 3	; 2
   	datarw();
     80e:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
     812:	89 ef       	ldi	r24, 0xF9	; 249
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	01 97       	sbiw	r24, 0x01	; 1
     818:	f1 f7       	brne	.-4      	; 0x816 <letterwrite+0x36>
     81a:	00 c0       	rjmp	.+0      	; 0x81c <letterwrite+0x3c>
     81c:	00 00       	nop
     81e:	08 95       	ret

00000820 <instruction_read>:
    write_db74((address>>3)&1,(address>>2)&1,(address>>1)&1,(address>>0)&1);
    datarw();
}

int instruction_read() 
{
     820:	1f 93       	push	r17
     822:	cf 93       	push	r28
     824:	df 93       	push	r29
    int busy = 0, address = 0;
    uint8_t value;
    // Set LCD pins DB4-7 to be inputs with pull-ups
    DDRA &=~ (_BV(DB7)|_BV(DB6)|_BV(DB5)|_BV(DB4));    //Set pins as inputs;
     826:	81 b1       	in	r24, 0x01	; 1
     828:	87 78       	andi	r24, 0x87	; 135
     82a:	81 b9       	out	0x01, r24	; 1

    // PORTA LCD pins RS to 0 and RW to 1
    PORTA &=~ _BV(RS);
     82c:	10 98       	cbi	0x02, 0	; 2
    PORTA |= _BV(RW);
     82e:	11 9a       	sbi	0x02, 1	; 2

    // load first 4 bits of read data into DB4-7
    // set the clock high and wait
    PORTA |= _BV(E);
     830:	12 9a       	sbi	0x02, 2	; 2
     832:	81 ee       	ldi	r24, 0xE1	; 225
     834:	94 e0       	ldi	r25, 0x04	; 4
     836:	01 97       	sbiw	r24, 0x01	; 1
     838:	f1 f7       	brne	.-4      	; 0x836 <instruction_read+0x16>
     83a:	00 c0       	rjmp	.+0      	; 0x83c <instruction_read+0x1c>
     83c:	00 00       	nop
    _delay_ms(5);

    // first bit is busy flag, last 3 are most significant 3 (of 7) bits of address counter
    // read data from the gpio pins
    value = PORTA & _BV(DB7); //this or PIND
     83e:	12 b1       	in	r17, 0x02	; 2
    if (value) busy = 1;
    value = PORTA & _BV(DB6);
     840:	82 b1       	in	r24, 0x02	; 2
    address |= value<<6;
    value = PORTA & _BV(DB5);
     842:	c2 b1       	in	r28, 0x02	; 2
    address |= value<<5;
    value = PORTA & _BV(DB4);
     844:	a2 b1       	in	r26, 0x02	; 2
    address |= value<<4;
    
    // set the clock back to low
    PORTA &=~ _BV(E);
     846:	12 98       	cbi	0x02, 2	; 2
     848:	e9 ef       	ldi	r30, 0xF9	; 249
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	31 97       	sbiw	r30, 0x01	; 1
     84e:	f1 f7       	brne	.-4      	; 0x84c <instruction_read+0x2c>
     850:	00 c0       	rjmp	.+0      	; 0x852 <instruction_read+0x32>
     852:	00 00       	nop
    _delay_ms(1);

    // load last 4 bits of read data into DB4-7
    // set the clock high and wait
    PORTA |= _BV(E);
     854:	12 9a       	sbi	0x02, 2	; 2
     856:	e1 ee       	ldi	r30, 0xE1	; 225
     858:	f4 e0       	ldi	r31, 0x04	; 4
     85a:	31 97       	sbiw	r30, 0x01	; 1
     85c:	f1 f7       	brne	.-4      	; 0x85a <instruction_read+0x3a>
     85e:	00 c0       	rjmp	.+0      	; 0x860 <instruction_read+0x40>
     860:	00 00       	nop
    _delay_ms(5);

    // read data from the GPIO pins
    value = PORTA & _BV(DB7); //this or PIND
     862:	e2 b1       	in	r30, 0x02	; 2
    address |= value<<3;
    value = PORTA & _BV(DB6);
     864:	62 b1       	in	r22, 0x02	; 2
    address |= value<<2;
    value = PORTA & _BV(DB5);
     866:	42 b1       	in	r20, 0x02	; 2
    address |= value<<1;
    value = PORTA & _BV(DB4);
     868:	52 b1       	in	r21, 0x02	; 2

    // first bit is busy flag, last 3 are most significant 3 (of 7) bits of address counter
    // read data from the gpio pins
    value = PORTA & _BV(DB7); //this or PIND
    if (value) busy = 1;
    value = PORTA & _BV(DB6);
     86a:	80 72       	andi	r24, 0x20	; 32
    address |= value<<6;
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	26 e0       	ldi	r18, 0x06	; 6
     870:	88 0f       	add	r24, r24
     872:	99 1f       	adc	r25, r25
     874:	2a 95       	dec	r18
     876:	e1 f7       	brne	.-8      	; 0x870 <instruction_read+0x50>
    value = PORTA & _BV(DB5);
     878:	c0 71       	andi	r28, 0x10	; 16
    address |= value<<5;
     87a:	d0 e0       	ldi	r29, 0x00	; 0
     87c:	35 e0       	ldi	r19, 0x05	; 5
     87e:	cc 0f       	add	r28, r28
     880:	dd 1f       	adc	r29, r29
     882:	3a 95       	dec	r19
     884:	e1 f7       	brne	.-8      	; 0x87e <instruction_read+0x5e>
     886:	8c 2b       	or	r24, r28
     888:	9d 2b       	or	r25, r29
    address |= value<<3;
    value = PORTA & _BV(DB6);
    address |= value<<2;
    value = PORTA & _BV(DB5);
    address |= value<<1;
    value = PORTA & _BV(DB4);
     88a:	58 70       	andi	r21, 0x08	; 8
    value = PORTA & _BV(DB6);
    address |= value<<6;
    value = PORTA & _BV(DB5);
    address |= value<<5;
    value = PORTA & _BV(DB4);
    address |= value<<4;
     88c:	85 2b       	or	r24, r21
    if (value) busy = 1;
    value = PORTA & _BV(DB6);
    address |= value<<6;
    value = PORTA & _BV(DB5);
    address |= value<<5;
    value = PORTA & _BV(DB4);
     88e:	a8 70       	andi	r26, 0x08	; 8
    address |= value<<4;
     890:	b0 e0       	ldi	r27, 0x00	; 0
     892:	54 e0       	ldi	r21, 0x04	; 4
     894:	aa 0f       	add	r26, r26
     896:	bb 1f       	adc	r27, r27
     898:	5a 95       	dec	r21
     89a:	e1 f7       	brne	.-8      	; 0x894 <instruction_read+0x74>
    PORTA |= _BV(E);
    _delay_ms(5);

    // read data from the GPIO pins
    value = PORTA & _BV(DB7); //this or PIND
    address |= value<<3;
     89c:	8a 2b       	or	r24, r26
     89e:	9b 2b       	or	r25, r27
    // set the clock high and wait
    PORTA |= _BV(E);
    _delay_ms(5);

    // read data from the GPIO pins
    value = PORTA & _BV(DB7); //this or PIND
     8a0:	e0 74       	andi	r30, 0x40	; 64
    address |= value<<3;
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	73 e0       	ldi	r23, 0x03	; 3
     8a6:	ee 0f       	add	r30, r30
     8a8:	ff 1f       	adc	r31, r31
     8aa:	7a 95       	dec	r23
     8ac:	e1 f7       	brne	.-8      	; 0x8a6 <instruction_read+0x86>
    value = PORTA & _BV(DB6);
    address |= value<<2;
     8ae:	8e 2b       	or	r24, r30
     8b0:	9f 2b       	or	r25, r31
    _delay_ms(5);

    // read data from the GPIO pins
    value = PORTA & _BV(DB7); //this or PIND
    address |= value<<3;
    value = PORTA & _BV(DB6);
     8b2:	60 72       	andi	r22, 0x20	; 32
    address |= value<<2;
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	66 0f       	add	r22, r22
     8b8:	77 1f       	adc	r23, r23
     8ba:	66 0f       	add	r22, r22
     8bc:	77 1f       	adc	r23, r23
    value = PORTA & _BV(DB5);
    address |= value<<1;
     8be:	86 2b       	or	r24, r22
     8c0:	97 2b       	or	r25, r23
    value = PORTA & _BV(DB4);
    address |= value<<0;

    // set the clock back to low
    PORTA &=~ _BV(E);
     8c2:	12 98       	cbi	0x02, 2	; 2

    // Operation complete. Set DB4-7 pins back to outputs
    DDRA |= (_BV(DB7)|_BV(DB6)|_BV(DB5)|_BV(DB4)); 
     8c4:	51 b1       	in	r21, 0x01	; 1
     8c6:	58 67       	ori	r21, 0x78	; 120
     8c8:	51 b9       	out	0x01, r21	; 1

    // Write LCD pins RS back to 0 and RW back to 0
    PORTA &=~ _BV(RS);
     8ca:	10 98       	cbi	0x02, 0	; 2
    PORTA &=~ _BV(RW);
     8cc:	11 98       	cbi	0x02, 1	; 2
    // read data from the GPIO pins
    value = PORTA & _BV(DB7); //this or PIND
    address |= value<<3;
    value = PORTA & _BV(DB6);
    address |= value<<2;
    value = PORTA & _BV(DB5);
     8ce:	40 71       	andi	r20, 0x10	; 16
    address |= value<<1;
     8d0:	50 e0       	ldi	r21, 0x00	; 0
     8d2:	44 0f       	add	r20, r20
     8d4:	55 1f       	adc	r21, r21
    value = PORTA & _BV(DB4);
    address |= value<<0;
     8d6:	84 2b       	or	r24, r20
     8d8:	95 2b       	or	r25, r21
    _delay_ms(5);

    // first bit is busy flag, last 3 are most significant 3 (of 7) bits of address counter
    // read data from the gpio pins
    value = PORTA & _BV(DB7); //this or PIND
    if (value) busy = 1;
     8da:	16 fb       	bst	r17, 6
     8dc:	22 27       	eor	r18, r18
     8de:	20 f9       	bld	r18, 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
    // Write LCD pins RS back to 0 and RW back to 0
    PORTA &=~ _BV(RS);
    PORTA &=~ _BV(RW);

    // Return the address and whether or not the device is busy
    return (address | busy<<7);
     8e2:	36 95       	lsr	r19
     8e4:	32 2f       	mov	r19, r18
     8e6:	22 27       	eor	r18, r18
     8e8:	37 95       	ror	r19
     8ea:	27 95       	ror	r18
}
     8ec:	82 2b       	or	r24, r18
     8ee:	93 2b       	or	r25, r19
     8f0:	df 91       	pop	r29
     8f2:	cf 91       	pop	r28
     8f4:	1f 91       	pop	r17
     8f6:	08 95       	ret

000008f8 <get_current_address>:
    }
}

int get_current_address() {
    int address;
    address = instruction_read()&0x7F;
     8f8:	0e 94 10 04 	call	0x820	; 0x820 <instruction_read>
     8fc:	8f 77       	andi	r24, 0x7F	; 127
     8fe:	99 27       	eor	r25, r25
    return address+1;
}
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	08 95       	ret

00000904 <write_db74>:
    datarw();
}

void write_db74(int DB7_val, int DB6_val, int DB5_val, int DB4_val)
{
    if (DB7_val == 0) PORTA &=~ _BV(DB7);
     904:	89 2b       	or	r24, r25
     906:	11 f4       	brne	.+4      	; 0x90c <write_db74+0x8>
     908:	16 98       	cbi	0x02, 6	; 2
     90a:	01 c0       	rjmp	.+2      	; 0x90e <write_db74+0xa>
    else PORTA |= _BV(DB7);
     90c:	16 9a       	sbi	0x02, 6	; 2
    if (DB6_val == 0) PORTA &=~ _BV(DB6);
     90e:	67 2b       	or	r22, r23
     910:	11 f4       	brne	.+4      	; 0x916 <write_db74+0x12>
     912:	15 98       	cbi	0x02, 5	; 2
     914:	01 c0       	rjmp	.+2      	; 0x918 <write_db74+0x14>
    else PORTA |= _BV(DB6);
     916:	15 9a       	sbi	0x02, 5	; 2
    if (DB5_val == 0) PORTA &=~ _BV(DB5);
     918:	45 2b       	or	r20, r21
     91a:	11 f4       	brne	.+4      	; 0x920 <write_db74+0x1c>
     91c:	14 98       	cbi	0x02, 4	; 2
     91e:	01 c0       	rjmp	.+2      	; 0x922 <write_db74+0x1e>
    else PORTA |= _BV(DB5);
     920:	14 9a       	sbi	0x02, 4	; 2
    if (DB4_val == 0) PORTA &=~ _BV(DB4);
     922:	23 2b       	or	r18, r19
     924:	11 f4       	brne	.+4      	; 0x92a <write_db74+0x26>
     926:	13 98       	cbi	0x02, 3	; 2
     928:	08 95       	ret
    else PORTA |= _BV(DB4);
     92a:	13 9a       	sbi	0x02, 3	; 2
     92c:	08 95       	ret

0000092e <set_ddram_address>:
    int address;
    address = instruction_read()&0x7F;
    return address+1;
}

void set_ddram_address(int address) {
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	ec 01       	movw	r28, r24
    PORTA &=~ _BV(RS);
     934:	10 98       	cbi	0x02, 0	; 2
    PORTA &=~ _BV(RW);
     936:	11 98       	cbi	0x02, 1	; 2
    write_db74(1,(address>>6)&1,(address>>5)&1,(address>>4)&1);
     938:	28 2f       	mov	r18, r24
     93a:	22 95       	swap	r18
     93c:	21 70       	andi	r18, 0x01	; 1
     93e:	85 fb       	bst	r24, 5
     940:	44 27       	eor	r20, r20
     942:	40 f9       	bld	r20, 0
     944:	86 fb       	bst	r24, 6
     946:	66 27       	eor	r22, r22
     948:	60 f9       	bld	r22, 0
     94a:	30 e0       	ldi	r19, 0x00	; 0
     94c:	50 e0       	ldi	r21, 0x00	; 0
     94e:	70 e0       	ldi	r23, 0x00	; 0
     950:	81 e0       	ldi	r24, 0x01	; 1
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 82 04 	call	0x904	; 0x904 <write_db74>
    datarw();
     958:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
    write_db74((address>>3)&1,(address>>2)&1,(address>>1)&1,(address>>0)&1);
     95c:	9e 01       	movw	r18, r28
     95e:	21 70       	andi	r18, 0x01	; 1
     960:	33 27       	eor	r19, r19
     962:	4c 2f       	mov	r20, r28
     964:	46 95       	lsr	r20
     966:	41 70       	andi	r20, 0x01	; 1
     968:	c2 fb       	bst	r28, 2
     96a:	66 27       	eor	r22, r22
     96c:	60 f9       	bld	r22, 0
     96e:	50 e0       	ldi	r21, 0x00	; 0
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	c3 fb       	bst	r28, 3
     974:	88 27       	eor	r24, r24
     976:	80 f9       	bld	r24, 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	0e 94 82 04 	call	0x904	; 0x904 <write_db74>
    datarw();
}
     97e:	df 91       	pop	r29
     980:	cf 91       	pop	r28
    PORTA &=~ _BV(RS);
    PORTA &=~ _BV(RW);
    write_db74(1,(address>>6)&1,(address>>5)&1,(address>>4)&1);
    datarw();
    write_db74((address>>3)&1,(address>>2)&1,(address>>1)&1,(address>>0)&1);
    datarw();
     982:	0c 94 2e 03 	jmp	0x65c	; 0x65c <datarw>

00000986 <data_write>:
        data_write((uint8_t)mychar);
    
}

void data_write(uint8_t val)
{
     986:	cf 93       	push	r28
     988:	c8 2f       	mov	r28, r24

    //write data to DD RAM
    PORTA |= _BV(RS);
     98a:	10 9a       	sbi	0x02, 0	; 2
    PORTA &=~ _BV(RW);
     98c:	11 98       	cbi	0x02, 1	; 2
    write_db74((val>>7)&1,(val>>6)&1,(val>>5)&1,(val>>4)&1);
     98e:	84 fb       	bst	r24, 4
     990:	22 27       	eor	r18, r18
     992:	20 f9       	bld	r18, 0
     994:	85 fb       	bst	r24, 5
     996:	44 27       	eor	r20, r20
     998:	40 f9       	bld	r20, 0
     99a:	86 fb       	bst	r24, 6
     99c:	66 27       	eor	r22, r22
     99e:	60 f9       	bld	r22, 0
     9a0:	88 1f       	adc	r24, r24
     9a2:	88 27       	eor	r24, r24
     9a4:	88 1f       	adc	r24, r24
     9a6:	30 e0       	ldi	r19, 0x00	; 0
     9a8:	50 e0       	ldi	r21, 0x00	; 0
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 82 04 	call	0x904	; 0x904 <write_db74>
    datarw();
     9b2:	0e 94 2e 03 	call	0x65c	; 0x65c <datarw>
    write_db74((val>>3)&1,(val>>2)&1,(val>>1)&1,(val>>0)&1);
     9b6:	2c 2f       	mov	r18, r28
     9b8:	21 70       	andi	r18, 0x01	; 1
     9ba:	c1 fb       	bst	r28, 1
     9bc:	44 27       	eor	r20, r20
     9be:	40 f9       	bld	r20, 0
     9c0:	c2 fb       	bst	r28, 2
     9c2:	66 27       	eor	r22, r22
     9c4:	60 f9       	bld	r22, 0
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	50 e0       	ldi	r21, 0x00	; 0
     9ca:	70 e0       	ldi	r23, 0x00	; 0
     9cc:	c3 fb       	bst	r28, 3
     9ce:	88 27       	eor	r24, r24
     9d0:	80 f9       	bld	r24, 0
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	0e 94 82 04 	call	0x904	; 0x904 <write_db74>
    datarw();
}
     9d8:	cf 91       	pop	r28
    PORTA |= _BV(RS);
    PORTA &=~ _BV(RW);
    write_db74((val>>7)&1,(val>>6)&1,(val>>5)&1,(val>>4)&1);
    datarw();
    write_db74((val>>3)&1,(val>>2)&1,(val>>1)&1,(val>>0)&1);
    datarw();
     9da:	0c 94 2e 03 	jmp	0x65c	; 0x65c <datarw>

000009de <char_write>:
    // Return the address and whether or not the device is busy
    return (address | busy<<7);
}

void char_write(char mychar)
{
     9de:	cf 93       	push	r28
     9e0:	c8 2f       	mov	r28, r24
    chars_written++;
     9e2:	20 91 e5 02 	lds	r18, 0x02E5
     9e6:	30 91 e6 02 	lds	r19, 0x02E6
     9ea:	2f 5f       	subi	r18, 0xFF	; 255
     9ec:	3f 4f       	sbci	r19, 0xFF	; 255
     9ee:	30 93 e6 02 	sts	0x02E6, r19
     9f2:	20 93 e5 02 	sts	0x02E5, r18

    if ((chars_written==17)||(mychar=='\n'))
     9f6:	21 31       	cpi	r18, 0x11	; 17
     9f8:	31 05       	cpc	r19, r1
     9fa:	31 f0       	breq	.+12     	; 0xa08 <char_write+0x2a>
     9fc:	8a 30       	cpi	r24, 0x0A	; 10
     9fe:	21 f0       	breq	.+8      	; 0xa08 <char_write+0x2a>
            lcd_init();
        }
    }

    if (mychar!='\n')
        data_write((uint8_t)mychar);
     a00:	8c 2f       	mov	r24, r28
    
}
     a02:	cf 91       	pop	r28
            lcd_init();
        }
    }

    if (mychar!='\n')
        data_write((uint8_t)mychar);
     a04:	0c 94 c3 04 	jmp	0x986	; 0x986 <data_write>
{
    chars_written++;

    if ((chars_written==17)||(mychar=='\n'))
    {
        if (line_num==1)
     a08:	20 91 03 01 	lds	r18, 0x0103
     a0c:	30 91 04 01 	lds	r19, 0x0104
     a10:	21 30       	cpi	r18, 0x01	; 1
     a12:	31 05       	cpc	r19, r1
     a14:	79 f4       	brne	.+30     	; 0xa34 <char_write+0x56>
        {
            set_ddram_address(0x40);
     a16:	80 e4       	ldi	r24, 0x40	; 64
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	0e 94 97 04 	call	0x92e	; 0x92e <set_ddram_address>
            line_num = 2;
     a1e:	22 e0       	ldi	r18, 0x02	; 2
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	30 93 04 01 	sts	0x0104, r19
     a26:	20 93 03 01 	sts	0x0103, r18
            chars_written = 0;
     a2a:	10 92 e6 02 	sts	0x02E6, r1
     a2e:	10 92 e5 02 	sts	0x02E5, r1
     a32:	05 c0       	rjmp	.+10     	; 0xa3e <char_write+0x60>
        }
        else if (line_num==2)
     a34:	22 30       	cpi	r18, 0x02	; 2
     a36:	31 05       	cpc	r19, r1
     a38:	11 f4       	brne	.+4      	; 0xa3e <char_write+0x60>
        {
            lcd_init();
     a3a:	0e 94 37 03 	call	0x66e	; 0x66e <lcd_init>
        }
    }

    if (mychar!='\n')
     a3e:	ca 30       	cpi	r28, 0x0A	; 10
     a40:	f9 f6       	brne	.-66     	; 0xa00 <char_write+0x22>
        data_write((uint8_t)mychar);
    
}
     a42:	cf 91       	pop	r28
     a44:	08 95       	ret

00000a46 <string_write>:
     a46:	0f 93       	push	r16
     a48:	1f 93       	push	r17
     a4a:	cf 93       	push	r28
     a4c:	df 93       	push	r29
     a4e:	ec 01       	movw	r28, r24
     a50:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <get_current_address>
     a54:	8e 01       	movw	r16, r28
     a56:	fe 01       	movw	r30, r28
     a58:	01 90       	ld	r0, Z+
     a5a:	00 20       	and	r0, r0
     a5c:	e9 f7       	brne	.-6      	; 0xa58 <string_write+0x12>
     a5e:	31 97       	sbiw	r30, 0x01	; 1
     a60:	ec 1b       	sub	r30, r28
     a62:	fd 0b       	sbc	r31, r29
     a64:	c8 01       	movw	r24, r16
     a66:	8c 1b       	sub	r24, r28
     a68:	9d 0b       	sbc	r25, r29
     a6a:	8e 17       	cp	r24, r30
     a6c:	9f 07       	cpc	r25, r31
     a6e:	40 f4       	brcc	.+16     	; 0xa80 <string_write+0x3a>
     a70:	f8 01       	movw	r30, r16
     a72:	81 91       	ld	r24, Z+
     a74:	8f 01       	movw	r16, r30
     a76:	0e 94 ef 04 	call	0x9de	; 0x9de <char_write>
     a7a:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <get_current_address>
     a7e:	eb cf       	rjmp	.-42     	; 0xa56 <string_write+0x10>
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	1f 91       	pop	r17
     a86:	0f 91       	pop	r16
     a88:	08 95       	ret

00000a8a <main>:
     a8a:	cf 93       	push	r28
     a8c:	df 93       	push	r29
     a8e:	1f 92       	push	r1
     a90:	cd b7       	in	r28, 0x3d	; 61
     a92:	de b7       	in	r29, 0x3e	; 62
     a94:	8f ef       	ldi	r24, 0xFF	; 255
     a96:	84 b9       	out	0x04, r24	; 4
     a98:	f8 94       	cli
     a9a:	0e 94 a8 00 	call	0x150	; 0x150 <InitUSART>
     a9e:	78 94       	sei
     aa0:	0e 94 37 03 	call	0x66e	; 0x66e <lcd_init>
     aa4:	2f e3       	ldi	r18, 0x3F	; 63
     aa6:	4d e0       	ldi	r20, 0x0D	; 13
     aa8:	53 e0       	ldi	r21, 0x03	; 3
     aaa:	21 50       	subi	r18, 0x01	; 1
     aac:	40 40       	sbci	r20, 0x00	; 0
     aae:	50 40       	sbci	r21, 0x00	; 0
     ab0:	e1 f7       	brne	.-8      	; 0xaaa <main+0x20>
     ab2:	00 c0       	rjmp	.+0      	; 0xab4 <main+0x2a>
     ab4:	00 00       	nop
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	0e 94 57 01 	call	0x2ae	; 0x2ae <my_eeprom_read_int>
     abe:	90 93 e4 02 	sts	0x02E4, r25
     ac2:	80 93 e3 02 	sts	0x02E3, r24
     ac6:	63 e0       	ldi	r22, 0x03	; 3
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	0e 94 6d 01 	call	0x2da	; 0x2da <string_write_int>
     ace:	89 e3       	ldi	r24, 0x39	; 57
     ad0:	91 e0       	ldi	r25, 0x01	; 1
     ad2:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     ad6:	87 e1       	ldi	r24, 0x17	; 23
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	0e 94 23 05 	call	0xa46	; 0xa46 <string_write>
     ade:	8f e9       	ldi	r24, 0x9F	; 159
     ae0:	96 e8       	ldi	r25, 0x86	; 134
     ae2:	e1 e0       	ldi	r30, 0x01	; 1
     ae4:	81 50       	subi	r24, 0x01	; 1
     ae6:	90 40       	sbci	r25, 0x00	; 0
     ae8:	e0 40       	sbci	r30, 0x00	; 0
     aea:	e1 f7       	brne	.-8      	; 0xae4 <main+0x5a>
     aec:	00 c0       	rjmp	.+0      	; 0xaee <main+0x64>
     aee:	00 00       	nop
     af0:	80 91 e3 02 	lds	r24, 0x02E3
     af4:	90 91 e4 02 	lds	r25, 0x02E4
     af8:	2c e1       	ldi	r18, 0x1C	; 28
     afa:	ac 01       	movw	r20, r24
     afc:	24 9f       	mul	r18, r20
     afe:	c0 01       	movw	r24, r0
     b00:	25 9f       	mul	r18, r21
     b02:	90 0d       	add	r25, r0
     b04:	11 24       	eor	r1, r1
     b06:	0e 94 2f 0a 	call	0x145e	; 0x145e <malloc>
     b0a:	90 93 e8 02 	sts	0x02E8, r25
     b0e:	80 93 e7 02 	sts	0x02E7, r24
     b12:	8b e1       	ldi	r24, 0x1B	; 27
     b14:	c8 2e       	mov	r12, r24
     b16:	82 e0       	ldi	r24, 0x02	; 2
     b18:	d8 2e       	mov	r13, r24
     b1a:	93 e5       	ldi	r25, 0x53	; 83
     b1c:	e9 2e       	mov	r14, r25
     b1e:	91 e0       	ldi	r25, 0x01	; 1
     b20:	f9 2e       	mov	r15, r25
     b22:	00 e0       	ldi	r16, 0x00	; 0
     b24:	10 e0       	ldi	r17, 0x00	; 0
     b26:	81 2c       	mov	r8, r1
     b28:	91 2c       	mov	r9, r1
     b2a:	2c e1       	ldi	r18, 0x1C	; 28
     b2c:	b2 2e       	mov	r11, r18
     b2e:	5f ef       	ldi	r21, 0xFF	; 255
     b30:	85 1a       	sub	r8, r21
     b32:	95 0a       	sbc	r9, r21
     b34:	c4 01       	movw	r24, r8
     b36:	0e 94 57 01 	call	0x2ae	; 0x2ae <my_eeprom_read_int>
     b3a:	f6 01       	movw	r30, r12
     b3c:	81 93       	st	Z+, r24
     b3e:	91 93       	st	Z+, r25
     b40:	6f 01       	movw	r12, r30
     b42:	b0 9e       	mul	r11, r16
     b44:	90 01       	movw	r18, r0
     b46:	b1 9e       	mul	r11, r17
     b48:	30 0d       	add	r19, r0
     b4a:	11 24       	eor	r1, r1
     b4c:	2b 59       	subi	r18, 0x9B	; 155
     b4e:	3f 4f       	sbci	r19, 0xFF	; 255
     b50:	f7 01       	movw	r30, r14
     b52:	21 93       	st	Z+, r18
     b54:	31 93       	st	Z+, r19
     b56:	7f 01       	movw	r14, r30
     b58:	08 0f       	add	r16, r24
     b5a:	19 1f       	adc	r17, r25
     b5c:	f4 e6       	ldi	r31, 0x64	; 100
     b5e:	8f 16       	cp	r8, r31
     b60:	91 04       	cpc	r9, r1
     b62:	29 f7       	brne	.-54     	; 0xb2e <main+0xa4>
     b64:	c1 2c       	mov	r12, r1
     b66:	d1 2c       	mov	r13, r1
     b68:	e1 2c       	mov	r14, r1
     b6a:	f1 2c       	mov	r15, r1
     b6c:	80 91 e3 02 	lds	r24, 0x02E3
     b70:	90 91 e4 02 	lds	r25, 0x02E4
     b74:	e8 16       	cp	r14, r24
     b76:	f9 06       	cpc	r15, r25
     b78:	0c f0       	brlt	.+2      	; 0xb7c <main+0xf2>
     b7a:	4c c0       	rjmp	.+152    	; 0xc14 <main+0x18a>
     b7c:	b6 01       	movw	r22, r12
     b7e:	6b 59       	subi	r22, 0x9B	; 155
     b80:	7f 4f       	sbci	r23, 0xFF	; 255
     b82:	80 91 e7 02 	lds	r24, 0x02E7
     b86:	90 91 e8 02 	lds	r25, 0x02E8
     b8a:	48 e0       	ldi	r20, 0x08	; 8
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	8c 0d       	add	r24, r12
     b90:	9d 1d       	adc	r25, r13
     b92:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__eerd_block_m1284p>
     b96:	00 91 e7 02 	lds	r16, 0x02E7
     b9a:	10 91 e8 02 	lds	r17, 0x02E8
     b9e:	0c 0d       	add	r16, r12
     ba0:	1d 1d       	adc	r17, r13
     ba2:	c6 01       	movw	r24, r12
     ba4:	83 59       	subi	r24, 0x93	; 147
     ba6:	9f 4f       	sbci	r25, 0xFF	; 255
     ba8:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>
     bac:	f8 01       	movw	r30, r16
     bae:	60 87       	std	Z+8, r22	; 0x08
     bb0:	71 87       	std	Z+9, r23	; 0x09
     bb2:	82 87       	std	Z+10, r24	; 0x0a
     bb4:	93 87       	std	Z+11, r25	; 0x0b
     bb6:	c6 01       	movw	r24, r12
     bb8:	8f 58       	subi	r24, 0x8F	; 143
     bba:	9f 4f       	sbci	r25, 0xFF	; 255
     bbc:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>
     bc0:	f8 01       	movw	r30, r16
     bc2:	64 87       	std	Z+12, r22	; 0x0c
     bc4:	75 87       	std	Z+13, r23	; 0x0d
     bc6:	86 87       	std	Z+14, r24	; 0x0e
     bc8:	97 87       	std	Z+15, r25	; 0x0f
     bca:	c6 01       	movw	r24, r12
     bcc:	8b 58       	subi	r24, 0x8B	; 139
     bce:	9f 4f       	sbci	r25, 0xFF	; 255
     bd0:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>
     bd4:	f8 01       	movw	r30, r16
     bd6:	60 8b       	std	Z+16, r22	; 0x10
     bd8:	71 8b       	std	Z+17, r23	; 0x11
     bda:	82 8b       	std	Z+18, r24	; 0x12
     bdc:	93 8b       	std	Z+19, r25	; 0x13
     bde:	c6 01       	movw	r24, r12
     be0:	87 58       	subi	r24, 0x87	; 135
     be2:	9f 4f       	sbci	r25, 0xFF	; 255
     be4:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>
     be8:	f8 01       	movw	r30, r16
     bea:	64 8b       	std	Z+20, r22	; 0x14
     bec:	75 8b       	std	Z+21, r23	; 0x15
     bee:	86 8b       	std	Z+22, r24	; 0x16
     bf0:	97 8b       	std	Z+23, r25	; 0x17
     bf2:	c6 01       	movw	r24, r12
     bf4:	83 58       	subi	r24, 0x83	; 131
     bf6:	9f 4f       	sbci	r25, 0xFF	; 255
     bf8:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__eerd_dword_m1284p>
     bfc:	f8 01       	movw	r30, r16
     bfe:	60 8f       	std	Z+24, r22	; 0x18
     c00:	71 8f       	std	Z+25, r23	; 0x19
     c02:	82 8f       	std	Z+26, r24	; 0x1a
     c04:	93 8f       	std	Z+27, r25	; 0x1b
     c06:	ff ef       	ldi	r31, 0xFF	; 255
     c08:	ef 1a       	sub	r14, r31
     c0a:	ff 0a       	sbc	r15, r31
     c0c:	2c e1       	ldi	r18, 0x1C	; 28
     c0e:	c2 0e       	add	r12, r18
     c10:	d1 1c       	adc	r13, r1
     c12:	ac cf       	rjmp	.-168    	; 0xb6c <main+0xe2>
     c14:	00 e0       	ldi	r16, 0x00	; 0
     c16:	10 e0       	ldi	r17, 0x00	; 0
     c18:	80 91 e3 02 	lds	r24, 0x02E3
     c1c:	90 91 e4 02 	lds	r25, 0x02E4
     c20:	08 17       	cp	r16, r24
     c22:	19 07       	cpc	r17, r25
     c24:	ec f4       	brge	.+58     	; 0xc60 <main+0x1d6>
     c26:	0e 94 37 03 	call	0x66e	; 0x66e <lcd_init>
     c2a:	c8 01       	movw	r24, r16
     c2c:	0e 94 61 02 	call	0x4c2	; 0x4c2 <print_station>
     c30:	4f e7       	ldi	r20, 0x7F	; 127
     c32:	5a e1       	ldi	r21, 0x1A	; 26
     c34:	86 e0       	ldi	r24, 0x06	; 6
     c36:	41 50       	subi	r20, 0x01	; 1
     c38:	50 40       	sbci	r21, 0x00	; 0
     c3a:	80 40       	sbci	r24, 0x00	; 0
     c3c:	e1 f7       	brne	.-8      	; 0xc36 <main+0x1ac>
     c3e:	00 c0       	rjmp	.+0      	; 0xc40 <main+0x1b6>
     c40:	00 00       	nop
     c42:	0f 5f       	subi	r16, 0xFF	; 255
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	e8 cf       	rjmp	.-48     	; 0xc18 <main+0x18e>
     c48:	90 91 52 01 	lds	r25, 0x0152
     c4c:	80 91 51 01 	lds	r24, 0x0151
     c50:	98 13       	cpse	r25, r24
     c52:	0e c0       	rjmp	.+28     	; 0xc70 <main+0x1e6>
     c54:	80 91 4a 01 	lds	r24, 0x014A
     c58:	90 91 4b 01 	lds	r25, 0x014B
     c5c:	89 2b       	or	r24, r25
     c5e:	49 f5       	brne	.+82     	; 0xcb2 <main+0x228>
     c60:	00 91 4c 01 	lds	r16, 0x014C
     c64:	10 91 4d 01 	lds	r17, 0x014D
     c68:	01 30       	cpi	r16, 0x01	; 1
     c6a:	11 05       	cpc	r17, r1
     c6c:	99 f7       	brne	.-26     	; 0xc54 <main+0x1ca>
     c6e:	ec cf       	rjmp	.-40     	; 0xc48 <main+0x1be>
     c70:	0e 94 ca 00 	call	0x194	; 0x194 <getChar>
     c74:	89 83       	std	Y+1, r24	; 0x01
     c76:	0e 94 42 01 	call	0x284	; 0x284 <serialEnd>
     c7a:	69 81       	ldd	r22, Y+1	; 0x01
     c7c:	89 2b       	or	r24, r25
     c7e:	29 f0       	breq	.+10     	; 0xc8a <main+0x200>
     c80:	10 92 4d 01 	sts	0x014D, r1
     c84:	10 92 4c 01 	sts	0x014C, r1
     c88:	e5 cf       	rjmp	.-54     	; 0xc54 <main+0x1ca>
     c8a:	80 91 48 01 	lds	r24, 0x0148
     c8e:	90 91 49 01 	lds	r25, 0x0149
     c92:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__eewr_byte_m1284p>
     c96:	80 91 48 01 	lds	r24, 0x0148
     c9a:	90 91 49 01 	lds	r25, 0x0149
     c9e:	01 96       	adiw	r24, 0x01	; 1
     ca0:	90 93 49 01 	sts	0x0149, r25
     ca4:	80 93 48 01 	sts	0x0148, r24
     ca8:	10 93 4b 01 	sts	0x014B, r17
     cac:	00 93 4a 01 	sts	0x014A, r16
     cb0:	d1 cf       	rjmp	.-94     	; 0xc54 <main+0x1ca>
     cb2:	00 91 46 01 	lds	r16, 0x0146
     cb6:	10 91 47 01 	lds	r17, 0x0147
     cba:	c8 01       	movw	r24, r16
     cbc:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <__eerd_byte_m1284p>
     cc0:	0f 5f       	subi	r16, 0xFF	; 255
     cc2:	1f 4f       	sbci	r17, 0xFF	; 255
     cc4:	10 93 47 01 	sts	0x0147, r17
     cc8:	00 93 46 01 	sts	0x0146, r16
     ccc:	08 3e       	cpi	r16, 0xE8	; 232
     cce:	11 05       	cpc	r17, r1
     cd0:	14 f4       	brge	.+4      	; 0xcd6 <main+0x24c>
     cd2:	0e 94 ef 04 	call	0x9de	; 0x9de <char_write>
     cd6:	10 92 4b 01 	sts	0x014B, r1
     cda:	10 92 4a 01 	sts	0x014A, r1
     cde:	c0 cf       	rjmp	.-128    	; 0xc60 <main+0x1d6>

00000ce0 <__subsf3>:
     ce0:	50 58       	subi	r21, 0x80	; 128

00000ce2 <__addsf3>:
     ce2:	bb 27       	eor	r27, r27
     ce4:	aa 27       	eor	r26, r26
     ce6:	0e d0       	rcall	.+28     	; 0xd04 <__addsf3x>
     ce8:	21 c1       	rjmp	.+578    	; 0xf2c <__fp_round>
     cea:	12 d1       	rcall	.+548    	; 0xf10 <__fp_pscA>
     cec:	30 f0       	brcs	.+12     	; 0xcfa <__addsf3+0x18>
     cee:	17 d1       	rcall	.+558    	; 0xf1e <__fp_pscB>
     cf0:	20 f0       	brcs	.+8      	; 0xcfa <__addsf3+0x18>
     cf2:	31 f4       	brne	.+12     	; 0xd00 <__addsf3+0x1e>
     cf4:	9f 3f       	cpi	r25, 0xFF	; 255
     cf6:	11 f4       	brne	.+4      	; 0xcfc <__addsf3+0x1a>
     cf8:	1e f4       	brtc	.+6      	; 0xd00 <__addsf3+0x1e>
     cfa:	07 c1       	rjmp	.+526    	; 0xf0a <__fp_nan>
     cfc:	0e f4       	brtc	.+2      	; 0xd00 <__addsf3+0x1e>
     cfe:	e0 95       	com	r30
     d00:	e7 fb       	bst	r30, 7
     d02:	d4 c0       	rjmp	.+424    	; 0xeac <__fp_inf>

00000d04 <__addsf3x>:
     d04:	e9 2f       	mov	r30, r25
     d06:	23 d1       	rcall	.+582    	; 0xf4e <__fp_split3>
     d08:	80 f3       	brcs	.-32     	; 0xcea <__addsf3+0x8>
     d0a:	ba 17       	cp	r27, r26
     d0c:	62 07       	cpc	r22, r18
     d0e:	73 07       	cpc	r23, r19
     d10:	84 07       	cpc	r24, r20
     d12:	95 07       	cpc	r25, r21
     d14:	18 f0       	brcs	.+6      	; 0xd1c <__addsf3x+0x18>
     d16:	71 f4       	brne	.+28     	; 0xd34 <__addsf3x+0x30>
     d18:	9e f5       	brtc	.+102    	; 0xd80 <__addsf3x+0x7c>
     d1a:	52 c1       	rjmp	.+676    	; 0xfc0 <__fp_zero>
     d1c:	0e f4       	brtc	.+2      	; 0xd20 <__addsf3x+0x1c>
     d1e:	e0 95       	com	r30
     d20:	0b 2e       	mov	r0, r27
     d22:	ba 2f       	mov	r27, r26
     d24:	a0 2d       	mov	r26, r0
     d26:	0b 01       	movw	r0, r22
     d28:	b9 01       	movw	r22, r18
     d2a:	90 01       	movw	r18, r0
     d2c:	0c 01       	movw	r0, r24
     d2e:	ca 01       	movw	r24, r20
     d30:	a0 01       	movw	r20, r0
     d32:	11 24       	eor	r1, r1
     d34:	ff 27       	eor	r31, r31
     d36:	59 1b       	sub	r21, r25
     d38:	99 f0       	breq	.+38     	; 0xd60 <__addsf3x+0x5c>
     d3a:	59 3f       	cpi	r21, 0xF9	; 249
     d3c:	50 f4       	brcc	.+20     	; 0xd52 <__addsf3x+0x4e>
     d3e:	50 3e       	cpi	r21, 0xE0	; 224
     d40:	68 f1       	brcs	.+90     	; 0xd9c <__addsf3x+0x98>
     d42:	1a 16       	cp	r1, r26
     d44:	f0 40       	sbci	r31, 0x00	; 0
     d46:	a2 2f       	mov	r26, r18
     d48:	23 2f       	mov	r18, r19
     d4a:	34 2f       	mov	r19, r20
     d4c:	44 27       	eor	r20, r20
     d4e:	58 5f       	subi	r21, 0xF8	; 248
     d50:	f3 cf       	rjmp	.-26     	; 0xd38 <__addsf3x+0x34>
     d52:	46 95       	lsr	r20
     d54:	37 95       	ror	r19
     d56:	27 95       	ror	r18
     d58:	a7 95       	ror	r26
     d5a:	f0 40       	sbci	r31, 0x00	; 0
     d5c:	53 95       	inc	r21
     d5e:	c9 f7       	brne	.-14     	; 0xd52 <__addsf3x+0x4e>
     d60:	7e f4       	brtc	.+30     	; 0xd80 <__addsf3x+0x7c>
     d62:	1f 16       	cp	r1, r31
     d64:	ba 0b       	sbc	r27, r26
     d66:	62 0b       	sbc	r22, r18
     d68:	73 0b       	sbc	r23, r19
     d6a:	84 0b       	sbc	r24, r20
     d6c:	ba f0       	brmi	.+46     	; 0xd9c <__addsf3x+0x98>
     d6e:	91 50       	subi	r25, 0x01	; 1
     d70:	a1 f0       	breq	.+40     	; 0xd9a <__addsf3x+0x96>
     d72:	ff 0f       	add	r31, r31
     d74:	bb 1f       	adc	r27, r27
     d76:	66 1f       	adc	r22, r22
     d78:	77 1f       	adc	r23, r23
     d7a:	88 1f       	adc	r24, r24
     d7c:	c2 f7       	brpl	.-16     	; 0xd6e <__addsf3x+0x6a>
     d7e:	0e c0       	rjmp	.+28     	; 0xd9c <__addsf3x+0x98>
     d80:	ba 0f       	add	r27, r26
     d82:	62 1f       	adc	r22, r18
     d84:	73 1f       	adc	r23, r19
     d86:	84 1f       	adc	r24, r20
     d88:	48 f4       	brcc	.+18     	; 0xd9c <__addsf3x+0x98>
     d8a:	87 95       	ror	r24
     d8c:	77 95       	ror	r23
     d8e:	67 95       	ror	r22
     d90:	b7 95       	ror	r27
     d92:	f7 95       	ror	r31
     d94:	9e 3f       	cpi	r25, 0xFE	; 254
     d96:	08 f0       	brcs	.+2      	; 0xd9a <__addsf3x+0x96>
     d98:	b3 cf       	rjmp	.-154    	; 0xd00 <__addsf3+0x1e>
     d9a:	93 95       	inc	r25
     d9c:	88 0f       	add	r24, r24
     d9e:	08 f0       	brcs	.+2      	; 0xda2 <__addsf3x+0x9e>
     da0:	99 27       	eor	r25, r25
     da2:	ee 0f       	add	r30, r30
     da4:	97 95       	ror	r25
     da6:	87 95       	ror	r24
     da8:	08 95       	ret

00000daa <__fixsfsi>:
     daa:	04 d0       	rcall	.+8      	; 0xdb4 <__fixunssfsi>
     dac:	68 94       	set
     dae:	b1 11       	cpse	r27, r1
     db0:	08 c1       	rjmp	.+528    	; 0xfc2 <__fp_szero>
     db2:	08 95       	ret

00000db4 <__fixunssfsi>:
     db4:	d4 d0       	rcall	.+424    	; 0xf5e <__fp_splitA>
     db6:	88 f0       	brcs	.+34     	; 0xdda <__fixunssfsi+0x26>
     db8:	9f 57       	subi	r25, 0x7F	; 127
     dba:	90 f0       	brcs	.+36     	; 0xde0 <__fixunssfsi+0x2c>
     dbc:	b9 2f       	mov	r27, r25
     dbe:	99 27       	eor	r25, r25
     dc0:	b7 51       	subi	r27, 0x17	; 23
     dc2:	a0 f0       	brcs	.+40     	; 0xdec <__fixunssfsi+0x38>
     dc4:	d1 f0       	breq	.+52     	; 0xdfa <__fixunssfsi+0x46>
     dc6:	66 0f       	add	r22, r22
     dc8:	77 1f       	adc	r23, r23
     dca:	88 1f       	adc	r24, r24
     dcc:	99 1f       	adc	r25, r25
     dce:	1a f0       	brmi	.+6      	; 0xdd6 <__fixunssfsi+0x22>
     dd0:	ba 95       	dec	r27
     dd2:	c9 f7       	brne	.-14     	; 0xdc6 <__fixunssfsi+0x12>
     dd4:	12 c0       	rjmp	.+36     	; 0xdfa <__fixunssfsi+0x46>
     dd6:	b1 30       	cpi	r27, 0x01	; 1
     dd8:	81 f0       	breq	.+32     	; 0xdfa <__fixunssfsi+0x46>
     dda:	f2 d0       	rcall	.+484    	; 0xfc0 <__fp_zero>
     ddc:	b1 e0       	ldi	r27, 0x01	; 1
     dde:	08 95       	ret
     de0:	ef c0       	rjmp	.+478    	; 0xfc0 <__fp_zero>
     de2:	67 2f       	mov	r22, r23
     de4:	78 2f       	mov	r23, r24
     de6:	88 27       	eor	r24, r24
     de8:	b8 5f       	subi	r27, 0xF8	; 248
     dea:	39 f0       	breq	.+14     	; 0xdfa <__fixunssfsi+0x46>
     dec:	b9 3f       	cpi	r27, 0xF9	; 249
     dee:	cc f3       	brlt	.-14     	; 0xde2 <__fixunssfsi+0x2e>
     df0:	86 95       	lsr	r24
     df2:	77 95       	ror	r23
     df4:	67 95       	ror	r22
     df6:	b3 95       	inc	r27
     df8:	d9 f7       	brne	.-10     	; 0xdf0 <__fixunssfsi+0x3c>
     dfa:	3e f4       	brtc	.+14     	; 0xe0a <__fixunssfsi+0x56>
     dfc:	90 95       	com	r25
     dfe:	80 95       	com	r24
     e00:	70 95       	com	r23
     e02:	61 95       	neg	r22
     e04:	7f 4f       	sbci	r23, 0xFF	; 255
     e06:	8f 4f       	sbci	r24, 0xFF	; 255
     e08:	9f 4f       	sbci	r25, 0xFF	; 255
     e0a:	08 95       	ret

00000e0c <__floatunsisf>:
     e0c:	e8 94       	clt
     e0e:	09 c0       	rjmp	.+18     	; 0xe22 <__floatsisf+0x12>

00000e10 <__floatsisf>:
     e10:	97 fb       	bst	r25, 7
     e12:	3e f4       	brtc	.+14     	; 0xe22 <__floatsisf+0x12>
     e14:	90 95       	com	r25
     e16:	80 95       	com	r24
     e18:	70 95       	com	r23
     e1a:	61 95       	neg	r22
     e1c:	7f 4f       	sbci	r23, 0xFF	; 255
     e1e:	8f 4f       	sbci	r24, 0xFF	; 255
     e20:	9f 4f       	sbci	r25, 0xFF	; 255
     e22:	99 23       	and	r25, r25
     e24:	a9 f0       	breq	.+42     	; 0xe50 <__floatsisf+0x40>
     e26:	f9 2f       	mov	r31, r25
     e28:	96 e9       	ldi	r25, 0x96	; 150
     e2a:	bb 27       	eor	r27, r27
     e2c:	93 95       	inc	r25
     e2e:	f6 95       	lsr	r31
     e30:	87 95       	ror	r24
     e32:	77 95       	ror	r23
     e34:	67 95       	ror	r22
     e36:	b7 95       	ror	r27
     e38:	f1 11       	cpse	r31, r1
     e3a:	f8 cf       	rjmp	.-16     	; 0xe2c <__floatsisf+0x1c>
     e3c:	fa f4       	brpl	.+62     	; 0xe7c <__floatsisf+0x6c>
     e3e:	bb 0f       	add	r27, r27
     e40:	11 f4       	brne	.+4      	; 0xe46 <__floatsisf+0x36>
     e42:	60 ff       	sbrs	r22, 0
     e44:	1b c0       	rjmp	.+54     	; 0xe7c <__floatsisf+0x6c>
     e46:	6f 5f       	subi	r22, 0xFF	; 255
     e48:	7f 4f       	sbci	r23, 0xFF	; 255
     e4a:	8f 4f       	sbci	r24, 0xFF	; 255
     e4c:	9f 4f       	sbci	r25, 0xFF	; 255
     e4e:	16 c0       	rjmp	.+44     	; 0xe7c <__floatsisf+0x6c>
     e50:	88 23       	and	r24, r24
     e52:	11 f0       	breq	.+4      	; 0xe58 <__floatsisf+0x48>
     e54:	96 e9       	ldi	r25, 0x96	; 150
     e56:	11 c0       	rjmp	.+34     	; 0xe7a <__floatsisf+0x6a>
     e58:	77 23       	and	r23, r23
     e5a:	21 f0       	breq	.+8      	; 0xe64 <__floatsisf+0x54>
     e5c:	9e e8       	ldi	r25, 0x8E	; 142
     e5e:	87 2f       	mov	r24, r23
     e60:	76 2f       	mov	r23, r22
     e62:	05 c0       	rjmp	.+10     	; 0xe6e <__floatsisf+0x5e>
     e64:	66 23       	and	r22, r22
     e66:	71 f0       	breq	.+28     	; 0xe84 <__floatsisf+0x74>
     e68:	96 e8       	ldi	r25, 0x86	; 134
     e6a:	86 2f       	mov	r24, r22
     e6c:	70 e0       	ldi	r23, 0x00	; 0
     e6e:	60 e0       	ldi	r22, 0x00	; 0
     e70:	2a f0       	brmi	.+10     	; 0xe7c <__floatsisf+0x6c>
     e72:	9a 95       	dec	r25
     e74:	66 0f       	add	r22, r22
     e76:	77 1f       	adc	r23, r23
     e78:	88 1f       	adc	r24, r24
     e7a:	da f7       	brpl	.-10     	; 0xe72 <__floatsisf+0x62>
     e7c:	88 0f       	add	r24, r24
     e7e:	96 95       	lsr	r25
     e80:	87 95       	ror	r24
     e82:	97 f9       	bld	r25, 7
     e84:	08 95       	ret

00000e86 <floor>:
     e86:	85 d0       	rcall	.+266    	; 0xf92 <__fp_trunc>
     e88:	80 f0       	brcs	.+32     	; 0xeaa <floor+0x24>
     e8a:	9f 37       	cpi	r25, 0x7F	; 127
     e8c:	40 f4       	brcc	.+16     	; 0xe9e <floor+0x18>
     e8e:	91 11       	cpse	r25, r1
     e90:	0e f0       	brts	.+2      	; 0xe94 <floor+0xe>
     e92:	97 c0       	rjmp	.+302    	; 0xfc2 <__fp_szero>
     e94:	60 e0       	ldi	r22, 0x00	; 0
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	80 e8       	ldi	r24, 0x80	; 128
     e9a:	9f eb       	ldi	r25, 0xBF	; 191
     e9c:	08 95       	ret
     e9e:	26 f4       	brtc	.+8      	; 0xea8 <floor+0x22>
     ea0:	1b 16       	cp	r1, r27
     ea2:	61 1d       	adc	r22, r1
     ea4:	71 1d       	adc	r23, r1
     ea6:	81 1d       	adc	r24, r1
     ea8:	07 c0       	rjmp	.+14     	; 0xeb8 <__fp_mintl>
     eaa:	21 c0       	rjmp	.+66     	; 0xeee <__fp_mpack>

00000eac <__fp_inf>:
     eac:	97 f9       	bld	r25, 7
     eae:	9f 67       	ori	r25, 0x7F	; 127
     eb0:	80 e8       	ldi	r24, 0x80	; 128
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	08 95       	ret

00000eb8 <__fp_mintl>:
     eb8:	88 23       	and	r24, r24
     eba:	71 f4       	brne	.+28     	; 0xed8 <__fp_mintl+0x20>
     ebc:	77 23       	and	r23, r23
     ebe:	21 f0       	breq	.+8      	; 0xec8 <__fp_mintl+0x10>
     ec0:	98 50       	subi	r25, 0x08	; 8
     ec2:	87 2b       	or	r24, r23
     ec4:	76 2f       	mov	r23, r22
     ec6:	07 c0       	rjmp	.+14     	; 0xed6 <__fp_mintl+0x1e>
     ec8:	66 23       	and	r22, r22
     eca:	11 f4       	brne	.+4      	; 0xed0 <__fp_mintl+0x18>
     ecc:	99 27       	eor	r25, r25
     ece:	0d c0       	rjmp	.+26     	; 0xeea <__fp_mintl+0x32>
     ed0:	90 51       	subi	r25, 0x10	; 16
     ed2:	86 2b       	or	r24, r22
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	2a f0       	brmi	.+10     	; 0xee4 <__fp_mintl+0x2c>
     eda:	9a 95       	dec	r25
     edc:	66 0f       	add	r22, r22
     ede:	77 1f       	adc	r23, r23
     ee0:	88 1f       	adc	r24, r24
     ee2:	da f7       	brpl	.-10     	; 0xeda <__fp_mintl+0x22>
     ee4:	88 0f       	add	r24, r24
     ee6:	96 95       	lsr	r25
     ee8:	87 95       	ror	r24
     eea:	97 f9       	bld	r25, 7
     eec:	08 95       	ret

00000eee <__fp_mpack>:
     eee:	9f 3f       	cpi	r25, 0xFF	; 255
     ef0:	31 f0       	breq	.+12     	; 0xefe <__fp_mpack_finite+0xc>

00000ef2 <__fp_mpack_finite>:
     ef2:	91 50       	subi	r25, 0x01	; 1
     ef4:	20 f4       	brcc	.+8      	; 0xefe <__fp_mpack_finite+0xc>
     ef6:	87 95       	ror	r24
     ef8:	77 95       	ror	r23
     efa:	67 95       	ror	r22
     efc:	b7 95       	ror	r27
     efe:	88 0f       	add	r24, r24
     f00:	91 1d       	adc	r25, r1
     f02:	96 95       	lsr	r25
     f04:	87 95       	ror	r24
     f06:	97 f9       	bld	r25, 7
     f08:	08 95       	ret

00000f0a <__fp_nan>:
     f0a:	9f ef       	ldi	r25, 0xFF	; 255
     f0c:	80 ec       	ldi	r24, 0xC0	; 192
     f0e:	08 95       	ret

00000f10 <__fp_pscA>:
     f10:	00 24       	eor	r0, r0
     f12:	0a 94       	dec	r0
     f14:	16 16       	cp	r1, r22
     f16:	17 06       	cpc	r1, r23
     f18:	18 06       	cpc	r1, r24
     f1a:	09 06       	cpc	r0, r25
     f1c:	08 95       	ret

00000f1e <__fp_pscB>:
     f1e:	00 24       	eor	r0, r0
     f20:	0a 94       	dec	r0
     f22:	12 16       	cp	r1, r18
     f24:	13 06       	cpc	r1, r19
     f26:	14 06       	cpc	r1, r20
     f28:	05 06       	cpc	r0, r21
     f2a:	08 95       	ret

00000f2c <__fp_round>:
     f2c:	09 2e       	mov	r0, r25
     f2e:	03 94       	inc	r0
     f30:	00 0c       	add	r0, r0
     f32:	11 f4       	brne	.+4      	; 0xf38 <__fp_round+0xc>
     f34:	88 23       	and	r24, r24
     f36:	52 f0       	brmi	.+20     	; 0xf4c <__fp_round+0x20>
     f38:	bb 0f       	add	r27, r27
     f3a:	40 f4       	brcc	.+16     	; 0xf4c <__fp_round+0x20>
     f3c:	bf 2b       	or	r27, r31
     f3e:	11 f4       	brne	.+4      	; 0xf44 <__fp_round+0x18>
     f40:	60 ff       	sbrs	r22, 0
     f42:	04 c0       	rjmp	.+8      	; 0xf4c <__fp_round+0x20>
     f44:	6f 5f       	subi	r22, 0xFF	; 255
     f46:	7f 4f       	sbci	r23, 0xFF	; 255
     f48:	8f 4f       	sbci	r24, 0xFF	; 255
     f4a:	9f 4f       	sbci	r25, 0xFF	; 255
     f4c:	08 95       	ret

00000f4e <__fp_split3>:
     f4e:	57 fd       	sbrc	r21, 7
     f50:	90 58       	subi	r25, 0x80	; 128
     f52:	44 0f       	add	r20, r20
     f54:	55 1f       	adc	r21, r21
     f56:	59 f0       	breq	.+22     	; 0xf6e <__fp_splitA+0x10>
     f58:	5f 3f       	cpi	r21, 0xFF	; 255
     f5a:	71 f0       	breq	.+28     	; 0xf78 <__fp_splitA+0x1a>
     f5c:	47 95       	ror	r20

00000f5e <__fp_splitA>:
     f5e:	88 0f       	add	r24, r24
     f60:	97 fb       	bst	r25, 7
     f62:	99 1f       	adc	r25, r25
     f64:	61 f0       	breq	.+24     	; 0xf7e <__fp_splitA+0x20>
     f66:	9f 3f       	cpi	r25, 0xFF	; 255
     f68:	79 f0       	breq	.+30     	; 0xf88 <__fp_splitA+0x2a>
     f6a:	87 95       	ror	r24
     f6c:	08 95       	ret
     f6e:	12 16       	cp	r1, r18
     f70:	13 06       	cpc	r1, r19
     f72:	14 06       	cpc	r1, r20
     f74:	55 1f       	adc	r21, r21
     f76:	f2 cf       	rjmp	.-28     	; 0xf5c <__fp_split3+0xe>
     f78:	46 95       	lsr	r20
     f7a:	f1 df       	rcall	.-30     	; 0xf5e <__fp_splitA>
     f7c:	08 c0       	rjmp	.+16     	; 0xf8e <__fp_splitA+0x30>
     f7e:	16 16       	cp	r1, r22
     f80:	17 06       	cpc	r1, r23
     f82:	18 06       	cpc	r1, r24
     f84:	99 1f       	adc	r25, r25
     f86:	f1 cf       	rjmp	.-30     	; 0xf6a <__fp_splitA+0xc>
     f88:	86 95       	lsr	r24
     f8a:	71 05       	cpc	r23, r1
     f8c:	61 05       	cpc	r22, r1
     f8e:	08 94       	sec
     f90:	08 95       	ret

00000f92 <__fp_trunc>:
     f92:	e5 df       	rcall	.-54     	; 0xf5e <__fp_splitA>
     f94:	a0 f0       	brcs	.+40     	; 0xfbe <__fp_trunc+0x2c>
     f96:	be e7       	ldi	r27, 0x7E	; 126
     f98:	b9 17       	cp	r27, r25
     f9a:	88 f4       	brcc	.+34     	; 0xfbe <__fp_trunc+0x2c>
     f9c:	bb 27       	eor	r27, r27
     f9e:	9f 38       	cpi	r25, 0x8F	; 143
     fa0:	60 f4       	brcc	.+24     	; 0xfba <__fp_trunc+0x28>
     fa2:	16 16       	cp	r1, r22
     fa4:	b1 1d       	adc	r27, r1
     fa6:	67 2f       	mov	r22, r23
     fa8:	78 2f       	mov	r23, r24
     faa:	88 27       	eor	r24, r24
     fac:	98 5f       	subi	r25, 0xF8	; 248
     fae:	f7 cf       	rjmp	.-18     	; 0xf9e <__fp_trunc+0xc>
     fb0:	86 95       	lsr	r24
     fb2:	77 95       	ror	r23
     fb4:	67 95       	ror	r22
     fb6:	b1 1d       	adc	r27, r1
     fb8:	93 95       	inc	r25
     fba:	96 39       	cpi	r25, 0x96	; 150
     fbc:	c8 f3       	brcs	.-14     	; 0xfb0 <__fp_trunc+0x1e>
     fbe:	08 95       	ret

00000fc0 <__fp_zero>:
     fc0:	e8 94       	clt

00000fc2 <__fp_szero>:
     fc2:	bb 27       	eor	r27, r27
     fc4:	66 27       	eor	r22, r22
     fc6:	77 27       	eor	r23, r23
     fc8:	cb 01       	movw	r24, r22
     fca:	97 f9       	bld	r25, 7
     fcc:	08 95       	ret

00000fce <log10>:
     fce:	0a d0       	rcall	.+20     	; 0xfe4 <log>
     fd0:	29 ed       	ldi	r18, 0xD9	; 217
     fd2:	3b e5       	ldi	r19, 0x5B	; 91
     fd4:	4e ed       	ldi	r20, 0xDE	; 222
     fd6:	5e e3       	ldi	r21, 0x3E	; 62
     fd8:	78 c0       	rjmp	.+240    	; 0x10ca <__mulsf3>
     fda:	0e f0       	brts	.+2      	; 0xfde <log10+0x10>
     fdc:	88 cf       	rjmp	.-240    	; 0xeee <__fp_mpack>
     fde:	95 cf       	rjmp	.-214    	; 0xf0a <__fp_nan>
     fe0:	68 94       	set
     fe2:	64 cf       	rjmp	.-312    	; 0xeac <__fp_inf>

00000fe4 <log>:
     fe4:	bc df       	rcall	.-136    	; 0xf5e <__fp_splitA>
     fe6:	c8 f3       	brcs	.-14     	; 0xfda <log10+0xc>
     fe8:	99 23       	and	r25, r25
     fea:	d1 f3       	breq	.-12     	; 0xfe0 <log10+0x12>
     fec:	c6 f3       	brts	.-16     	; 0xfde <log10+0x10>
     fee:	df 93       	push	r29
     ff0:	cf 93       	push	r28
     ff2:	1f 93       	push	r17
     ff4:	0f 93       	push	r16
     ff6:	ff 92       	push	r15
     ff8:	c9 2f       	mov	r28, r25
     ffa:	dd 27       	eor	r29, r29
     ffc:	88 23       	and	r24, r24
     ffe:	2a f0       	brmi	.+10     	; 0x100a <log+0x26>
    1000:	21 97       	sbiw	r28, 0x01	; 1
    1002:	66 0f       	add	r22, r22
    1004:	77 1f       	adc	r23, r23
    1006:	88 1f       	adc	r24, r24
    1008:	da f7       	brpl	.-10     	; 0x1000 <log+0x1c>
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	40 e8       	ldi	r20, 0x80	; 128
    1010:	5f eb       	ldi	r21, 0xBF	; 191
    1012:	9f e3       	ldi	r25, 0x3F	; 63
    1014:	88 39       	cpi	r24, 0x98	; 152
    1016:	20 f0       	brcs	.+8      	; 0x1020 <log+0x3c>
    1018:	80 3e       	cpi	r24, 0xE0	; 224
    101a:	30 f0       	brcs	.+12     	; 0x1028 <log+0x44>
    101c:	21 96       	adiw	r28, 0x01	; 1
    101e:	8f 77       	andi	r24, 0x7F	; 127
    1020:	60 de       	rcall	.-832    	; 0xce2 <__addsf3>
    1022:	ec e8       	ldi	r30, 0x8C	; 140
    1024:	f0 e0       	ldi	r31, 0x00	; 0
    1026:	03 c0       	rjmp	.+6      	; 0x102e <log+0x4a>
    1028:	5c de       	rcall	.-840    	; 0xce2 <__addsf3>
    102a:	e9 eb       	ldi	r30, 0xB9	; 185
    102c:	f0 e0       	ldi	r31, 0x00	; 0
    102e:	4d d1       	rcall	.+666    	; 0x12ca <__fp_powser>
    1030:	8b 01       	movw	r16, r22
    1032:	be 01       	movw	r22, r28
    1034:	ec 01       	movw	r28, r24
    1036:	fb 2e       	mov	r15, r27
    1038:	6f 57       	subi	r22, 0x7F	; 127
    103a:	71 09       	sbc	r23, r1
    103c:	75 95       	asr	r23
    103e:	77 1f       	adc	r23, r23
    1040:	88 0b       	sbc	r24, r24
    1042:	99 0b       	sbc	r25, r25
    1044:	e5 de       	rcall	.-566    	; 0xe10 <__floatsisf>
    1046:	28 e1       	ldi	r18, 0x18	; 24
    1048:	32 e7       	ldi	r19, 0x72	; 114
    104a:	41 e3       	ldi	r20, 0x31	; 49
    104c:	5f e3       	ldi	r21, 0x3F	; 63
    104e:	49 d0       	rcall	.+146    	; 0x10e2 <__mulsf3x>
    1050:	af 2d       	mov	r26, r15
    1052:	98 01       	movw	r18, r16
    1054:	ae 01       	movw	r20, r28
    1056:	ff 90       	pop	r15
    1058:	0f 91       	pop	r16
    105a:	1f 91       	pop	r17
    105c:	cf 91       	pop	r28
    105e:	df 91       	pop	r29
    1060:	51 de       	rcall	.-862    	; 0xd04 <__addsf3x>
    1062:	64 cf       	rjmp	.-312    	; 0xf2c <__fp_round>

00001064 <modf>:
    1064:	fa 01       	movw	r30, r20
    1066:	dc 01       	movw	r26, r24
    1068:	aa 0f       	add	r26, r26
    106a:	bb 1f       	adc	r27, r27
    106c:	9b 01       	movw	r18, r22
    106e:	ac 01       	movw	r20, r24
    1070:	bf 57       	subi	r27, 0x7F	; 127
    1072:	28 f4       	brcc	.+10     	; 0x107e <modf+0x1a>
    1074:	22 27       	eor	r18, r18
    1076:	33 27       	eor	r19, r19
    1078:	44 27       	eor	r20, r20
    107a:	50 78       	andi	r21, 0x80	; 128
    107c:	1f c0       	rjmp	.+62     	; 0x10bc <modf+0x58>
    107e:	b7 51       	subi	r27, 0x17	; 23
    1080:	88 f4       	brcc	.+34     	; 0x10a4 <modf+0x40>
    1082:	ab 2f       	mov	r26, r27
    1084:	00 24       	eor	r0, r0
    1086:	46 95       	lsr	r20
    1088:	37 95       	ror	r19
    108a:	27 95       	ror	r18
    108c:	01 1c       	adc	r0, r1
    108e:	a3 95       	inc	r26
    1090:	d2 f3       	brmi	.-12     	; 0x1086 <modf+0x22>
    1092:	00 20       	and	r0, r0
    1094:	69 f0       	breq	.+26     	; 0x10b0 <modf+0x4c>
    1096:	22 0f       	add	r18, r18
    1098:	33 1f       	adc	r19, r19
    109a:	44 1f       	adc	r20, r20
    109c:	b3 95       	inc	r27
    109e:	da f3       	brmi	.-10     	; 0x1096 <modf+0x32>
    10a0:	0d d0       	rcall	.+26     	; 0x10bc <modf+0x58>
    10a2:	1e ce       	rjmp	.-964    	; 0xce0 <__subsf3>
    10a4:	61 30       	cpi	r22, 0x01	; 1
    10a6:	71 05       	cpc	r23, r1
    10a8:	a0 e8       	ldi	r26, 0x80	; 128
    10aa:	8a 07       	cpc	r24, r26
    10ac:	b9 46       	sbci	r27, 0x69	; 105
    10ae:	30 f4       	brcc	.+12     	; 0x10bc <modf+0x58>
    10b0:	9b 01       	movw	r18, r22
    10b2:	ac 01       	movw	r20, r24
    10b4:	66 27       	eor	r22, r22
    10b6:	77 27       	eor	r23, r23
    10b8:	88 27       	eor	r24, r24
    10ba:	90 78       	andi	r25, 0x80	; 128
    10bc:	30 96       	adiw	r30, 0x00	; 0
    10be:	21 f0       	breq	.+8      	; 0x10c8 <modf+0x64>
    10c0:	20 83       	st	Z, r18
    10c2:	31 83       	std	Z+1, r19	; 0x01
    10c4:	42 83       	std	Z+2, r20	; 0x02
    10c6:	53 83       	std	Z+3, r21	; 0x03
    10c8:	08 95       	ret

000010ca <__mulsf3>:
    10ca:	0b d0       	rcall	.+22     	; 0x10e2 <__mulsf3x>
    10cc:	2f cf       	rjmp	.-418    	; 0xf2c <__fp_round>
    10ce:	20 df       	rcall	.-448    	; 0xf10 <__fp_pscA>
    10d0:	28 f0       	brcs	.+10     	; 0x10dc <__mulsf3+0x12>
    10d2:	25 df       	rcall	.-438    	; 0xf1e <__fp_pscB>
    10d4:	18 f0       	brcs	.+6      	; 0x10dc <__mulsf3+0x12>
    10d6:	95 23       	and	r25, r21
    10d8:	09 f0       	breq	.+2      	; 0x10dc <__mulsf3+0x12>
    10da:	e8 ce       	rjmp	.-560    	; 0xeac <__fp_inf>
    10dc:	16 cf       	rjmp	.-468    	; 0xf0a <__fp_nan>
    10de:	11 24       	eor	r1, r1
    10e0:	70 cf       	rjmp	.-288    	; 0xfc2 <__fp_szero>

000010e2 <__mulsf3x>:
    10e2:	35 df       	rcall	.-406    	; 0xf4e <__fp_split3>
    10e4:	a0 f3       	brcs	.-24     	; 0x10ce <__mulsf3+0x4>

000010e6 <__mulsf3_pse>:
    10e6:	95 9f       	mul	r25, r21
    10e8:	d1 f3       	breq	.-12     	; 0x10de <__mulsf3+0x14>
    10ea:	95 0f       	add	r25, r21
    10ec:	50 e0       	ldi	r21, 0x00	; 0
    10ee:	55 1f       	adc	r21, r21
    10f0:	62 9f       	mul	r22, r18
    10f2:	f0 01       	movw	r30, r0
    10f4:	72 9f       	mul	r23, r18
    10f6:	bb 27       	eor	r27, r27
    10f8:	f0 0d       	add	r31, r0
    10fa:	b1 1d       	adc	r27, r1
    10fc:	63 9f       	mul	r22, r19
    10fe:	aa 27       	eor	r26, r26
    1100:	f0 0d       	add	r31, r0
    1102:	b1 1d       	adc	r27, r1
    1104:	aa 1f       	adc	r26, r26
    1106:	64 9f       	mul	r22, r20
    1108:	66 27       	eor	r22, r22
    110a:	b0 0d       	add	r27, r0
    110c:	a1 1d       	adc	r26, r1
    110e:	66 1f       	adc	r22, r22
    1110:	82 9f       	mul	r24, r18
    1112:	22 27       	eor	r18, r18
    1114:	b0 0d       	add	r27, r0
    1116:	a1 1d       	adc	r26, r1
    1118:	62 1f       	adc	r22, r18
    111a:	73 9f       	mul	r23, r19
    111c:	b0 0d       	add	r27, r0
    111e:	a1 1d       	adc	r26, r1
    1120:	62 1f       	adc	r22, r18
    1122:	83 9f       	mul	r24, r19
    1124:	a0 0d       	add	r26, r0
    1126:	61 1d       	adc	r22, r1
    1128:	22 1f       	adc	r18, r18
    112a:	74 9f       	mul	r23, r20
    112c:	33 27       	eor	r19, r19
    112e:	a0 0d       	add	r26, r0
    1130:	61 1d       	adc	r22, r1
    1132:	23 1f       	adc	r18, r19
    1134:	84 9f       	mul	r24, r20
    1136:	60 0d       	add	r22, r0
    1138:	21 1d       	adc	r18, r1
    113a:	82 2f       	mov	r24, r18
    113c:	76 2f       	mov	r23, r22
    113e:	6a 2f       	mov	r22, r26
    1140:	11 24       	eor	r1, r1
    1142:	9f 57       	subi	r25, 0x7F	; 127
    1144:	50 40       	sbci	r21, 0x00	; 0
    1146:	8a f0       	brmi	.+34     	; 0x116a <__mulsf3_pse+0x84>
    1148:	e1 f0       	breq	.+56     	; 0x1182 <__mulsf3_pse+0x9c>
    114a:	88 23       	and	r24, r24
    114c:	4a f0       	brmi	.+18     	; 0x1160 <__mulsf3_pse+0x7a>
    114e:	ee 0f       	add	r30, r30
    1150:	ff 1f       	adc	r31, r31
    1152:	bb 1f       	adc	r27, r27
    1154:	66 1f       	adc	r22, r22
    1156:	77 1f       	adc	r23, r23
    1158:	88 1f       	adc	r24, r24
    115a:	91 50       	subi	r25, 0x01	; 1
    115c:	50 40       	sbci	r21, 0x00	; 0
    115e:	a9 f7       	brne	.-22     	; 0x114a <__mulsf3_pse+0x64>
    1160:	9e 3f       	cpi	r25, 0xFE	; 254
    1162:	51 05       	cpc	r21, r1
    1164:	70 f0       	brcs	.+28     	; 0x1182 <__mulsf3_pse+0x9c>
    1166:	a2 ce       	rjmp	.-700    	; 0xeac <__fp_inf>
    1168:	2c cf       	rjmp	.-424    	; 0xfc2 <__fp_szero>
    116a:	5f 3f       	cpi	r21, 0xFF	; 255
    116c:	ec f3       	brlt	.-6      	; 0x1168 <__mulsf3_pse+0x82>
    116e:	98 3e       	cpi	r25, 0xE8	; 232
    1170:	dc f3       	brlt	.-10     	; 0x1168 <__mulsf3_pse+0x82>
    1172:	86 95       	lsr	r24
    1174:	77 95       	ror	r23
    1176:	67 95       	ror	r22
    1178:	b7 95       	ror	r27
    117a:	f7 95       	ror	r31
    117c:	e7 95       	ror	r30
    117e:	9f 5f       	subi	r25, 0xFF	; 255
    1180:	c1 f7       	brne	.-16     	; 0x1172 <__mulsf3_pse+0x8c>
    1182:	fe 2b       	or	r31, r30
    1184:	88 0f       	add	r24, r24
    1186:	91 1d       	adc	r25, r1
    1188:	96 95       	lsr	r25
    118a:	87 95       	ror	r24
    118c:	97 f9       	bld	r25, 7
    118e:	08 95       	ret

00001190 <pow>:
    1190:	fa 01       	movw	r30, r20
    1192:	ee 0f       	add	r30, r30
    1194:	ff 1f       	adc	r31, r31
    1196:	30 96       	adiw	r30, 0x00	; 0
    1198:	21 05       	cpc	r18, r1
    119a:	31 05       	cpc	r19, r1
    119c:	99 f1       	breq	.+102    	; 0x1204 <pow+0x74>
    119e:	61 15       	cp	r22, r1
    11a0:	71 05       	cpc	r23, r1
    11a2:	61 f4       	brne	.+24     	; 0x11bc <pow+0x2c>
    11a4:	80 38       	cpi	r24, 0x80	; 128
    11a6:	bf e3       	ldi	r27, 0x3F	; 63
    11a8:	9b 07       	cpc	r25, r27
    11aa:	49 f1       	breq	.+82     	; 0x11fe <pow+0x6e>
    11ac:	68 94       	set
    11ae:	90 38       	cpi	r25, 0x80	; 128
    11b0:	81 05       	cpc	r24, r1
    11b2:	61 f0       	breq	.+24     	; 0x11cc <pow+0x3c>
    11b4:	80 38       	cpi	r24, 0x80	; 128
    11b6:	bf ef       	ldi	r27, 0xFF	; 255
    11b8:	9b 07       	cpc	r25, r27
    11ba:	41 f0       	breq	.+16     	; 0x11cc <pow+0x3c>
    11bc:	99 23       	and	r25, r25
    11be:	42 f5       	brpl	.+80     	; 0x1210 <pow+0x80>
    11c0:	ff 3f       	cpi	r31, 0xFF	; 255
    11c2:	e1 05       	cpc	r30, r1
    11c4:	31 05       	cpc	r19, r1
    11c6:	21 05       	cpc	r18, r1
    11c8:	11 f1       	breq	.+68     	; 0x120e <pow+0x7e>
    11ca:	e8 94       	clt
    11cc:	08 94       	sec
    11ce:	e7 95       	ror	r30
    11d0:	d9 01       	movw	r26, r18
    11d2:	aa 23       	and	r26, r26
    11d4:	29 f4       	brne	.+10     	; 0x11e0 <pow+0x50>
    11d6:	ab 2f       	mov	r26, r27
    11d8:	be 2f       	mov	r27, r30
    11da:	f8 5f       	subi	r31, 0xF8	; 248
    11dc:	d0 f3       	brcs	.-12     	; 0x11d2 <pow+0x42>
    11de:	10 c0       	rjmp	.+32     	; 0x1200 <pow+0x70>
    11e0:	ff 5f       	subi	r31, 0xFF	; 255
    11e2:	70 f4       	brcc	.+28     	; 0x1200 <pow+0x70>
    11e4:	a6 95       	lsr	r26
    11e6:	e0 f7       	brcc	.-8      	; 0x11e0 <pow+0x50>
    11e8:	f7 39       	cpi	r31, 0x97	; 151
    11ea:	50 f0       	brcs	.+20     	; 0x1200 <pow+0x70>
    11ec:	19 f0       	breq	.+6      	; 0x11f4 <pow+0x64>
    11ee:	ff 3a       	cpi	r31, 0xAF	; 175
    11f0:	38 f4       	brcc	.+14     	; 0x1200 <pow+0x70>
    11f2:	9f 77       	andi	r25, 0x7F	; 127
    11f4:	9f 93       	push	r25
    11f6:	0c d0       	rcall	.+24     	; 0x1210 <pow+0x80>
    11f8:	0f 90       	pop	r0
    11fa:	07 fc       	sbrc	r0, 7
    11fc:	90 58       	subi	r25, 0x80	; 128
    11fe:	08 95       	ret
    1200:	3e f0       	brts	.+14     	; 0x1210 <pow+0x80>
    1202:	83 ce       	rjmp	.-762    	; 0xf0a <__fp_nan>
    1204:	60 e0       	ldi	r22, 0x00	; 0
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	80 e8       	ldi	r24, 0x80	; 128
    120a:	9f e3       	ldi	r25, 0x3F	; 63
    120c:	08 95       	ret
    120e:	4f e7       	ldi	r20, 0x7F	; 127
    1210:	9f 77       	andi	r25, 0x7F	; 127
    1212:	5f 93       	push	r21
    1214:	4f 93       	push	r20
    1216:	3f 93       	push	r19
    1218:	2f 93       	push	r18
    121a:	e4 de       	rcall	.-568    	; 0xfe4 <log>
    121c:	2f 91       	pop	r18
    121e:	3f 91       	pop	r19
    1220:	4f 91       	pop	r20
    1222:	5f 91       	pop	r21
    1224:	52 df       	rcall	.-348    	; 0x10ca <__mulsf3>
    1226:	25 c0       	rjmp	.+74     	; 0x1272 <exp>

00001228 <round>:
    1228:	9a de       	rcall	.-716    	; 0xf5e <__fp_splitA>
    122a:	e0 f0       	brcs	.+56     	; 0x1264 <round+0x3c>
    122c:	9e 37       	cpi	r25, 0x7E	; 126
    122e:	d8 f0       	brcs	.+54     	; 0x1266 <round+0x3e>
    1230:	96 39       	cpi	r25, 0x96	; 150
    1232:	b8 f4       	brcc	.+46     	; 0x1262 <round+0x3a>
    1234:	9e 38       	cpi	r25, 0x8E	; 142
    1236:	48 f4       	brcc	.+18     	; 0x124a <round+0x22>
    1238:	67 2f       	mov	r22, r23
    123a:	78 2f       	mov	r23, r24
    123c:	88 27       	eor	r24, r24
    123e:	98 5f       	subi	r25, 0xF8	; 248
    1240:	f9 cf       	rjmp	.-14     	; 0x1234 <round+0xc>
    1242:	86 95       	lsr	r24
    1244:	77 95       	ror	r23
    1246:	67 95       	ror	r22
    1248:	93 95       	inc	r25
    124a:	95 39       	cpi	r25, 0x95	; 149
    124c:	d0 f3       	brcs	.-12     	; 0x1242 <round+0x1a>
    124e:	b6 2f       	mov	r27, r22
    1250:	b1 70       	andi	r27, 0x01	; 1
    1252:	6b 0f       	add	r22, r27
    1254:	71 1d       	adc	r23, r1
    1256:	81 1d       	adc	r24, r1
    1258:	20 f4       	brcc	.+8      	; 0x1262 <round+0x3a>
    125a:	87 95       	ror	r24
    125c:	77 95       	ror	r23
    125e:	67 95       	ror	r22
    1260:	93 95       	inc	r25
    1262:	2a ce       	rjmp	.-940    	; 0xeb8 <__fp_mintl>
    1264:	44 ce       	rjmp	.-888    	; 0xeee <__fp_mpack>
    1266:	ad ce       	rjmp	.-678    	; 0xfc2 <__fp_szero>
    1268:	19 f4       	brne	.+6      	; 0x1270 <round+0x48>
    126a:	0e f0       	brts	.+2      	; 0x126e <round+0x46>
    126c:	1f ce       	rjmp	.-962    	; 0xeac <__fp_inf>
    126e:	a8 ce       	rjmp	.-688    	; 0xfc0 <__fp_zero>
    1270:	4c ce       	rjmp	.-872    	; 0xf0a <__fp_nan>

00001272 <exp>:
    1272:	75 de       	rcall	.-790    	; 0xf5e <__fp_splitA>
    1274:	c8 f3       	brcs	.-14     	; 0x1268 <round+0x40>
    1276:	96 38       	cpi	r25, 0x86	; 134
    1278:	c0 f7       	brcc	.-16     	; 0x126a <round+0x42>
    127a:	07 f8       	bld	r0, 7
    127c:	0f 92       	push	r0
    127e:	e8 94       	clt
    1280:	2b e3       	ldi	r18, 0x3B	; 59
    1282:	3a ea       	ldi	r19, 0xAA	; 170
    1284:	48 eb       	ldi	r20, 0xB8	; 184
    1286:	5f e7       	ldi	r21, 0x7F	; 127
    1288:	2e df       	rcall	.-420    	; 0x10e6 <__mulsf3_pse>
    128a:	0f 92       	push	r0
    128c:	0f 92       	push	r0
    128e:	0f 92       	push	r0
    1290:	4d b7       	in	r20, 0x3d	; 61
    1292:	5e b7       	in	r21, 0x3e	; 62
    1294:	0f 92       	push	r0
    1296:	e6 de       	rcall	.-564    	; 0x1064 <modf>
    1298:	e6 ee       	ldi	r30, 0xE6	; 230
    129a:	f0 e0       	ldi	r31, 0x00	; 0
    129c:	16 d0       	rcall	.+44     	; 0x12ca <__fp_powser>
    129e:	4f 91       	pop	r20
    12a0:	5f 91       	pop	r21
    12a2:	ef 91       	pop	r30
    12a4:	ff 91       	pop	r31
    12a6:	e5 95       	asr	r30
    12a8:	ee 1f       	adc	r30, r30
    12aa:	ff 1f       	adc	r31, r31
    12ac:	49 f0       	breq	.+18     	; 0x12c0 <exp+0x4e>
    12ae:	fe 57       	subi	r31, 0x7E	; 126
    12b0:	e0 68       	ori	r30, 0x80	; 128
    12b2:	44 27       	eor	r20, r20
    12b4:	ee 0f       	add	r30, r30
    12b6:	44 1f       	adc	r20, r20
    12b8:	fa 95       	dec	r31
    12ba:	e1 f7       	brne	.-8      	; 0x12b4 <exp+0x42>
    12bc:	41 95       	neg	r20
    12be:	55 0b       	sbc	r21, r21
    12c0:	32 d0       	rcall	.+100    	; 0x1326 <ldexp>
    12c2:	0f 90       	pop	r0
    12c4:	07 fe       	sbrs	r0, 7
    12c6:	26 c0       	rjmp	.+76     	; 0x1314 <inverse>
    12c8:	08 95       	ret

000012ca <__fp_powser>:
    12ca:	df 93       	push	r29
    12cc:	cf 93       	push	r28
    12ce:	1f 93       	push	r17
    12d0:	0f 93       	push	r16
    12d2:	ff 92       	push	r15
    12d4:	ef 92       	push	r14
    12d6:	df 92       	push	r13
    12d8:	7b 01       	movw	r14, r22
    12da:	8c 01       	movw	r16, r24
    12dc:	68 94       	set
    12de:	05 c0       	rjmp	.+10     	; 0x12ea <__fp_powser+0x20>
    12e0:	da 2e       	mov	r13, r26
    12e2:	ef 01       	movw	r28, r30
    12e4:	fe de       	rcall	.-516    	; 0x10e2 <__mulsf3x>
    12e6:	fe 01       	movw	r30, r28
    12e8:	e8 94       	clt
    12ea:	a5 91       	lpm	r26, Z+
    12ec:	25 91       	lpm	r18, Z+
    12ee:	35 91       	lpm	r19, Z+
    12f0:	45 91       	lpm	r20, Z+
    12f2:	55 91       	lpm	r21, Z+
    12f4:	ae f3       	brts	.-22     	; 0x12e0 <__fp_powser+0x16>
    12f6:	ef 01       	movw	r28, r30
    12f8:	05 dd       	rcall	.-1526   	; 0xd04 <__addsf3x>
    12fa:	fe 01       	movw	r30, r28
    12fc:	97 01       	movw	r18, r14
    12fe:	a8 01       	movw	r20, r16
    1300:	da 94       	dec	r13
    1302:	79 f7       	brne	.-34     	; 0x12e2 <__fp_powser+0x18>
    1304:	df 90       	pop	r13
    1306:	ef 90       	pop	r14
    1308:	ff 90       	pop	r15
    130a:	0f 91       	pop	r16
    130c:	1f 91       	pop	r17
    130e:	cf 91       	pop	r28
    1310:	df 91       	pop	r29
    1312:	08 95       	ret

00001314 <inverse>:
    1314:	9b 01       	movw	r18, r22
    1316:	ac 01       	movw	r20, r24
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	80 e8       	ldi	r24, 0x80	; 128
    131e:	9f e3       	ldi	r25, 0x3F	; 63
    1320:	36 c0       	rjmp	.+108    	; 0x138e <__divsf3>
    1322:	c4 cd       	rjmp	.-1144   	; 0xeac <__fp_inf>
    1324:	e4 cd       	rjmp	.-1080   	; 0xeee <__fp_mpack>

00001326 <ldexp>:
    1326:	1b de       	rcall	.-970    	; 0xf5e <__fp_splitA>
    1328:	e8 f3       	brcs	.-6      	; 0x1324 <inverse+0x10>
    132a:	99 23       	and	r25, r25
    132c:	d9 f3       	breq	.-10     	; 0x1324 <inverse+0x10>
    132e:	94 0f       	add	r25, r20
    1330:	51 1d       	adc	r21, r1
    1332:	bb f3       	brvs	.-18     	; 0x1322 <inverse+0xe>
    1334:	91 50       	subi	r25, 0x01	; 1
    1336:	50 40       	sbci	r21, 0x00	; 0
    1338:	94 f0       	brlt	.+36     	; 0x135e <ldexp+0x38>
    133a:	59 f0       	breq	.+22     	; 0x1352 <ldexp+0x2c>
    133c:	88 23       	and	r24, r24
    133e:	32 f0       	brmi	.+12     	; 0x134c <ldexp+0x26>
    1340:	66 0f       	add	r22, r22
    1342:	77 1f       	adc	r23, r23
    1344:	88 1f       	adc	r24, r24
    1346:	91 50       	subi	r25, 0x01	; 1
    1348:	50 40       	sbci	r21, 0x00	; 0
    134a:	c1 f7       	brne	.-16     	; 0x133c <ldexp+0x16>
    134c:	9e 3f       	cpi	r25, 0xFE	; 254
    134e:	51 05       	cpc	r21, r1
    1350:	44 f7       	brge	.-48     	; 0x1322 <inverse+0xe>
    1352:	88 0f       	add	r24, r24
    1354:	91 1d       	adc	r25, r1
    1356:	96 95       	lsr	r25
    1358:	87 95       	ror	r24
    135a:	97 f9       	bld	r25, 7
    135c:	08 95       	ret
    135e:	5f 3f       	cpi	r21, 0xFF	; 255
    1360:	ac f0       	brlt	.+42     	; 0x138c <ldexp+0x66>
    1362:	98 3e       	cpi	r25, 0xE8	; 232
    1364:	9c f0       	brlt	.+38     	; 0x138c <ldexp+0x66>
    1366:	bb 27       	eor	r27, r27
    1368:	86 95       	lsr	r24
    136a:	77 95       	ror	r23
    136c:	67 95       	ror	r22
    136e:	b7 95       	ror	r27
    1370:	08 f4       	brcc	.+2      	; 0x1374 <ldexp+0x4e>
    1372:	b1 60       	ori	r27, 0x01	; 1
    1374:	93 95       	inc	r25
    1376:	c1 f7       	brne	.-16     	; 0x1368 <ldexp+0x42>
    1378:	bb 0f       	add	r27, r27
    137a:	58 f7       	brcc	.-42     	; 0x1352 <ldexp+0x2c>
    137c:	11 f4       	brne	.+4      	; 0x1382 <ldexp+0x5c>
    137e:	60 ff       	sbrs	r22, 0
    1380:	e8 cf       	rjmp	.-48     	; 0x1352 <ldexp+0x2c>
    1382:	6f 5f       	subi	r22, 0xFF	; 255
    1384:	7f 4f       	sbci	r23, 0xFF	; 255
    1386:	8f 4f       	sbci	r24, 0xFF	; 255
    1388:	9f 4f       	sbci	r25, 0xFF	; 255
    138a:	e3 cf       	rjmp	.-58     	; 0x1352 <ldexp+0x2c>
    138c:	1a ce       	rjmp	.-972    	; 0xfc2 <__fp_szero>

0000138e <__divsf3>:
    138e:	0c d0       	rcall	.+24     	; 0x13a8 <__divsf3x>
    1390:	cd cd       	rjmp	.-1126   	; 0xf2c <__fp_round>
    1392:	c5 dd       	rcall	.-1142   	; 0xf1e <__fp_pscB>
    1394:	40 f0       	brcs	.+16     	; 0x13a6 <__divsf3+0x18>
    1396:	bc dd       	rcall	.-1160   	; 0xf10 <__fp_pscA>
    1398:	30 f0       	brcs	.+12     	; 0x13a6 <__divsf3+0x18>
    139a:	21 f4       	brne	.+8      	; 0x13a4 <__divsf3+0x16>
    139c:	5f 3f       	cpi	r21, 0xFF	; 255
    139e:	19 f0       	breq	.+6      	; 0x13a6 <__divsf3+0x18>
    13a0:	85 cd       	rjmp	.-1270   	; 0xeac <__fp_inf>
    13a2:	51 11       	cpse	r21, r1
    13a4:	0e ce       	rjmp	.-996    	; 0xfc2 <__fp_szero>
    13a6:	b1 cd       	rjmp	.-1182   	; 0xf0a <__fp_nan>

000013a8 <__divsf3x>:
    13a8:	d2 dd       	rcall	.-1116   	; 0xf4e <__fp_split3>
    13aa:	98 f3       	brcs	.-26     	; 0x1392 <__divsf3+0x4>

000013ac <__divsf3_pse>:
    13ac:	99 23       	and	r25, r25
    13ae:	c9 f3       	breq	.-14     	; 0x13a2 <__divsf3+0x14>
    13b0:	55 23       	and	r21, r21
    13b2:	b1 f3       	breq	.-20     	; 0x13a0 <__divsf3+0x12>
    13b4:	95 1b       	sub	r25, r21
    13b6:	55 0b       	sbc	r21, r21
    13b8:	bb 27       	eor	r27, r27
    13ba:	aa 27       	eor	r26, r26
    13bc:	62 17       	cp	r22, r18
    13be:	73 07       	cpc	r23, r19
    13c0:	84 07       	cpc	r24, r20
    13c2:	38 f0       	brcs	.+14     	; 0x13d2 <__divsf3_pse+0x26>
    13c4:	9f 5f       	subi	r25, 0xFF	; 255
    13c6:	5f 4f       	sbci	r21, 0xFF	; 255
    13c8:	22 0f       	add	r18, r18
    13ca:	33 1f       	adc	r19, r19
    13cc:	44 1f       	adc	r20, r20
    13ce:	aa 1f       	adc	r26, r26
    13d0:	a9 f3       	breq	.-22     	; 0x13bc <__divsf3_pse+0x10>
    13d2:	33 d0       	rcall	.+102    	; 0x143a <__divsf3_pse+0x8e>
    13d4:	0e 2e       	mov	r0, r30
    13d6:	3a f0       	brmi	.+14     	; 0x13e6 <__divsf3_pse+0x3a>
    13d8:	e0 e8       	ldi	r30, 0x80	; 128
    13da:	30 d0       	rcall	.+96     	; 0x143c <__divsf3_pse+0x90>
    13dc:	91 50       	subi	r25, 0x01	; 1
    13de:	50 40       	sbci	r21, 0x00	; 0
    13e0:	e6 95       	lsr	r30
    13e2:	00 1c       	adc	r0, r0
    13e4:	ca f7       	brpl	.-14     	; 0x13d8 <__divsf3_pse+0x2c>
    13e6:	29 d0       	rcall	.+82     	; 0x143a <__divsf3_pse+0x8e>
    13e8:	fe 2f       	mov	r31, r30
    13ea:	27 d0       	rcall	.+78     	; 0x143a <__divsf3_pse+0x8e>
    13ec:	66 0f       	add	r22, r22
    13ee:	77 1f       	adc	r23, r23
    13f0:	88 1f       	adc	r24, r24
    13f2:	bb 1f       	adc	r27, r27
    13f4:	26 17       	cp	r18, r22
    13f6:	37 07       	cpc	r19, r23
    13f8:	48 07       	cpc	r20, r24
    13fa:	ab 07       	cpc	r26, r27
    13fc:	b0 e8       	ldi	r27, 0x80	; 128
    13fe:	09 f0       	breq	.+2      	; 0x1402 <__divsf3_pse+0x56>
    1400:	bb 0b       	sbc	r27, r27
    1402:	80 2d       	mov	r24, r0
    1404:	bf 01       	movw	r22, r30
    1406:	ff 27       	eor	r31, r31
    1408:	93 58       	subi	r25, 0x83	; 131
    140a:	5f 4f       	sbci	r21, 0xFF	; 255
    140c:	2a f0       	brmi	.+10     	; 0x1418 <__divsf3_pse+0x6c>
    140e:	9e 3f       	cpi	r25, 0xFE	; 254
    1410:	51 05       	cpc	r21, r1
    1412:	68 f0       	brcs	.+26     	; 0x142e <__divsf3_pse+0x82>
    1414:	4b cd       	rjmp	.-1386   	; 0xeac <__fp_inf>
    1416:	d5 cd       	rjmp	.-1110   	; 0xfc2 <__fp_szero>
    1418:	5f 3f       	cpi	r21, 0xFF	; 255
    141a:	ec f3       	brlt	.-6      	; 0x1416 <__divsf3_pse+0x6a>
    141c:	98 3e       	cpi	r25, 0xE8	; 232
    141e:	dc f3       	brlt	.-10     	; 0x1416 <__divsf3_pse+0x6a>
    1420:	86 95       	lsr	r24
    1422:	77 95       	ror	r23
    1424:	67 95       	ror	r22
    1426:	b7 95       	ror	r27
    1428:	f7 95       	ror	r31
    142a:	9f 5f       	subi	r25, 0xFF	; 255
    142c:	c9 f7       	brne	.-14     	; 0x1420 <__divsf3_pse+0x74>
    142e:	88 0f       	add	r24, r24
    1430:	91 1d       	adc	r25, r1
    1432:	96 95       	lsr	r25
    1434:	87 95       	ror	r24
    1436:	97 f9       	bld	r25, 7
    1438:	08 95       	ret
    143a:	e1 e0       	ldi	r30, 0x01	; 1
    143c:	66 0f       	add	r22, r22
    143e:	77 1f       	adc	r23, r23
    1440:	88 1f       	adc	r24, r24
    1442:	bb 1f       	adc	r27, r27
    1444:	62 17       	cp	r22, r18
    1446:	73 07       	cpc	r23, r19
    1448:	84 07       	cpc	r24, r20
    144a:	ba 07       	cpc	r27, r26
    144c:	20 f0       	brcs	.+8      	; 0x1456 <__divsf3_pse+0xaa>
    144e:	62 1b       	sub	r22, r18
    1450:	73 0b       	sbc	r23, r19
    1452:	84 0b       	sbc	r24, r20
    1454:	ba 0b       	sbc	r27, r26
    1456:	ee 1f       	adc	r30, r30
    1458:	88 f7       	brcc	.-30     	; 0x143c <__divsf3_pse+0x90>
    145a:	e0 95       	com	r30
    145c:	08 95       	ret

0000145e <malloc>:
    145e:	cf 93       	push	r28
    1460:	df 93       	push	r29
    1462:	82 30       	cpi	r24, 0x02	; 2
    1464:	91 05       	cpc	r25, r1
    1466:	10 f4       	brcc	.+4      	; 0x146c <malloc+0xe>
    1468:	82 e0       	ldi	r24, 0x02	; 2
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	e0 91 6b 03 	lds	r30, 0x036B
    1470:	f0 91 6c 03 	lds	r31, 0x036C
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	a0 e0       	ldi	r26, 0x00	; 0
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	30 97       	sbiw	r30, 0x00	; 0
    147e:	39 f1       	breq	.+78     	; 0x14ce <malloc+0x70>
    1480:	40 81       	ld	r20, Z
    1482:	51 81       	ldd	r21, Z+1	; 0x01
    1484:	48 17       	cp	r20, r24
    1486:	59 07       	cpc	r21, r25
    1488:	b8 f0       	brcs	.+46     	; 0x14b8 <malloc+0x5a>
    148a:	48 17       	cp	r20, r24
    148c:	59 07       	cpc	r21, r25
    148e:	71 f4       	brne	.+28     	; 0x14ac <malloc+0x4e>
    1490:	82 81       	ldd	r24, Z+2	; 0x02
    1492:	93 81       	ldd	r25, Z+3	; 0x03
    1494:	10 97       	sbiw	r26, 0x00	; 0
    1496:	29 f0       	breq	.+10     	; 0x14a2 <malloc+0x44>
    1498:	13 96       	adiw	r26, 0x03	; 3
    149a:	9c 93       	st	X, r25
    149c:	8e 93       	st	-X, r24
    149e:	12 97       	sbiw	r26, 0x02	; 2
    14a0:	2c c0       	rjmp	.+88     	; 0x14fa <malloc+0x9c>
    14a2:	90 93 6c 03 	sts	0x036C, r25
    14a6:	80 93 6b 03 	sts	0x036B, r24
    14aa:	27 c0       	rjmp	.+78     	; 0x14fa <malloc+0x9c>
    14ac:	21 15       	cp	r18, r1
    14ae:	31 05       	cpc	r19, r1
    14b0:	31 f0       	breq	.+12     	; 0x14be <malloc+0x60>
    14b2:	42 17       	cp	r20, r18
    14b4:	53 07       	cpc	r21, r19
    14b6:	18 f0       	brcs	.+6      	; 0x14be <malloc+0x60>
    14b8:	a9 01       	movw	r20, r18
    14ba:	db 01       	movw	r26, r22
    14bc:	01 c0       	rjmp	.+2      	; 0x14c0 <malloc+0x62>
    14be:	ef 01       	movw	r28, r30
    14c0:	9a 01       	movw	r18, r20
    14c2:	bd 01       	movw	r22, r26
    14c4:	df 01       	movw	r26, r30
    14c6:	02 80       	ldd	r0, Z+2	; 0x02
    14c8:	f3 81       	ldd	r31, Z+3	; 0x03
    14ca:	e0 2d       	mov	r30, r0
    14cc:	d7 cf       	rjmp	.-82     	; 0x147c <malloc+0x1e>
    14ce:	21 15       	cp	r18, r1
    14d0:	31 05       	cpc	r19, r1
    14d2:	f9 f0       	breq	.+62     	; 0x1512 <malloc+0xb4>
    14d4:	28 1b       	sub	r18, r24
    14d6:	39 0b       	sbc	r19, r25
    14d8:	24 30       	cpi	r18, 0x04	; 4
    14da:	31 05       	cpc	r19, r1
    14dc:	80 f4       	brcc	.+32     	; 0x14fe <malloc+0xa0>
    14de:	8a 81       	ldd	r24, Y+2	; 0x02
    14e0:	9b 81       	ldd	r25, Y+3	; 0x03
    14e2:	61 15       	cp	r22, r1
    14e4:	71 05       	cpc	r23, r1
    14e6:	21 f0       	breq	.+8      	; 0x14f0 <malloc+0x92>
    14e8:	fb 01       	movw	r30, r22
    14ea:	93 83       	std	Z+3, r25	; 0x03
    14ec:	82 83       	std	Z+2, r24	; 0x02
    14ee:	04 c0       	rjmp	.+8      	; 0x14f8 <malloc+0x9a>
    14f0:	90 93 6c 03 	sts	0x036C, r25
    14f4:	80 93 6b 03 	sts	0x036B, r24
    14f8:	fe 01       	movw	r30, r28
    14fa:	32 96       	adiw	r30, 0x02	; 2
    14fc:	44 c0       	rjmp	.+136    	; 0x1586 <malloc+0x128>
    14fe:	fe 01       	movw	r30, r28
    1500:	e2 0f       	add	r30, r18
    1502:	f3 1f       	adc	r31, r19
    1504:	81 93       	st	Z+, r24
    1506:	91 93       	st	Z+, r25
    1508:	22 50       	subi	r18, 0x02	; 2
    150a:	31 09       	sbc	r19, r1
    150c:	39 83       	std	Y+1, r19	; 0x01
    150e:	28 83       	st	Y, r18
    1510:	3a c0       	rjmp	.+116    	; 0x1586 <malloc+0x128>
    1512:	20 91 69 03 	lds	r18, 0x0369
    1516:	30 91 6a 03 	lds	r19, 0x036A
    151a:	23 2b       	or	r18, r19
    151c:	41 f4       	brne	.+16     	; 0x152e <malloc+0xd0>
    151e:	20 91 07 01 	lds	r18, 0x0107
    1522:	30 91 08 01 	lds	r19, 0x0108
    1526:	30 93 6a 03 	sts	0x036A, r19
    152a:	20 93 69 03 	sts	0x0369, r18
    152e:	20 91 05 01 	lds	r18, 0x0105
    1532:	30 91 06 01 	lds	r19, 0x0106
    1536:	21 15       	cp	r18, r1
    1538:	31 05       	cpc	r19, r1
    153a:	41 f4       	brne	.+16     	; 0x154c <malloc+0xee>
    153c:	2d b7       	in	r18, 0x3d	; 61
    153e:	3e b7       	in	r19, 0x3e	; 62
    1540:	40 91 09 01 	lds	r20, 0x0109
    1544:	50 91 0a 01 	lds	r21, 0x010A
    1548:	24 1b       	sub	r18, r20
    154a:	35 0b       	sbc	r19, r21
    154c:	e0 91 69 03 	lds	r30, 0x0369
    1550:	f0 91 6a 03 	lds	r31, 0x036A
    1554:	e2 17       	cp	r30, r18
    1556:	f3 07       	cpc	r31, r19
    1558:	a0 f4       	brcc	.+40     	; 0x1582 <malloc+0x124>
    155a:	2e 1b       	sub	r18, r30
    155c:	3f 0b       	sbc	r19, r31
    155e:	28 17       	cp	r18, r24
    1560:	39 07       	cpc	r19, r25
    1562:	78 f0       	brcs	.+30     	; 0x1582 <malloc+0x124>
    1564:	ac 01       	movw	r20, r24
    1566:	4e 5f       	subi	r20, 0xFE	; 254
    1568:	5f 4f       	sbci	r21, 0xFF	; 255
    156a:	24 17       	cp	r18, r20
    156c:	35 07       	cpc	r19, r21
    156e:	48 f0       	brcs	.+18     	; 0x1582 <malloc+0x124>
    1570:	4e 0f       	add	r20, r30
    1572:	5f 1f       	adc	r21, r31
    1574:	50 93 6a 03 	sts	0x036A, r21
    1578:	40 93 69 03 	sts	0x0369, r20
    157c:	81 93       	st	Z+, r24
    157e:	91 93       	st	Z+, r25
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <malloc+0x128>
    1582:	e0 e0       	ldi	r30, 0x00	; 0
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	cf 01       	movw	r24, r30
    1588:	df 91       	pop	r29
    158a:	cf 91       	pop	r28
    158c:	08 95       	ret

0000158e <free>:
    158e:	cf 93       	push	r28
    1590:	df 93       	push	r29
    1592:	00 97       	sbiw	r24, 0x00	; 0
    1594:	09 f4       	brne	.+2      	; 0x1598 <free+0xa>
    1596:	87 c0       	rjmp	.+270    	; 0x16a6 <free+0x118>
    1598:	fc 01       	movw	r30, r24
    159a:	32 97       	sbiw	r30, 0x02	; 2
    159c:	13 82       	std	Z+3, r1	; 0x03
    159e:	12 82       	std	Z+2, r1	; 0x02
    15a0:	c0 91 6b 03 	lds	r28, 0x036B
    15a4:	d0 91 6c 03 	lds	r29, 0x036C
    15a8:	20 97       	sbiw	r28, 0x00	; 0
    15aa:	81 f4       	brne	.+32     	; 0x15cc <free+0x3e>
    15ac:	20 81       	ld	r18, Z
    15ae:	31 81       	ldd	r19, Z+1	; 0x01
    15b0:	28 0f       	add	r18, r24
    15b2:	39 1f       	adc	r19, r25
    15b4:	80 91 69 03 	lds	r24, 0x0369
    15b8:	90 91 6a 03 	lds	r25, 0x036A
    15bc:	82 17       	cp	r24, r18
    15be:	93 07       	cpc	r25, r19
    15c0:	79 f5       	brne	.+94     	; 0x1620 <free+0x92>
    15c2:	f0 93 6a 03 	sts	0x036A, r31
    15c6:	e0 93 69 03 	sts	0x0369, r30
    15ca:	6d c0       	rjmp	.+218    	; 0x16a6 <free+0x118>
    15cc:	de 01       	movw	r26, r28
    15ce:	20 e0       	ldi	r18, 0x00	; 0
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	ae 17       	cp	r26, r30
    15d4:	bf 07       	cpc	r27, r31
    15d6:	50 f4       	brcc	.+20     	; 0x15ec <free+0x5e>
    15d8:	12 96       	adiw	r26, 0x02	; 2
    15da:	4d 91       	ld	r20, X+
    15dc:	5c 91       	ld	r21, X
    15de:	13 97       	sbiw	r26, 0x03	; 3
    15e0:	9d 01       	movw	r18, r26
    15e2:	41 15       	cp	r20, r1
    15e4:	51 05       	cpc	r21, r1
    15e6:	09 f1       	breq	.+66     	; 0x162a <free+0x9c>
    15e8:	da 01       	movw	r26, r20
    15ea:	f3 cf       	rjmp	.-26     	; 0x15d2 <free+0x44>
    15ec:	b3 83       	std	Z+3, r27	; 0x03
    15ee:	a2 83       	std	Z+2, r26	; 0x02
    15f0:	40 81       	ld	r20, Z
    15f2:	51 81       	ldd	r21, Z+1	; 0x01
    15f4:	84 0f       	add	r24, r20
    15f6:	95 1f       	adc	r25, r21
    15f8:	8a 17       	cp	r24, r26
    15fa:	9b 07       	cpc	r25, r27
    15fc:	71 f4       	brne	.+28     	; 0x161a <free+0x8c>
    15fe:	8d 91       	ld	r24, X+
    1600:	9c 91       	ld	r25, X
    1602:	11 97       	sbiw	r26, 0x01	; 1
    1604:	84 0f       	add	r24, r20
    1606:	95 1f       	adc	r25, r21
    1608:	02 96       	adiw	r24, 0x02	; 2
    160a:	91 83       	std	Z+1, r25	; 0x01
    160c:	80 83       	st	Z, r24
    160e:	12 96       	adiw	r26, 0x02	; 2
    1610:	8d 91       	ld	r24, X+
    1612:	9c 91       	ld	r25, X
    1614:	13 97       	sbiw	r26, 0x03	; 3
    1616:	93 83       	std	Z+3, r25	; 0x03
    1618:	82 83       	std	Z+2, r24	; 0x02
    161a:	21 15       	cp	r18, r1
    161c:	31 05       	cpc	r19, r1
    161e:	29 f4       	brne	.+10     	; 0x162a <free+0x9c>
    1620:	f0 93 6c 03 	sts	0x036C, r31
    1624:	e0 93 6b 03 	sts	0x036B, r30
    1628:	3e c0       	rjmp	.+124    	; 0x16a6 <free+0x118>
    162a:	d9 01       	movw	r26, r18
    162c:	13 96       	adiw	r26, 0x03	; 3
    162e:	fc 93       	st	X, r31
    1630:	ee 93       	st	-X, r30
    1632:	12 97       	sbiw	r26, 0x02	; 2
    1634:	4d 91       	ld	r20, X+
    1636:	5d 91       	ld	r21, X+
    1638:	a4 0f       	add	r26, r20
    163a:	b5 1f       	adc	r27, r21
    163c:	ea 17       	cp	r30, r26
    163e:	fb 07       	cpc	r31, r27
    1640:	79 f4       	brne	.+30     	; 0x1660 <free+0xd2>
    1642:	80 81       	ld	r24, Z
    1644:	91 81       	ldd	r25, Z+1	; 0x01
    1646:	84 0f       	add	r24, r20
    1648:	95 1f       	adc	r25, r21
    164a:	02 96       	adiw	r24, 0x02	; 2
    164c:	d9 01       	movw	r26, r18
    164e:	11 96       	adiw	r26, 0x01	; 1
    1650:	9c 93       	st	X, r25
    1652:	8e 93       	st	-X, r24
    1654:	82 81       	ldd	r24, Z+2	; 0x02
    1656:	93 81       	ldd	r25, Z+3	; 0x03
    1658:	13 96       	adiw	r26, 0x03	; 3
    165a:	9c 93       	st	X, r25
    165c:	8e 93       	st	-X, r24
    165e:	12 97       	sbiw	r26, 0x02	; 2
    1660:	e0 e0       	ldi	r30, 0x00	; 0
    1662:	f0 e0       	ldi	r31, 0x00	; 0
    1664:	8a 81       	ldd	r24, Y+2	; 0x02
    1666:	9b 81       	ldd	r25, Y+3	; 0x03
    1668:	00 97       	sbiw	r24, 0x00	; 0
    166a:	19 f0       	breq	.+6      	; 0x1672 <free+0xe4>
    166c:	fe 01       	movw	r30, r28
    166e:	ec 01       	movw	r28, r24
    1670:	f9 cf       	rjmp	.-14     	; 0x1664 <free+0xd6>
    1672:	ce 01       	movw	r24, r28
    1674:	02 96       	adiw	r24, 0x02	; 2
    1676:	28 81       	ld	r18, Y
    1678:	39 81       	ldd	r19, Y+1	; 0x01
    167a:	82 0f       	add	r24, r18
    167c:	93 1f       	adc	r25, r19
    167e:	20 91 69 03 	lds	r18, 0x0369
    1682:	30 91 6a 03 	lds	r19, 0x036A
    1686:	28 17       	cp	r18, r24
    1688:	39 07       	cpc	r19, r25
    168a:	69 f4       	brne	.+26     	; 0x16a6 <free+0x118>
    168c:	30 97       	sbiw	r30, 0x00	; 0
    168e:	29 f4       	brne	.+10     	; 0x169a <free+0x10c>
    1690:	10 92 6c 03 	sts	0x036C, r1
    1694:	10 92 6b 03 	sts	0x036B, r1
    1698:	02 c0       	rjmp	.+4      	; 0x169e <free+0x110>
    169a:	13 82       	std	Z+3, r1	; 0x03
    169c:	12 82       	std	Z+2, r1	; 0x02
    169e:	d0 93 6a 03 	sts	0x036A, r29
    16a2:	c0 93 69 03 	sts	0x0369, r28
    16a6:	df 91       	pop	r29
    16a8:	cf 91       	pop	r28
    16aa:	08 95       	ret

000016ac <atoi>:
    16ac:	fc 01       	movw	r30, r24
    16ae:	88 27       	eor	r24, r24
    16b0:	99 27       	eor	r25, r25
    16b2:	e8 94       	clt
    16b4:	21 91       	ld	r18, Z+
    16b6:	20 32       	cpi	r18, 0x20	; 32
    16b8:	e9 f3       	breq	.-6      	; 0x16b4 <atoi+0x8>
    16ba:	29 30       	cpi	r18, 0x09	; 9
    16bc:	10 f0       	brcs	.+4      	; 0x16c2 <atoi+0x16>
    16be:	2e 30       	cpi	r18, 0x0E	; 14
    16c0:	c8 f3       	brcs	.-14     	; 0x16b4 <atoi+0x8>
    16c2:	2b 32       	cpi	r18, 0x2B	; 43
    16c4:	41 f0       	breq	.+16     	; 0x16d6 <atoi+0x2a>
    16c6:	2d 32       	cpi	r18, 0x2D	; 45
    16c8:	39 f4       	brne	.+14     	; 0x16d8 <atoi+0x2c>
    16ca:	68 94       	set
    16cc:	04 c0       	rjmp	.+8      	; 0x16d6 <atoi+0x2a>
    16ce:	0e 94 74 0b 	call	0x16e8	; 0x16e8 <__mulhi_const_10>
    16d2:	82 0f       	add	r24, r18
    16d4:	91 1d       	adc	r25, r1
    16d6:	21 91       	ld	r18, Z+
    16d8:	20 53       	subi	r18, 0x30	; 48
    16da:	2a 30       	cpi	r18, 0x0A	; 10
    16dc:	c0 f3       	brcs	.-16     	; 0x16ce <atoi+0x22>
    16de:	1e f4       	brtc	.+6      	; 0x16e6 <atoi+0x3a>
    16e0:	90 95       	com	r25
    16e2:	81 95       	neg	r24
    16e4:	9f 4f       	sbci	r25, 0xFF	; 255
    16e6:	08 95       	ret

000016e8 <__mulhi_const_10>:
    16e8:	7a e0       	ldi	r23, 0x0A	; 10
    16ea:	97 9f       	mul	r25, r23
    16ec:	90 2d       	mov	r25, r0
    16ee:	87 9f       	mul	r24, r23
    16f0:	80 2d       	mov	r24, r0
    16f2:	91 0d       	add	r25, r1
    16f4:	11 24       	eor	r1, r1
    16f6:	08 95       	ret

000016f8 <sprintf>:
    16f8:	0f 93       	push	r16
    16fa:	1f 93       	push	r17
    16fc:	cf 93       	push	r28
    16fe:	df 93       	push	r29
    1700:	cd b7       	in	r28, 0x3d	; 61
    1702:	de b7       	in	r29, 0x3e	; 62
    1704:	2e 97       	sbiw	r28, 0x0e	; 14
    1706:	0f b6       	in	r0, 0x3f	; 63
    1708:	f8 94       	cli
    170a:	de bf       	out	0x3e, r29	; 62
    170c:	0f be       	out	0x3f, r0	; 63
    170e:	cd bf       	out	0x3d, r28	; 61
    1710:	0d 89       	ldd	r16, Y+21	; 0x15
    1712:	1e 89       	ldd	r17, Y+22	; 0x16
    1714:	86 e0       	ldi	r24, 0x06	; 6
    1716:	8c 83       	std	Y+4, r24	; 0x04
    1718:	1a 83       	std	Y+2, r17	; 0x02
    171a:	09 83       	std	Y+1, r16	; 0x01
    171c:	8f ef       	ldi	r24, 0xFF	; 255
    171e:	9f e7       	ldi	r25, 0x7F	; 127
    1720:	9e 83       	std	Y+6, r25	; 0x06
    1722:	8d 83       	std	Y+5, r24	; 0x05
    1724:	ae 01       	movw	r20, r28
    1726:	47 5e       	subi	r20, 0xE7	; 231
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	6f 89       	ldd	r22, Y+23	; 0x17
    172c:	78 8d       	ldd	r23, Y+24	; 0x18
    172e:	ce 01       	movw	r24, r28
    1730:	01 96       	adiw	r24, 0x01	; 1
    1732:	0e 94 ab 0b 	call	0x1756	; 0x1756 <vfprintf>
    1736:	ef 81       	ldd	r30, Y+7	; 0x07
    1738:	f8 85       	ldd	r31, Y+8	; 0x08
    173a:	e0 0f       	add	r30, r16
    173c:	f1 1f       	adc	r31, r17
    173e:	10 82       	st	Z, r1
    1740:	2e 96       	adiw	r28, 0x0e	; 14
    1742:	0f b6       	in	r0, 0x3f	; 63
    1744:	f8 94       	cli
    1746:	de bf       	out	0x3e, r29	; 62
    1748:	0f be       	out	0x3f, r0	; 63
    174a:	cd bf       	out	0x3d, r28	; 61
    174c:	df 91       	pop	r29
    174e:	cf 91       	pop	r28
    1750:	1f 91       	pop	r17
    1752:	0f 91       	pop	r16
    1754:	08 95       	ret

00001756 <vfprintf>:
    1756:	2f 92       	push	r2
    1758:	3f 92       	push	r3
    175a:	4f 92       	push	r4
    175c:	5f 92       	push	r5
    175e:	6f 92       	push	r6
    1760:	7f 92       	push	r7
    1762:	8f 92       	push	r8
    1764:	9f 92       	push	r9
    1766:	af 92       	push	r10
    1768:	bf 92       	push	r11
    176a:	cf 92       	push	r12
    176c:	df 92       	push	r13
    176e:	ef 92       	push	r14
    1770:	ff 92       	push	r15
    1772:	0f 93       	push	r16
    1774:	1f 93       	push	r17
    1776:	cf 93       	push	r28
    1778:	df 93       	push	r29
    177a:	cd b7       	in	r28, 0x3d	; 61
    177c:	de b7       	in	r29, 0x3e	; 62
    177e:	2c 97       	sbiw	r28, 0x0c	; 12
    1780:	0f b6       	in	r0, 0x3f	; 63
    1782:	f8 94       	cli
    1784:	de bf       	out	0x3e, r29	; 62
    1786:	0f be       	out	0x3f, r0	; 63
    1788:	cd bf       	out	0x3d, r28	; 61
    178a:	7c 01       	movw	r14, r24
    178c:	6b 01       	movw	r12, r22
    178e:	8a 01       	movw	r16, r20
    1790:	fc 01       	movw	r30, r24
    1792:	17 82       	std	Z+7, r1	; 0x07
    1794:	16 82       	std	Z+6, r1	; 0x06
    1796:	83 81       	ldd	r24, Z+3	; 0x03
    1798:	81 ff       	sbrs	r24, 1
    179a:	bd c1       	rjmp	.+890    	; 0x1b16 <vfprintf+0x3c0>
    179c:	ce 01       	movw	r24, r28
    179e:	01 96       	adiw	r24, 0x01	; 1
    17a0:	4c 01       	movw	r8, r24
    17a2:	f7 01       	movw	r30, r14
    17a4:	93 81       	ldd	r25, Z+3	; 0x03
    17a6:	f6 01       	movw	r30, r12
    17a8:	93 fd       	sbrc	r25, 3
    17aa:	85 91       	lpm	r24, Z+
    17ac:	93 ff       	sbrs	r25, 3
    17ae:	81 91       	ld	r24, Z+
    17b0:	6f 01       	movw	r12, r30
    17b2:	88 23       	and	r24, r24
    17b4:	09 f4       	brne	.+2      	; 0x17b8 <vfprintf+0x62>
    17b6:	ab c1       	rjmp	.+854    	; 0x1b0e <vfprintf+0x3b8>
    17b8:	85 32       	cpi	r24, 0x25	; 37
    17ba:	39 f4       	brne	.+14     	; 0x17ca <vfprintf+0x74>
    17bc:	93 fd       	sbrc	r25, 3
    17be:	85 91       	lpm	r24, Z+
    17c0:	93 ff       	sbrs	r25, 3
    17c2:	81 91       	ld	r24, Z+
    17c4:	6f 01       	movw	r12, r30
    17c6:	85 32       	cpi	r24, 0x25	; 37
    17c8:	29 f4       	brne	.+10     	; 0x17d4 <vfprintf+0x7e>
    17ca:	b7 01       	movw	r22, r14
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    17d2:	e7 cf       	rjmp	.-50     	; 0x17a2 <vfprintf+0x4c>
    17d4:	51 2c       	mov	r5, r1
    17d6:	31 2c       	mov	r3, r1
    17d8:	20 e0       	ldi	r18, 0x00	; 0
    17da:	20 32       	cpi	r18, 0x20	; 32
    17dc:	a0 f4       	brcc	.+40     	; 0x1806 <vfprintf+0xb0>
    17de:	8b 32       	cpi	r24, 0x2B	; 43
    17e0:	69 f0       	breq	.+26     	; 0x17fc <vfprintf+0xa6>
    17e2:	30 f4       	brcc	.+12     	; 0x17f0 <vfprintf+0x9a>
    17e4:	80 32       	cpi	r24, 0x20	; 32
    17e6:	59 f0       	breq	.+22     	; 0x17fe <vfprintf+0xa8>
    17e8:	83 32       	cpi	r24, 0x23	; 35
    17ea:	69 f4       	brne	.+26     	; 0x1806 <vfprintf+0xb0>
    17ec:	20 61       	ori	r18, 0x10	; 16
    17ee:	2c c0       	rjmp	.+88     	; 0x1848 <vfprintf+0xf2>
    17f0:	8d 32       	cpi	r24, 0x2D	; 45
    17f2:	39 f0       	breq	.+14     	; 0x1802 <vfprintf+0xac>
    17f4:	80 33       	cpi	r24, 0x30	; 48
    17f6:	39 f4       	brne	.+14     	; 0x1806 <vfprintf+0xb0>
    17f8:	21 60       	ori	r18, 0x01	; 1
    17fa:	26 c0       	rjmp	.+76     	; 0x1848 <vfprintf+0xf2>
    17fc:	22 60       	ori	r18, 0x02	; 2
    17fe:	24 60       	ori	r18, 0x04	; 4
    1800:	23 c0       	rjmp	.+70     	; 0x1848 <vfprintf+0xf2>
    1802:	28 60       	ori	r18, 0x08	; 8
    1804:	21 c0       	rjmp	.+66     	; 0x1848 <vfprintf+0xf2>
    1806:	27 fd       	sbrc	r18, 7
    1808:	27 c0       	rjmp	.+78     	; 0x1858 <vfprintf+0x102>
    180a:	30 ed       	ldi	r19, 0xD0	; 208
    180c:	38 0f       	add	r19, r24
    180e:	3a 30       	cpi	r19, 0x0A	; 10
    1810:	78 f4       	brcc	.+30     	; 0x1830 <vfprintf+0xda>
    1812:	26 ff       	sbrs	r18, 6
    1814:	06 c0       	rjmp	.+12     	; 0x1822 <vfprintf+0xcc>
    1816:	fa e0       	ldi	r31, 0x0A	; 10
    1818:	5f 9e       	mul	r5, r31
    181a:	30 0d       	add	r19, r0
    181c:	11 24       	eor	r1, r1
    181e:	53 2e       	mov	r5, r19
    1820:	13 c0       	rjmp	.+38     	; 0x1848 <vfprintf+0xf2>
    1822:	8a e0       	ldi	r24, 0x0A	; 10
    1824:	38 9e       	mul	r3, r24
    1826:	30 0d       	add	r19, r0
    1828:	11 24       	eor	r1, r1
    182a:	33 2e       	mov	r3, r19
    182c:	20 62       	ori	r18, 0x20	; 32
    182e:	0c c0       	rjmp	.+24     	; 0x1848 <vfprintf+0xf2>
    1830:	8e 32       	cpi	r24, 0x2E	; 46
    1832:	21 f4       	brne	.+8      	; 0x183c <vfprintf+0xe6>
    1834:	26 fd       	sbrc	r18, 6
    1836:	6b c1       	rjmp	.+726    	; 0x1b0e <vfprintf+0x3b8>
    1838:	20 64       	ori	r18, 0x40	; 64
    183a:	06 c0       	rjmp	.+12     	; 0x1848 <vfprintf+0xf2>
    183c:	8c 36       	cpi	r24, 0x6C	; 108
    183e:	11 f4       	brne	.+4      	; 0x1844 <vfprintf+0xee>
    1840:	20 68       	ori	r18, 0x80	; 128
    1842:	02 c0       	rjmp	.+4      	; 0x1848 <vfprintf+0xf2>
    1844:	88 36       	cpi	r24, 0x68	; 104
    1846:	41 f4       	brne	.+16     	; 0x1858 <vfprintf+0x102>
    1848:	f6 01       	movw	r30, r12
    184a:	93 fd       	sbrc	r25, 3
    184c:	85 91       	lpm	r24, Z+
    184e:	93 ff       	sbrs	r25, 3
    1850:	81 91       	ld	r24, Z+
    1852:	6f 01       	movw	r12, r30
    1854:	81 11       	cpse	r24, r1
    1856:	c1 cf       	rjmp	.-126    	; 0x17da <vfprintf+0x84>
    1858:	98 2f       	mov	r25, r24
    185a:	9f 7d       	andi	r25, 0xDF	; 223
    185c:	95 54       	subi	r25, 0x45	; 69
    185e:	93 30       	cpi	r25, 0x03	; 3
    1860:	28 f4       	brcc	.+10     	; 0x186c <vfprintf+0x116>
    1862:	0c 5f       	subi	r16, 0xFC	; 252
    1864:	1f 4f       	sbci	r17, 0xFF	; 255
    1866:	ff e3       	ldi	r31, 0x3F	; 63
    1868:	f9 83       	std	Y+1, r31	; 0x01
    186a:	0d c0       	rjmp	.+26     	; 0x1886 <vfprintf+0x130>
    186c:	83 36       	cpi	r24, 0x63	; 99
    186e:	31 f0       	breq	.+12     	; 0x187c <vfprintf+0x126>
    1870:	83 37       	cpi	r24, 0x73	; 115
    1872:	71 f0       	breq	.+28     	; 0x1890 <vfprintf+0x13a>
    1874:	83 35       	cpi	r24, 0x53	; 83
    1876:	09 f0       	breq	.+2      	; 0x187a <vfprintf+0x124>
    1878:	5b c0       	rjmp	.+182    	; 0x1930 <vfprintf+0x1da>
    187a:	22 c0       	rjmp	.+68     	; 0x18c0 <vfprintf+0x16a>
    187c:	f8 01       	movw	r30, r16
    187e:	80 81       	ld	r24, Z
    1880:	89 83       	std	Y+1, r24	; 0x01
    1882:	0e 5f       	subi	r16, 0xFE	; 254
    1884:	1f 4f       	sbci	r17, 0xFF	; 255
    1886:	44 24       	eor	r4, r4
    1888:	43 94       	inc	r4
    188a:	51 2c       	mov	r5, r1
    188c:	54 01       	movw	r10, r8
    188e:	15 c0       	rjmp	.+42     	; 0x18ba <vfprintf+0x164>
    1890:	38 01       	movw	r6, r16
    1892:	f2 e0       	ldi	r31, 0x02	; 2
    1894:	6f 0e       	add	r6, r31
    1896:	71 1c       	adc	r7, r1
    1898:	f8 01       	movw	r30, r16
    189a:	a0 80       	ld	r10, Z
    189c:	b1 80       	ldd	r11, Z+1	; 0x01
    189e:	26 ff       	sbrs	r18, 6
    18a0:	03 c0       	rjmp	.+6      	; 0x18a8 <vfprintf+0x152>
    18a2:	65 2d       	mov	r22, r5
    18a4:	70 e0       	ldi	r23, 0x00	; 0
    18a6:	02 c0       	rjmp	.+4      	; 0x18ac <vfprintf+0x156>
    18a8:	6f ef       	ldi	r22, 0xFF	; 255
    18aa:	7f ef       	ldi	r23, 0xFF	; 255
    18ac:	c5 01       	movw	r24, r10
    18ae:	2c 87       	std	Y+12, r18	; 0x0c
    18b0:	0e 94 dd 0d 	call	0x1bba	; 0x1bba <strnlen>
    18b4:	2c 01       	movw	r4, r24
    18b6:	83 01       	movw	r16, r6
    18b8:	2c 85       	ldd	r18, Y+12	; 0x0c
    18ba:	2f 77       	andi	r18, 0x7F	; 127
    18bc:	22 2e       	mov	r2, r18
    18be:	17 c0       	rjmp	.+46     	; 0x18ee <vfprintf+0x198>
    18c0:	38 01       	movw	r6, r16
    18c2:	f2 e0       	ldi	r31, 0x02	; 2
    18c4:	6f 0e       	add	r6, r31
    18c6:	71 1c       	adc	r7, r1
    18c8:	f8 01       	movw	r30, r16
    18ca:	a0 80       	ld	r10, Z
    18cc:	b1 80       	ldd	r11, Z+1	; 0x01
    18ce:	26 ff       	sbrs	r18, 6
    18d0:	03 c0       	rjmp	.+6      	; 0x18d8 <vfprintf+0x182>
    18d2:	65 2d       	mov	r22, r5
    18d4:	70 e0       	ldi	r23, 0x00	; 0
    18d6:	02 c0       	rjmp	.+4      	; 0x18dc <vfprintf+0x186>
    18d8:	6f ef       	ldi	r22, 0xFF	; 255
    18da:	7f ef       	ldi	r23, 0xFF	; 255
    18dc:	c5 01       	movw	r24, r10
    18de:	2c 87       	std	Y+12, r18	; 0x0c
    18e0:	0e 94 d2 0d 	call	0x1ba4	; 0x1ba4 <strnlen_P>
    18e4:	2c 01       	movw	r4, r24
    18e6:	2c 85       	ldd	r18, Y+12	; 0x0c
    18e8:	20 68       	ori	r18, 0x80	; 128
    18ea:	22 2e       	mov	r2, r18
    18ec:	83 01       	movw	r16, r6
    18ee:	23 fc       	sbrc	r2, 3
    18f0:	1b c0       	rjmp	.+54     	; 0x1928 <vfprintf+0x1d2>
    18f2:	83 2d       	mov	r24, r3
    18f4:	90 e0       	ldi	r25, 0x00	; 0
    18f6:	48 16       	cp	r4, r24
    18f8:	59 06       	cpc	r5, r25
    18fa:	b0 f4       	brcc	.+44     	; 0x1928 <vfprintf+0x1d2>
    18fc:	b7 01       	movw	r22, r14
    18fe:	80 e2       	ldi	r24, 0x20	; 32
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1906:	3a 94       	dec	r3
    1908:	f4 cf       	rjmp	.-24     	; 0x18f2 <vfprintf+0x19c>
    190a:	f5 01       	movw	r30, r10
    190c:	27 fc       	sbrc	r2, 7
    190e:	85 91       	lpm	r24, Z+
    1910:	27 fe       	sbrs	r2, 7
    1912:	81 91       	ld	r24, Z+
    1914:	5f 01       	movw	r10, r30
    1916:	b7 01       	movw	r22, r14
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    191e:	31 10       	cpse	r3, r1
    1920:	3a 94       	dec	r3
    1922:	f1 e0       	ldi	r31, 0x01	; 1
    1924:	4f 1a       	sub	r4, r31
    1926:	51 08       	sbc	r5, r1
    1928:	41 14       	cp	r4, r1
    192a:	51 04       	cpc	r5, r1
    192c:	71 f7       	brne	.-36     	; 0x190a <vfprintf+0x1b4>
    192e:	e5 c0       	rjmp	.+458    	; 0x1afa <vfprintf+0x3a4>
    1930:	84 36       	cpi	r24, 0x64	; 100
    1932:	11 f0       	breq	.+4      	; 0x1938 <vfprintf+0x1e2>
    1934:	89 36       	cpi	r24, 0x69	; 105
    1936:	39 f5       	brne	.+78     	; 0x1986 <vfprintf+0x230>
    1938:	f8 01       	movw	r30, r16
    193a:	27 ff       	sbrs	r18, 7
    193c:	07 c0       	rjmp	.+14     	; 0x194c <vfprintf+0x1f6>
    193e:	60 81       	ld	r22, Z
    1940:	71 81       	ldd	r23, Z+1	; 0x01
    1942:	82 81       	ldd	r24, Z+2	; 0x02
    1944:	93 81       	ldd	r25, Z+3	; 0x03
    1946:	0c 5f       	subi	r16, 0xFC	; 252
    1948:	1f 4f       	sbci	r17, 0xFF	; 255
    194a:	08 c0       	rjmp	.+16     	; 0x195c <vfprintf+0x206>
    194c:	60 81       	ld	r22, Z
    194e:	71 81       	ldd	r23, Z+1	; 0x01
    1950:	88 27       	eor	r24, r24
    1952:	77 fd       	sbrc	r23, 7
    1954:	80 95       	com	r24
    1956:	98 2f       	mov	r25, r24
    1958:	0e 5f       	subi	r16, 0xFE	; 254
    195a:	1f 4f       	sbci	r17, 0xFF	; 255
    195c:	2f 76       	andi	r18, 0x6F	; 111
    195e:	b2 2e       	mov	r11, r18
    1960:	97 ff       	sbrs	r25, 7
    1962:	09 c0       	rjmp	.+18     	; 0x1976 <vfprintf+0x220>
    1964:	90 95       	com	r25
    1966:	80 95       	com	r24
    1968:	70 95       	com	r23
    196a:	61 95       	neg	r22
    196c:	7f 4f       	sbci	r23, 0xFF	; 255
    196e:	8f 4f       	sbci	r24, 0xFF	; 255
    1970:	9f 4f       	sbci	r25, 0xFF	; 255
    1972:	20 68       	ori	r18, 0x80	; 128
    1974:	b2 2e       	mov	r11, r18
    1976:	2a e0       	ldi	r18, 0x0A	; 10
    1978:	30 e0       	ldi	r19, 0x00	; 0
    197a:	a4 01       	movw	r20, r8
    197c:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__ultoa_invert>
    1980:	a8 2e       	mov	r10, r24
    1982:	a8 18       	sub	r10, r8
    1984:	44 c0       	rjmp	.+136    	; 0x1a0e <vfprintf+0x2b8>
    1986:	85 37       	cpi	r24, 0x75	; 117
    1988:	29 f4       	brne	.+10     	; 0x1994 <vfprintf+0x23e>
    198a:	2f 7e       	andi	r18, 0xEF	; 239
    198c:	b2 2e       	mov	r11, r18
    198e:	2a e0       	ldi	r18, 0x0A	; 10
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	25 c0       	rjmp	.+74     	; 0x19de <vfprintf+0x288>
    1994:	f2 2f       	mov	r31, r18
    1996:	f9 7f       	andi	r31, 0xF9	; 249
    1998:	bf 2e       	mov	r11, r31
    199a:	8f 36       	cpi	r24, 0x6F	; 111
    199c:	c1 f0       	breq	.+48     	; 0x19ce <vfprintf+0x278>
    199e:	18 f4       	brcc	.+6      	; 0x19a6 <vfprintf+0x250>
    19a0:	88 35       	cpi	r24, 0x58	; 88
    19a2:	79 f0       	breq	.+30     	; 0x19c2 <vfprintf+0x26c>
    19a4:	b4 c0       	rjmp	.+360    	; 0x1b0e <vfprintf+0x3b8>
    19a6:	80 37       	cpi	r24, 0x70	; 112
    19a8:	19 f0       	breq	.+6      	; 0x19b0 <vfprintf+0x25a>
    19aa:	88 37       	cpi	r24, 0x78	; 120
    19ac:	21 f0       	breq	.+8      	; 0x19b6 <vfprintf+0x260>
    19ae:	af c0       	rjmp	.+350    	; 0x1b0e <vfprintf+0x3b8>
    19b0:	2f 2f       	mov	r18, r31
    19b2:	20 61       	ori	r18, 0x10	; 16
    19b4:	b2 2e       	mov	r11, r18
    19b6:	b4 fe       	sbrs	r11, 4
    19b8:	0d c0       	rjmp	.+26     	; 0x19d4 <vfprintf+0x27e>
    19ba:	8b 2d       	mov	r24, r11
    19bc:	84 60       	ori	r24, 0x04	; 4
    19be:	b8 2e       	mov	r11, r24
    19c0:	09 c0       	rjmp	.+18     	; 0x19d4 <vfprintf+0x27e>
    19c2:	24 ff       	sbrs	r18, 4
    19c4:	0a c0       	rjmp	.+20     	; 0x19da <vfprintf+0x284>
    19c6:	9f 2f       	mov	r25, r31
    19c8:	96 60       	ori	r25, 0x06	; 6
    19ca:	b9 2e       	mov	r11, r25
    19cc:	06 c0       	rjmp	.+12     	; 0x19da <vfprintf+0x284>
    19ce:	28 e0       	ldi	r18, 0x08	; 8
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <vfprintf+0x288>
    19d4:	20 e1       	ldi	r18, 0x10	; 16
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <vfprintf+0x288>
    19da:	20 e1       	ldi	r18, 0x10	; 16
    19dc:	32 e0       	ldi	r19, 0x02	; 2
    19de:	f8 01       	movw	r30, r16
    19e0:	b7 fe       	sbrs	r11, 7
    19e2:	07 c0       	rjmp	.+14     	; 0x19f2 <vfprintf+0x29c>
    19e4:	60 81       	ld	r22, Z
    19e6:	71 81       	ldd	r23, Z+1	; 0x01
    19e8:	82 81       	ldd	r24, Z+2	; 0x02
    19ea:	93 81       	ldd	r25, Z+3	; 0x03
    19ec:	0c 5f       	subi	r16, 0xFC	; 252
    19ee:	1f 4f       	sbci	r17, 0xFF	; 255
    19f0:	06 c0       	rjmp	.+12     	; 0x19fe <vfprintf+0x2a8>
    19f2:	60 81       	ld	r22, Z
    19f4:	71 81       	ldd	r23, Z+1	; 0x01
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	0e 5f       	subi	r16, 0xFE	; 254
    19fc:	1f 4f       	sbci	r17, 0xFF	; 255
    19fe:	a4 01       	movw	r20, r8
    1a00:	0e 94 1a 0e 	call	0x1c34	; 0x1c34 <__ultoa_invert>
    1a04:	a8 2e       	mov	r10, r24
    1a06:	a8 18       	sub	r10, r8
    1a08:	fb 2d       	mov	r31, r11
    1a0a:	ff 77       	andi	r31, 0x7F	; 127
    1a0c:	bf 2e       	mov	r11, r31
    1a0e:	b6 fe       	sbrs	r11, 6
    1a10:	0b c0       	rjmp	.+22     	; 0x1a28 <vfprintf+0x2d2>
    1a12:	2b 2d       	mov	r18, r11
    1a14:	2e 7f       	andi	r18, 0xFE	; 254
    1a16:	a5 14       	cp	r10, r5
    1a18:	50 f4       	brcc	.+20     	; 0x1a2e <vfprintf+0x2d8>
    1a1a:	b4 fe       	sbrs	r11, 4
    1a1c:	0a c0       	rjmp	.+20     	; 0x1a32 <vfprintf+0x2dc>
    1a1e:	b2 fc       	sbrc	r11, 2
    1a20:	08 c0       	rjmp	.+16     	; 0x1a32 <vfprintf+0x2dc>
    1a22:	2b 2d       	mov	r18, r11
    1a24:	2e 7e       	andi	r18, 0xEE	; 238
    1a26:	05 c0       	rjmp	.+10     	; 0x1a32 <vfprintf+0x2dc>
    1a28:	7a 2c       	mov	r7, r10
    1a2a:	2b 2d       	mov	r18, r11
    1a2c:	03 c0       	rjmp	.+6      	; 0x1a34 <vfprintf+0x2de>
    1a2e:	7a 2c       	mov	r7, r10
    1a30:	01 c0       	rjmp	.+2      	; 0x1a34 <vfprintf+0x2de>
    1a32:	75 2c       	mov	r7, r5
    1a34:	24 ff       	sbrs	r18, 4
    1a36:	0d c0       	rjmp	.+26     	; 0x1a52 <vfprintf+0x2fc>
    1a38:	fe 01       	movw	r30, r28
    1a3a:	ea 0d       	add	r30, r10
    1a3c:	f1 1d       	adc	r31, r1
    1a3e:	80 81       	ld	r24, Z
    1a40:	80 33       	cpi	r24, 0x30	; 48
    1a42:	11 f4       	brne	.+4      	; 0x1a48 <vfprintf+0x2f2>
    1a44:	29 7e       	andi	r18, 0xE9	; 233
    1a46:	09 c0       	rjmp	.+18     	; 0x1a5a <vfprintf+0x304>
    1a48:	22 ff       	sbrs	r18, 2
    1a4a:	06 c0       	rjmp	.+12     	; 0x1a58 <vfprintf+0x302>
    1a4c:	73 94       	inc	r7
    1a4e:	73 94       	inc	r7
    1a50:	04 c0       	rjmp	.+8      	; 0x1a5a <vfprintf+0x304>
    1a52:	82 2f       	mov	r24, r18
    1a54:	86 78       	andi	r24, 0x86	; 134
    1a56:	09 f0       	breq	.+2      	; 0x1a5a <vfprintf+0x304>
    1a58:	73 94       	inc	r7
    1a5a:	23 fd       	sbrc	r18, 3
    1a5c:	13 c0       	rjmp	.+38     	; 0x1a84 <vfprintf+0x32e>
    1a5e:	20 ff       	sbrs	r18, 0
    1a60:	06 c0       	rjmp	.+12     	; 0x1a6e <vfprintf+0x318>
    1a62:	5a 2c       	mov	r5, r10
    1a64:	73 14       	cp	r7, r3
    1a66:	18 f4       	brcc	.+6      	; 0x1a6e <vfprintf+0x318>
    1a68:	53 0c       	add	r5, r3
    1a6a:	57 18       	sub	r5, r7
    1a6c:	73 2c       	mov	r7, r3
    1a6e:	73 14       	cp	r7, r3
    1a70:	68 f4       	brcc	.+26     	; 0x1a8c <vfprintf+0x336>
    1a72:	b7 01       	movw	r22, r14
    1a74:	80 e2       	ldi	r24, 0x20	; 32
    1a76:	90 e0       	ldi	r25, 0x00	; 0
    1a78:	2c 87       	std	Y+12, r18	; 0x0c
    1a7a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1a7e:	73 94       	inc	r7
    1a80:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a82:	f5 cf       	rjmp	.-22     	; 0x1a6e <vfprintf+0x318>
    1a84:	73 14       	cp	r7, r3
    1a86:	10 f4       	brcc	.+4      	; 0x1a8c <vfprintf+0x336>
    1a88:	37 18       	sub	r3, r7
    1a8a:	01 c0       	rjmp	.+2      	; 0x1a8e <vfprintf+0x338>
    1a8c:	31 2c       	mov	r3, r1
    1a8e:	24 ff       	sbrs	r18, 4
    1a90:	12 c0       	rjmp	.+36     	; 0x1ab6 <vfprintf+0x360>
    1a92:	b7 01       	movw	r22, r14
    1a94:	80 e3       	ldi	r24, 0x30	; 48
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	2c 87       	std	Y+12, r18	; 0x0c
    1a9a:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1a9e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1aa0:	22 ff       	sbrs	r18, 2
    1aa2:	17 c0       	rjmp	.+46     	; 0x1ad2 <vfprintf+0x37c>
    1aa4:	21 ff       	sbrs	r18, 1
    1aa6:	03 c0       	rjmp	.+6      	; 0x1aae <vfprintf+0x358>
    1aa8:	88 e5       	ldi	r24, 0x58	; 88
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	02 c0       	rjmp	.+4      	; 0x1ab2 <vfprintf+0x35c>
    1aae:	88 e7       	ldi	r24, 0x78	; 120
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	b7 01       	movw	r22, r14
    1ab4:	0c c0       	rjmp	.+24     	; 0x1ace <vfprintf+0x378>
    1ab6:	82 2f       	mov	r24, r18
    1ab8:	86 78       	andi	r24, 0x86	; 134
    1aba:	59 f0       	breq	.+22     	; 0x1ad2 <vfprintf+0x37c>
    1abc:	21 fd       	sbrc	r18, 1
    1abe:	02 c0       	rjmp	.+4      	; 0x1ac4 <vfprintf+0x36e>
    1ac0:	80 e2       	ldi	r24, 0x20	; 32
    1ac2:	01 c0       	rjmp	.+2      	; 0x1ac6 <vfprintf+0x370>
    1ac4:	8b e2       	ldi	r24, 0x2B	; 43
    1ac6:	27 fd       	sbrc	r18, 7
    1ac8:	8d e2       	ldi	r24, 0x2D	; 45
    1aca:	b7 01       	movw	r22, r14
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1ad2:	a5 14       	cp	r10, r5
    1ad4:	38 f4       	brcc	.+14     	; 0x1ae4 <vfprintf+0x38e>
    1ad6:	b7 01       	movw	r22, r14
    1ad8:	80 e3       	ldi	r24, 0x30	; 48
    1ada:	90 e0       	ldi	r25, 0x00	; 0
    1adc:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1ae0:	5a 94       	dec	r5
    1ae2:	f7 cf       	rjmp	.-18     	; 0x1ad2 <vfprintf+0x37c>
    1ae4:	aa 94       	dec	r10
    1ae6:	f4 01       	movw	r30, r8
    1ae8:	ea 0d       	add	r30, r10
    1aea:	f1 1d       	adc	r31, r1
    1aec:	80 81       	ld	r24, Z
    1aee:	b7 01       	movw	r22, r14
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1af6:	a1 10       	cpse	r10, r1
    1af8:	f5 cf       	rjmp	.-22     	; 0x1ae4 <vfprintf+0x38e>
    1afa:	33 20       	and	r3, r3
    1afc:	09 f4       	brne	.+2      	; 0x1b00 <vfprintf+0x3aa>
    1afe:	51 ce       	rjmp	.-862    	; 0x17a2 <vfprintf+0x4c>
    1b00:	b7 01       	movw	r22, r14
    1b02:	80 e2       	ldi	r24, 0x20	; 32
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <fputc>
    1b0a:	3a 94       	dec	r3
    1b0c:	f6 cf       	rjmp	.-20     	; 0x1afa <vfprintf+0x3a4>
    1b0e:	f7 01       	movw	r30, r14
    1b10:	86 81       	ldd	r24, Z+6	; 0x06
    1b12:	97 81       	ldd	r25, Z+7	; 0x07
    1b14:	02 c0       	rjmp	.+4      	; 0x1b1a <vfprintf+0x3c4>
    1b16:	8f ef       	ldi	r24, 0xFF	; 255
    1b18:	9f ef       	ldi	r25, 0xFF	; 255
    1b1a:	2c 96       	adiw	r28, 0x0c	; 12
    1b1c:	0f b6       	in	r0, 0x3f	; 63
    1b1e:	f8 94       	cli
    1b20:	de bf       	out	0x3e, r29	; 62
    1b22:	0f be       	out	0x3f, r0	; 63
    1b24:	cd bf       	out	0x3d, r28	; 61
    1b26:	df 91       	pop	r29
    1b28:	cf 91       	pop	r28
    1b2a:	1f 91       	pop	r17
    1b2c:	0f 91       	pop	r16
    1b2e:	ff 90       	pop	r15
    1b30:	ef 90       	pop	r14
    1b32:	df 90       	pop	r13
    1b34:	cf 90       	pop	r12
    1b36:	bf 90       	pop	r11
    1b38:	af 90       	pop	r10
    1b3a:	9f 90       	pop	r9
    1b3c:	8f 90       	pop	r8
    1b3e:	7f 90       	pop	r7
    1b40:	6f 90       	pop	r6
    1b42:	5f 90       	pop	r5
    1b44:	4f 90       	pop	r4
    1b46:	3f 90       	pop	r3
    1b48:	2f 90       	pop	r2
    1b4a:	08 95       	ret

00001b4c <__eerd_block_m1284p>:
    1b4c:	dc 01       	movw	r26, r24
    1b4e:	cb 01       	movw	r24, r22

00001b50 <__eerd_blraw_m1284p>:
    1b50:	fc 01       	movw	r30, r24
    1b52:	f9 99       	sbic	0x1f, 1	; 31
    1b54:	fe cf       	rjmp	.-4      	; 0x1b52 <__eerd_blraw_m1284p+0x2>
    1b56:	06 c0       	rjmp	.+12     	; 0x1b64 <__eerd_blraw_m1284p+0x14>
    1b58:	f2 bd       	out	0x22, r31	; 34
    1b5a:	e1 bd       	out	0x21, r30	; 33
    1b5c:	f8 9a       	sbi	0x1f, 0	; 31
    1b5e:	31 96       	adiw	r30, 0x01	; 1
    1b60:	00 b4       	in	r0, 0x20	; 32
    1b62:	0d 92       	st	X+, r0
    1b64:	41 50       	subi	r20, 0x01	; 1
    1b66:	50 40       	sbci	r21, 0x00	; 0
    1b68:	b8 f7       	brcc	.-18     	; 0x1b58 <__eerd_blraw_m1284p+0x8>
    1b6a:	08 95       	ret

00001b6c <__eerd_byte_m1284p>:
    1b6c:	f9 99       	sbic	0x1f, 1	; 31
    1b6e:	fe cf       	rjmp	.-4      	; 0x1b6c <__eerd_byte_m1284p>
    1b70:	92 bd       	out	0x22, r25	; 34
    1b72:	81 bd       	out	0x21, r24	; 33
    1b74:	f8 9a       	sbi	0x1f, 0	; 31
    1b76:	99 27       	eor	r25, r25
    1b78:	80 b5       	in	r24, 0x20	; 32
    1b7a:	08 95       	ret

00001b7c <__eerd_dword_m1284p>:
    1b7c:	a6 e1       	ldi	r26, 0x16	; 22
    1b7e:	b0 e0       	ldi	r27, 0x00	; 0
    1b80:	44 e0       	ldi	r20, 0x04	; 4
    1b82:	50 e0       	ldi	r21, 0x00	; 0
    1b84:	0c 94 a8 0d 	jmp	0x1b50	; 0x1b50 <__eerd_blraw_m1284p>

00001b88 <__eewr_byte_m1284p>:
    1b88:	26 2f       	mov	r18, r22

00001b8a <__eewr_r18_m1284p>:
    1b8a:	f9 99       	sbic	0x1f, 1	; 31
    1b8c:	fe cf       	rjmp	.-4      	; 0x1b8a <__eewr_r18_m1284p>
    1b8e:	1f ba       	out	0x1f, r1	; 31
    1b90:	92 bd       	out	0x22, r25	; 34
    1b92:	81 bd       	out	0x21, r24	; 33
    1b94:	20 bd       	out	0x20, r18	; 32
    1b96:	0f b6       	in	r0, 0x3f	; 63
    1b98:	f8 94       	cli
    1b9a:	fa 9a       	sbi	0x1f, 2	; 31
    1b9c:	f9 9a       	sbi	0x1f, 1	; 31
    1b9e:	0f be       	out	0x3f, r0	; 63
    1ba0:	01 96       	adiw	r24, 0x01	; 1
    1ba2:	08 95       	ret

00001ba4 <strnlen_P>:
    1ba4:	fc 01       	movw	r30, r24
    1ba6:	05 90       	lpm	r0, Z+
    1ba8:	61 50       	subi	r22, 0x01	; 1
    1baa:	70 40       	sbci	r23, 0x00	; 0
    1bac:	01 10       	cpse	r0, r1
    1bae:	d8 f7       	brcc	.-10     	; 0x1ba6 <strnlen_P+0x2>
    1bb0:	80 95       	com	r24
    1bb2:	90 95       	com	r25
    1bb4:	8e 0f       	add	r24, r30
    1bb6:	9f 1f       	adc	r25, r31
    1bb8:	08 95       	ret

00001bba <strnlen>:
    1bba:	fc 01       	movw	r30, r24
    1bbc:	61 50       	subi	r22, 0x01	; 1
    1bbe:	70 40       	sbci	r23, 0x00	; 0
    1bc0:	01 90       	ld	r0, Z+
    1bc2:	01 10       	cpse	r0, r1
    1bc4:	d8 f7       	brcc	.-10     	; 0x1bbc <strnlen+0x2>
    1bc6:	80 95       	com	r24
    1bc8:	90 95       	com	r25
    1bca:	8e 0f       	add	r24, r30
    1bcc:	9f 1f       	adc	r25, r31
    1bce:	08 95       	ret

00001bd0 <fputc>:
    1bd0:	0f 93       	push	r16
    1bd2:	1f 93       	push	r17
    1bd4:	cf 93       	push	r28
    1bd6:	df 93       	push	r29
    1bd8:	18 2f       	mov	r17, r24
    1bda:	09 2f       	mov	r16, r25
    1bdc:	eb 01       	movw	r28, r22
    1bde:	8b 81       	ldd	r24, Y+3	; 0x03
    1be0:	81 fd       	sbrc	r24, 1
    1be2:	03 c0       	rjmp	.+6      	; 0x1bea <fputc+0x1a>
    1be4:	8f ef       	ldi	r24, 0xFF	; 255
    1be6:	9f ef       	ldi	r25, 0xFF	; 255
    1be8:	20 c0       	rjmp	.+64     	; 0x1c2a <fputc+0x5a>
    1bea:	82 ff       	sbrs	r24, 2
    1bec:	10 c0       	rjmp	.+32     	; 0x1c0e <fputc+0x3e>
    1bee:	4e 81       	ldd	r20, Y+6	; 0x06
    1bf0:	5f 81       	ldd	r21, Y+7	; 0x07
    1bf2:	2c 81       	ldd	r18, Y+4	; 0x04
    1bf4:	3d 81       	ldd	r19, Y+5	; 0x05
    1bf6:	42 17       	cp	r20, r18
    1bf8:	53 07       	cpc	r21, r19
    1bfa:	7c f4       	brge	.+30     	; 0x1c1a <fputc+0x4a>
    1bfc:	e8 81       	ld	r30, Y
    1bfe:	f9 81       	ldd	r31, Y+1	; 0x01
    1c00:	9f 01       	movw	r18, r30
    1c02:	2f 5f       	subi	r18, 0xFF	; 255
    1c04:	3f 4f       	sbci	r19, 0xFF	; 255
    1c06:	39 83       	std	Y+1, r19	; 0x01
    1c08:	28 83       	st	Y, r18
    1c0a:	10 83       	st	Z, r17
    1c0c:	06 c0       	rjmp	.+12     	; 0x1c1a <fputc+0x4a>
    1c0e:	e8 85       	ldd	r30, Y+8	; 0x08
    1c10:	f9 85       	ldd	r31, Y+9	; 0x09
    1c12:	81 2f       	mov	r24, r17
    1c14:	09 95       	icall
    1c16:	89 2b       	or	r24, r25
    1c18:	29 f7       	brne	.-54     	; 0x1be4 <fputc+0x14>
    1c1a:	2e 81       	ldd	r18, Y+6	; 0x06
    1c1c:	3f 81       	ldd	r19, Y+7	; 0x07
    1c1e:	2f 5f       	subi	r18, 0xFF	; 255
    1c20:	3f 4f       	sbci	r19, 0xFF	; 255
    1c22:	3f 83       	std	Y+7, r19	; 0x07
    1c24:	2e 83       	std	Y+6, r18	; 0x06
    1c26:	81 2f       	mov	r24, r17
    1c28:	90 2f       	mov	r25, r16
    1c2a:	df 91       	pop	r29
    1c2c:	cf 91       	pop	r28
    1c2e:	1f 91       	pop	r17
    1c30:	0f 91       	pop	r16
    1c32:	08 95       	ret

00001c34 <__ultoa_invert>:
    1c34:	fa 01       	movw	r30, r20
    1c36:	aa 27       	eor	r26, r26
    1c38:	28 30       	cpi	r18, 0x08	; 8
    1c3a:	51 f1       	breq	.+84     	; 0x1c90 <__ultoa_invert+0x5c>
    1c3c:	20 31       	cpi	r18, 0x10	; 16
    1c3e:	81 f1       	breq	.+96     	; 0x1ca0 <__ultoa_invert+0x6c>
    1c40:	e8 94       	clt
    1c42:	6f 93       	push	r22
    1c44:	6e 7f       	andi	r22, 0xFE	; 254
    1c46:	6e 5f       	subi	r22, 0xFE	; 254
    1c48:	7f 4f       	sbci	r23, 0xFF	; 255
    1c4a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4e:	af 4f       	sbci	r26, 0xFF	; 255
    1c50:	b1 e0       	ldi	r27, 0x01	; 1
    1c52:	3e d0       	rcall	.+124    	; 0x1cd0 <__ultoa_invert+0x9c>
    1c54:	b4 e0       	ldi	r27, 0x04	; 4
    1c56:	3c d0       	rcall	.+120    	; 0x1cd0 <__ultoa_invert+0x9c>
    1c58:	67 0f       	add	r22, r23
    1c5a:	78 1f       	adc	r23, r24
    1c5c:	89 1f       	adc	r24, r25
    1c5e:	9a 1f       	adc	r25, r26
    1c60:	a1 1d       	adc	r26, r1
    1c62:	68 0f       	add	r22, r24
    1c64:	79 1f       	adc	r23, r25
    1c66:	8a 1f       	adc	r24, r26
    1c68:	91 1d       	adc	r25, r1
    1c6a:	a1 1d       	adc	r26, r1
    1c6c:	6a 0f       	add	r22, r26
    1c6e:	71 1d       	adc	r23, r1
    1c70:	81 1d       	adc	r24, r1
    1c72:	91 1d       	adc	r25, r1
    1c74:	a1 1d       	adc	r26, r1
    1c76:	20 d0       	rcall	.+64     	; 0x1cb8 <__ultoa_invert+0x84>
    1c78:	09 f4       	brne	.+2      	; 0x1c7c <__ultoa_invert+0x48>
    1c7a:	68 94       	set
    1c7c:	3f 91       	pop	r19
    1c7e:	2a e0       	ldi	r18, 0x0A	; 10
    1c80:	26 9f       	mul	r18, r22
    1c82:	11 24       	eor	r1, r1
    1c84:	30 19       	sub	r19, r0
    1c86:	30 5d       	subi	r19, 0xD0	; 208
    1c88:	31 93       	st	Z+, r19
    1c8a:	de f6       	brtc	.-74     	; 0x1c42 <__ultoa_invert+0xe>
    1c8c:	cf 01       	movw	r24, r30
    1c8e:	08 95       	ret
    1c90:	46 2f       	mov	r20, r22
    1c92:	47 70       	andi	r20, 0x07	; 7
    1c94:	40 5d       	subi	r20, 0xD0	; 208
    1c96:	41 93       	st	Z+, r20
    1c98:	b3 e0       	ldi	r27, 0x03	; 3
    1c9a:	0f d0       	rcall	.+30     	; 0x1cba <__ultoa_invert+0x86>
    1c9c:	c9 f7       	brne	.-14     	; 0x1c90 <__ultoa_invert+0x5c>
    1c9e:	f6 cf       	rjmp	.-20     	; 0x1c8c <__ultoa_invert+0x58>
    1ca0:	46 2f       	mov	r20, r22
    1ca2:	4f 70       	andi	r20, 0x0F	; 15
    1ca4:	40 5d       	subi	r20, 0xD0	; 208
    1ca6:	4a 33       	cpi	r20, 0x3A	; 58
    1ca8:	18 f0       	brcs	.+6      	; 0x1cb0 <__ultoa_invert+0x7c>
    1caa:	49 5d       	subi	r20, 0xD9	; 217
    1cac:	31 fd       	sbrc	r19, 1
    1cae:	40 52       	subi	r20, 0x20	; 32
    1cb0:	41 93       	st	Z+, r20
    1cb2:	02 d0       	rcall	.+4      	; 0x1cb8 <__ultoa_invert+0x84>
    1cb4:	a9 f7       	brne	.-22     	; 0x1ca0 <__ultoa_invert+0x6c>
    1cb6:	ea cf       	rjmp	.-44     	; 0x1c8c <__ultoa_invert+0x58>
    1cb8:	b4 e0       	ldi	r27, 0x04	; 4
    1cba:	a6 95       	lsr	r26
    1cbc:	97 95       	ror	r25
    1cbe:	87 95       	ror	r24
    1cc0:	77 95       	ror	r23
    1cc2:	67 95       	ror	r22
    1cc4:	ba 95       	dec	r27
    1cc6:	c9 f7       	brne	.-14     	; 0x1cba <__ultoa_invert+0x86>
    1cc8:	00 97       	sbiw	r24, 0x00	; 0
    1cca:	61 05       	cpc	r22, r1
    1ccc:	71 05       	cpc	r23, r1
    1cce:	08 95       	ret
    1cd0:	9b 01       	movw	r18, r22
    1cd2:	ac 01       	movw	r20, r24
    1cd4:	0a 2e       	mov	r0, r26
    1cd6:	06 94       	lsr	r0
    1cd8:	57 95       	ror	r21
    1cda:	47 95       	ror	r20
    1cdc:	37 95       	ror	r19
    1cde:	27 95       	ror	r18
    1ce0:	ba 95       	dec	r27
    1ce2:	c9 f7       	brne	.-14     	; 0x1cd6 <__ultoa_invert+0xa2>
    1ce4:	62 0f       	add	r22, r18
    1ce6:	73 1f       	adc	r23, r19
    1ce8:	84 1f       	adc	r24, r20
    1cea:	95 1f       	adc	r25, r21
    1cec:	a0 1d       	adc	r26, r0
    1cee:	08 95       	ret

00001cf0 <_exit>:
    1cf0:	f8 94       	cli

00001cf2 <__stop_program>:
    1cf2:	ff cf       	rjmp	.-2      	; 0x1cf2 <__stop_program>
